[2025-07-14 12:44:53][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 12:44:53][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 12:44:53][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 12:45:07][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 12:45:07][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 12:45:07][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 12:45:57][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 12:45:57][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 12:45:57][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 12:46:38][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 12:46:38][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 12:46:38][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 12:46:38][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00041s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00026s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00084s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00057s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 46, 39, 638780), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 46, 39, 638790), 'birth': None, 'gender': 'female'}]
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00036s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 46, 39, 649262)}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00040s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'question_id__0': 1, 'custom_input__0': None, 'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 3, 46, 39, 1367), 'user_id__0': '1', 'question_id__1': 2, 'custom_input__1': None, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 3, 46, 39, 1395), 'user_id__1': '1', 'question_id__2': 3, 'custom_input__2': None, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 3, 46, 39, 1412), 'user_id__2': '1', 'question_id__3': 4, 'custom_input__3': None, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 3, 46, 39, 1424), 'user_id__3': '1', 'question_id__4': 5, 'custom_input__4': None, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 3, 46, 39, 1436), 'user_id__4': '1', 'question_id__5': 1, 'custom_input__5': None, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 3, 46, 39, 1446), 'user_id__5': '2', 'question_id__6': 2, 'custom_input__6': None, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 3, 46, 39, 1455), 'user_id__6': '2', 'question_id__7': 3, 'custom_input__7': None, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 3, 46, 39, 1465), 'user_id__7': '2', 'question_id__8': 4, 'custom_input__8': None, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 3, 46, 39, 1475), 'user_id__8': '2', 'question_id__9': 5, 'custom_input__9': None, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 3, 46, 39, 1489), 'user_id__9': '2'}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'memo__12': '너에 대한 애정이 넘쳤어.', 'emotion__12': '애정' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__14': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2'}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__0': None, 'has_image__0': 0, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'is_delivered__0': 1, 'deleted_at__0': None, 'embed_index__0': None, 'user_id__0': '1', 'couple_id__0': '1', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__1': None, 'has_image__1': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'is_delivered__1': 1, 'deleted_at__1': None, 'embed_index__1': None, 'user_id__1': '2', 'couple_id__1': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__2': None, 'has_image__2': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'is_delivered__2': 1, 'deleted_at__2': None, 'embed_index__2': None, 'user_id__2': '1', 'couple_id__2': '1', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__3': None, 'has_image__3': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'is_delivered__3': 1, 'deleted_at__3': None, 'embed_index__3': None, 'user_id__3': '2', 'couple_id__3': '1', 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__4': None, 'has_image__4': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'is_delivered__4': 1, 'deleted_at__4': None, 'embed_index__4': None, 'user_id__4': '2', 'couple_id__4': '1', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'image_url__5': None, 'has_image__5': 0, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'is_delivered__5': 1 ... 170 parameters truncated ... 'is_delivered__24': 1, 'deleted_at__24': None, 'embed_index__24': None, 'user_id__24': '1', 'couple_id__24': '1', 'content__25': '나도야~ 🥰', 'image_url__25': None, 'has_image__25': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'is_delivered__25': 1, 'deleted_at__25': None, 'embed_index__25': None, 'user_id__25': '2', 'couple_id__25': '1', 'content__26': '일주일 진짜 빠르다', 'image_url__26': None, 'has_image__26': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'is_delivered__26': 1, 'deleted_at__26': None, 'embed_index__26': None, 'user_id__26': '1', 'couple_id__26': '1', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__27': None, 'has_image__27': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'is_delivered__27': 1, 'deleted_at__27': None, 'embed_index__27': None, 'user_id__27': '2', 'couple_id__27': '1', 'content__28': '너 있어서 든든했어', 'image_url__28': None, 'has_image__28': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'is_delivered__28': 1, 'deleted_at__28': None, 'embed_index__28': None, 'user_id__28': '1', 'couple_id__28': '1', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'image_url__29': None, 'has_image__29': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'is_delivered__29': 1, 'deleted_at__29': None, 'embed_index__29': None, 'user_id__29': '2', 'couple_id__29': '1'}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 12:46:39][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id_1': '1'}
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:46:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 12:46:42][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 12:46:42][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:46:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 12:46:42][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 12:46:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id': '1', 'summary': '지민 places a high value on communication and seeks to build relationships through open and honest dialogue. In times of conflict, they prefer to remai ... (250 characters truncated) ... tion to maintain closeness. Ultimately, 지민 seeks a deep connection, prioritizing meaningful and profound relationships over superficial interactions.', 'created_at': datetime.datetime(2025, 7, 14, 3, 46, 42, 40242), 'updated_at': datetime.datetime(2025, 7, 14, 3, 46, 42, 40246)}
[2025-07-14 12:46:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:42][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 12:46:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:46:42][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 12:46:42][INFO][sqlalchemy.engine.Engine] [cached since 2.336s ago] {'user_id_1': '2'}
[2025-07-14 12:46:42][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:46:42][INFO][sqlalchemy.engine.Engine] [cached since 2.334s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 12:46:44][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 12:46:44][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:46:44][INFO][sqlalchemy.engine.Engine] [cached since 2.127s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 12:46:44][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 12:46:44][INFO][sqlalchemy.engine.Engine] [cached since 2.127s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of her relationships, ensuring a solid foundation in her interactions. When conflicts arise, she prefers to wait i ... (265 characters truncated) ... overwhelming. Overall, she thrives in relationships that maintain balanced independence, supporting both individual growth and a healthy partnership.', 'created_at': datetime.datetime(2025, 7, 14, 3, 46, 44, 167120), 'updated_at': datetime.datetime(2025, 7, 14, 3, 46, 44, 167124)}
[2025-07-14 12:46:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:46:44][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 12:46:44][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 12:46:44][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 12:52:40][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 12:52:40][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 12:52:40][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00033s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 52, 41, 582870), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 52, 41, 582874), 'birth': None, 'gender': 'female'}]
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 52, 41, 587868)}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'user_id__0': '1', 'submitted_at__0': datetime.datetime(2025, 7, 14, 3, 52, 41, 40773), 'choice_id__0': 2, 'question_id__0': 1, 'custom_input__1': None, 'user_id__1': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 3, 52, 41, 40800), 'choice_id__1': 8, 'question_id__1': 2, 'custom_input__2': None, 'user_id__2': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 3, 52, 41, 40813), 'choice_id__2': 13, 'question_id__2': 3, 'custom_input__3': None, 'user_id__3': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 3, 52, 41, 40829), 'choice_id__3': 21, 'question_id__3': 4, 'custom_input__4': None, 'user_id__4': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 3, 52, 41, 40846), 'choice_id__4': 26, 'question_id__4': 5, 'custom_input__5': None, 'user_id__5': '2', 'submitted_at__5': datetime.datetime(2025, 7, 14, 3, 52, 41, 40857), 'choice_id__5': 1, 'question_id__5': 1, 'custom_input__6': None, 'user_id__6': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 3, 52, 41, 40866), 'choice_id__6': 9, 'question_id__6': 2, 'custom_input__7': None, 'user_id__7': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 3, 52, 41, 40876), 'choice_id__7': 16, 'question_id__7': 3, 'custom_input__8': None, 'user_id__8': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 3, 52, 41, 40887), 'choice_id__8': 20, 'question_id__8': 4, 'custom_input__9': None, 'user_id__9': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 3, 52, 41, 40899), 'choice_id__9': 25, 'question_id__9': 5}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__12': '애정', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'user_id__14': '2', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'embed_index__0': None, 'user_id__0': '1', 'has_image__0': 0, 'image_url__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'couple_id__0': '1', 'deleted_at__0': None, 'is_delivered__0': 1, 'embed_index__1': None, 'user_id__1': '2', 'has_image__1': 0, 'image_url__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'couple_id__1': '1', 'deleted_at__1': None, 'is_delivered__1': 1, 'embed_index__2': None, 'user_id__2': '1', 'has_image__2': 0, 'image_url__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'couple_id__2': '1', 'deleted_at__2': None, 'is_delivered__2': 1, 'embed_index__3': None, 'user_id__3': '2', 'has_image__3': 0, 'image_url__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'couple_id__3': '1', 'deleted_at__3': None, 'is_delivered__3': 1, 'embed_index__4': None, 'user_id__4': '2', 'has_image__4': 0, 'image_url__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'couple_id__4': '1', 'deleted_at__4': None, 'is_delivered__4': 1, 'embed_index__5': None, 'user_id__5': '1', 'has_image__5': 0, 'image_url__5': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ' ... 170 parameters truncated ... 'content__24': '너랑 시간 보내는 거 제일 좋아', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'couple_id__24': '1', 'deleted_at__24': None, 'is_delivered__24': 1, 'embed_index__25': None, 'user_id__25': '2', 'has_image__25': 0, 'image_url__25': None, 'content__25': '나도야~ 🥰', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'couple_id__25': '1', 'deleted_at__25': None, 'is_delivered__25': 1, 'embed_index__26': None, 'user_id__26': '1', 'has_image__26': 0, 'image_url__26': None, 'content__26': '일주일 진짜 빠르다', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'couple_id__26': '1', 'deleted_at__26': None, 'is_delivered__26': 1, 'embed_index__27': None, 'user_id__27': '2', 'has_image__27': 0, 'image_url__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'couple_id__27': '1', 'deleted_at__27': None, 'is_delivered__27': 1, 'embed_index__28': None, 'user_id__28': '1', 'has_image__28': 0, 'image_url__28': None, 'content__28': '너 있어서 든든했어', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'couple_id__28': '1', 'deleted_at__28': None, 'is_delivered__28': 1, 'embed_index__29': None, 'user_id__29': '2', 'has_image__29': 0, 'image_url__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'couple_id__29': '1', 'deleted_at__29': None, 'is_delivered__29': 1}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {}
[2025-07-14 12:52:41][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1'}
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:52:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 12:52:43][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 12:52:43][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:52:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 12:52:43][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 12:52:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id': '1', 'summary': '지민 values communication in relationships and prefers to address conflicts by first cooling down and then discussing the issue. They express affection ... (250 characters truncated) ... meaningful conversations. Overall, 지민 is inclined towards fostering strong, communicative bonds built on mutual understanding and verbal affirmation.', 'created_at': datetime.datetime(2025, 7, 14, 3, 52, 43, 341743), 'updated_at': datetime.datetime(2025, 7, 14, 3, 52, 43, 341746)}
[2025-07-14 12:52:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:43][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 12:52:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:43][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 12:52:43][INFO][sqlalchemy.engine.Engine] [cached since 1.708s ago] {'user_id_1': '2'}
[2025-07-14 12:52:43][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:52:43][INFO][sqlalchemy.engine.Engine] [cached since 1.707s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 12:52:46][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 12:52:46][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:52:46][INFO][sqlalchemy.engine.Engine] [cached since 3.103s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 12:52:46][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 12:52:46][INFO][sqlalchemy.engine.Engine] [cached since 3.105s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, preferring partners who share this core quality. In times of conflict, she tends to adopt a p ... (298 characters truncated) ... rs to maintain individual pursuits. While she appreciates regular interaction, she values moderate contact that respects personal space and autonomy.', 'created_at': datetime.datetime(2025, 7, 14, 3, 52, 46, 446443), 'updated_at': datetime.datetime(2025, 7, 14, 3, 52, 46, 446458)}
[2025-07-14 12:52:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:46][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 12:52:46][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 12:52:46][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 12:52:56][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 12:52:56][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 12:52:56][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 12:52:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00039s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00044s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00029s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00090s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [no key 0.00028s] {}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00047s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 52, 57, 437092), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 52, 57, 437099), 'birth': None, 'gender': 'female'}]
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 52, 57, 443030)}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 3, 52, 56, 862077), 'choice_id__0': 2, 'question_id__0': 1, 'user_id__0': '1', 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 3, 52, 56, 862110), 'choice_id__1': 8, 'question_id__1': 2, 'user_id__1': '1', 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 3, 52, 56, 862124), 'choice_id__2': 13, 'question_id__2': 3, 'user_id__2': '1', 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 3, 52, 56, 862138), 'choice_id__3': 21, 'question_id__3': 4, 'user_id__3': '1', 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 3, 52, 56, 862156), 'choice_id__4': 26, 'question_id__4': 5, 'user_id__4': '1', 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 3, 52, 56, 862249), 'choice_id__5': 1, 'question_id__5': 1, 'user_id__5': '2', 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 3, 52, 56, 862261), 'choice_id__6': 9, 'question_id__6': 2, 'user_id__6': '2', 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 3, 52, 56, 862272), 'choice_id__7': 16, 'question_id__7': 3, 'user_id__7': '2', 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 3, 52, 56, 862289), 'choice_id__8': 20, 'question_id__8': 4, 'user_id__8': '2', 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 3, 52, 56, 862302), 'choice_id__9': 25, 'question_id__9': 5, 'user_id__9': '2'}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s (insertmanyvalues) 1/1 (ordered)] {'has_image__0': 0, 'image_url__0': None, 'couple_id__0': '1', 'deleted_at__0': None, 'is_delivered__0': 1, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'user_id__0': '1', 'embed_index__0': None, 'has_image__1': 0, 'image_url__1': None, 'couple_id__1': '1', 'deleted_at__1': None, 'is_delivered__1': 1, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'user_id__1': '2', 'embed_index__1': None, 'has_image__2': 0, 'image_url__2': None, 'couple_id__2': '1', 'deleted_at__2': None, 'is_delivered__2': 1, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'user_id__2': '1', 'embed_index__2': None, 'has_image__3': 0, 'image_url__3': None, 'couple_id__3': '1', 'deleted_at__3': None, 'is_delivered__3': 1, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'user_id__3': '2', 'embed_index__3': None, 'has_image__4': 0, 'image_url__4': None, 'couple_id__4': '1', 'deleted_at__4': None, 'is_delivered__4': 1, 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'user_id__4': '2', 'embed_index__4': None, 'has_image__5': 0, 'image_url__5': None, 'couple_id__5': '1', 'deleted_at__5': None, 'is_delivered__5': 1 ... 170 parameters truncated ... 'is_delivered__24': 1, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'user_id__24': '1', 'embed_index__24': None, 'has_image__25': 0, 'image_url__25': None, 'couple_id__25': '1', 'deleted_at__25': None, 'is_delivered__25': 1, 'content__25': '나도야~ 🥰', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'user_id__25': '2', 'embed_index__25': None, 'has_image__26': 0, 'image_url__26': None, 'couple_id__26': '1', 'deleted_at__26': None, 'is_delivered__26': 1, 'content__26': '일주일 진짜 빠르다', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'user_id__26': '1', 'embed_index__26': None, 'has_image__27': 0, 'image_url__27': None, 'couple_id__27': '1', 'deleted_at__27': None, 'is_delivered__27': 1, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'user_id__27': '2', 'embed_index__27': None, 'has_image__28': 0, 'image_url__28': None, 'couple_id__28': '1', 'deleted_at__28': None, 'is_delivered__28': 1, 'content__28': '너 있어서 든든했어', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'user_id__28': '1', 'embed_index__28': None, 'has_image__29': 0, 'image_url__29': None, 'couple_id__29': '1', 'deleted_at__29': None, 'is_delivered__29': 1, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'user_id__29': '2', 'embed_index__29': None}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 12:52:57][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id_1': '1'}
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 12:53:00][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 12:53:00][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 12:53:00][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 12:53:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, prioritizing open and honest dialogues. When conflicts arise, 지민 prefers to remain calm, taking time ... (173 characters truncated) ...  contact, staying closely connected with partners or friends. Ultimately, 지민 seeks a deep connection, desiring meaningful and profound relationships.', 'created_at': datetime.datetime(2025, 7, 14, 3, 53, 0, 435425), 'updated_at': datetime.datetime(2025, 7, 14, 3, 53, 0, 435429)}
[2025-07-14 12:53:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:00][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 12:53:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:00][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 12:53:00][INFO][sqlalchemy.engine.Engine] [cached since 2.944s ago] {'user_id_1': '2'}
[2025-07-14 12:53:00][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:00][INFO][sqlalchemy.engine.Engine] [cached since 2.943s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 12:53:02][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 12:53:02][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:02][INFO][sqlalchemy.engine.Engine] [cached since 2.195s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 12:53:02][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 12:53:02][INFO][sqlalchemy.engine.Engine] [cached since 2.194s ago] {'user_id': '2', 'summary': '수아 values trust in her relationships, prioritizing honesty and reliability above all else. When conflicts arise, she tends to take a step back and al ... (282 characters truncated) ... allowing space for individuality. Ultimately, 수아 seeks a balanced independence within her relationships, valuing both closeness and personal freedom.', 'created_at': datetime.datetime(2025, 7, 14, 3, 53, 2, 629349), 'updated_at': datetime.datetime(2025, 7, 14, 3, 53, 2, 629352)}
[2025-07-14 12:53:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:02][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 12:53:02][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 12:53:02][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 12:53:09][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 12:53:09][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 12:53:09][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00035s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 53, 10, 371000), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 53, 10, 371004), 'birth': None, 'gender': 'female'}]
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 53, 10, 375906)}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00030s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'question_id__0': 1, 'user_id__0': '1', 'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 3, 53, 9, 884333), 'custom_input__1': None, 'question_id__1': 2, 'user_id__1': '1', 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 3, 53, 9, 884383), 'custom_input__2': None, 'question_id__2': 3, 'user_id__2': '1', 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 3, 53, 9, 884398), 'custom_input__3': None, 'question_id__3': 4, 'user_id__3': '1', 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 3, 53, 9, 884411), 'custom_input__4': None, 'question_id__4': 5, 'user_id__4': '1', 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 3, 53, 9, 884428), 'custom_input__5': None, 'question_id__5': 1, 'user_id__5': '2', 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 3, 53, 9, 884439), 'custom_input__6': None, 'question_id__6': 2, 'user_id__6': '2', 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 3, 53, 9, 884448), 'custom_input__7': None, 'question_id__7': 3, 'user_id__7': '2', 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 3, 53, 9, 884473), 'custom_input__8': None, 'question_id__8': 4, 'user_id__8': '2', 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 3, 53, 9, 884501), 'custom_input__9': None, 'question_id__9': 5, 'user_id__9': '2', 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 3, 53, 9, 884515)}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__14': '바쁨', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감'}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00049s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'couple_id__0': '1', 'has_image__0': 0, 'deleted_at__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'is_delivered__0': 1, 'embed_index__0': None, 'user_id__0': '1', 'image_url__0': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'couple_id__1': '1', 'has_image__1': 0, 'deleted_at__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'is_delivered__1': 1, 'embed_index__1': None, 'user_id__1': '2', 'image_url__1': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'couple_id__2': '1', 'has_image__2': 0, 'deleted_at__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'is_delivered__2': 1, 'embed_index__2': None, 'user_id__2': '1', 'image_url__2': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'couple_id__3': '1', 'has_image__3': 0, 'deleted_at__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'is_delivered__3': 1, 'embed_index__3': None, 'user_id__3': '2', 'image_url__3': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'couple_id__4': '1', 'has_image__4': 0, 'deleted_at__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'is_delivered__4': 1, 'embed_index__4': None, 'user_id__4': '2', 'image_url__4': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'couple_id__5': '1', 'has_image__5': 0, 'deleted_at__5': None, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40) ... 170 parameters truncated ... 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'is_delivered__24': 1, 'embed_index__24': None, 'user_id__24': '1', 'image_url__24': None, 'content__25': '나도야~ 🥰', 'couple_id__25': '1', 'has_image__25': 0, 'deleted_at__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'is_delivered__25': 1, 'embed_index__25': None, 'user_id__25': '2', 'image_url__25': None, 'content__26': '일주일 진짜 빠르다', 'couple_id__26': '1', 'has_image__26': 0, 'deleted_at__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'is_delivered__26': 1, 'embed_index__26': None, 'user_id__26': '1', 'image_url__26': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'couple_id__27': '1', 'has_image__27': 0, 'deleted_at__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'is_delivered__27': 1, 'embed_index__27': None, 'user_id__27': '2', 'image_url__27': None, 'content__28': '너 있어서 든든했어', 'couple_id__28': '1', 'has_image__28': 0, 'deleted_at__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'is_delivered__28': 1, 'embed_index__28': None, 'user_id__28': '1', 'image_url__28': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'couple_id__29': '1', 'has_image__29': 0, 'deleted_at__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'is_delivered__29': 1, 'embed_index__29': None, 'user_id__29': '2', 'image_url__29': None}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 12:53:10][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] {'user_id_1': '1'}
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 12:53:12][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 12:53:12][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:12][INFO][sqlalchemy.engine.Engine] [generated in 0.00099s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 12:53:12][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 12:53:12][INFO][sqlalchemy.engine.Engine] [generated in 0.00066s] {'user_id': '1', 'summary': '지민 places a high value on communication in relationships, seeking deep connections through open and frequent dialogues. In times of conflict, 지민 pref ... (257 characters truncated) ... h their partners. Overall, 지민 is focused on building meaningful, deep connections characterized by mutual understanding and expressive communication.', 'created_at': datetime.datetime(2025, 7, 14, 3, 53, 12, 775236), 'updated_at': datetime.datetime(2025, 7, 14, 3, 53, 12, 775246)}
[2025-07-14 12:53:12][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:12][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 12:53:12][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:12][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 12:53:12][INFO][sqlalchemy.engine.Engine] [cached since 2.334s ago] {'user_id_1': '2'}
[2025-07-14 12:53:12][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:12][INFO][sqlalchemy.engine.Engine] [cached since 2.332s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 12:53:15][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 12:53:15][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:15][INFO][sqlalchemy.engine.Engine] [cached since 2.281s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 12:53:15][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 12:53:15][INFO][sqlalchemy.engine.Engine] [cached since 2.277s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, prioritizing honesty and reliability. When conflicts arise, she prefers to adopt a wait-and-s ... (246 characters truncated) ...  respects personal space. Ultimately, 수아 seeks a balanced relationship where both partners enjoy independence alongside collaboration and connection.', 'created_at': datetime.datetime(2025, 7, 14, 3, 53, 15, 52090), 'updated_at': datetime.datetime(2025, 7, 14, 3, 53, 15, 52095)}
[2025-07-14 12:53:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:15][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 12:53:15][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 12:53:15][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 12:53:17][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 12:53:17][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 12:53:17][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 12:53:17][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:53:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:17][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:53:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:17][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:53:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00086s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00029s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00038s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [no key 0.00040s] {}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 53, 18, 642705), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 53, 18, 642709), 'birth': None, 'gender': 'female'}]
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 3, 53, 18, 647085)}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00036s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'custom_input__0': None, 'question_id__0': 1, 'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 3, 53, 18, 39623), 'user_id__1': '1', 'custom_input__1': None, 'question_id__1': 2, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 3, 53, 18, 39650), 'user_id__2': '1', 'custom_input__2': None, 'question_id__2': 3, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 3, 53, 18, 39664), 'user_id__3': '1', 'custom_input__3': None, 'question_id__3': 4, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 3, 53, 18, 39676), 'user_id__4': '1', 'custom_input__4': None, 'question_id__4': 5, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 3, 53, 18, 39696), 'user_id__5': '2', 'custom_input__5': None, 'question_id__5': 1, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 3, 53, 18, 39707), 'user_id__6': '2', 'custom_input__6': None, 'question_id__6': 2, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 3, 53, 18, 39719), 'user_id__7': '2', 'custom_input__7': None, 'question_id__7': 3, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 3, 53, 18, 39730), 'user_id__8': '2', 'custom_input__8': None, 'question_id__8': 4, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 3, 53, 18, 39741), 'user_id__9': '2', 'custom_input__9': None, 'question_id__9': 5, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 3, 53, 18, 39752)}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__12': '너에 대한 애정이 넘쳤어.', 'user_id__12': '1' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'is_delivered__0': 1, 'has_image__0': 0, 'deleted_at__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'user_id__0': '1', 'image_url__0': None, 'couple_id__0': '1', 'embed_index__0': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'is_delivered__1': 1, 'has_image__1': 0, 'deleted_at__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'user_id__1': '2', 'image_url__1': None, 'couple_id__1': '1', 'embed_index__1': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'is_delivered__2': 1, 'has_image__2': 0, 'deleted_at__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'user_id__2': '1', 'image_url__2': None, 'couple_id__2': '1', 'embed_index__2': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'is_delivered__3': 1, 'has_image__3': 0, 'deleted_at__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'user_id__3': '2', 'image_url__3': None, 'couple_id__3': '1', 'embed_index__3': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'is_delivered__4': 1, 'has_image__4': 0, 'deleted_at__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'user_id__4': '2', 'image_url__4': None, 'couple_id__4': '1', 'embed_index__4': None, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'is_delivered__5': 1, 'has_image__5': 0, 'deleted_at__5': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ' ... 170 parameters truncated ... 'content__24': '너랑 시간 보내는 거 제일 좋아', 'user_id__24': '1', 'image_url__24': None, 'couple_id__24': '1', 'embed_index__24': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'is_delivered__25': 1, 'has_image__25': 0, 'deleted_at__25': None, 'content__25': '나도야~ 🥰', 'user_id__25': '2', 'image_url__25': None, 'couple_id__25': '1', 'embed_index__25': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'is_delivered__26': 1, 'has_image__26': 0, 'deleted_at__26': None, 'content__26': '일주일 진짜 빠르다', 'user_id__26': '1', 'image_url__26': None, 'couple_id__26': '1', 'embed_index__26': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'is_delivered__27': 1, 'has_image__27': 0, 'deleted_at__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'user_id__27': '2', 'image_url__27': None, 'couple_id__27': '1', 'embed_index__27': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'is_delivered__28': 1, 'has_image__28': 0, 'deleted_at__28': None, 'content__28': '너 있어서 든든했어', 'user_id__28': '1', 'image_url__28': None, 'couple_id__28': '1', 'embed_index__28': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'is_delivered__29': 1, 'has_image__29': 0, 'deleted_at__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'user_id__29': '2', 'image_url__29': None, 'couple_id__29': '1', 'embed_index__29': None}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 12:53:18][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {'user_id_1': '1'}
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 12:53:20][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 12:53:20][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00092s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 12:53:20][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 12:53:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00087s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, prioritizing open and honest dialogue. When conflicts arise, they prefer to take a moment to cool do ... (201 characters truncated) ... lighting the importance of staying connected with their partner. Ultimately, they aspire for a deep and meaningful connection in their relationships.', 'created_at': datetime.datetime(2025, 7, 14, 3, 53, 20, 642298), 'updated_at': datetime.datetime(2025, 7, 14, 3, 53, 20, 642314)}
[2025-07-14 12:53:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:20][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 12:53:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 12:53:20][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 12:53:20][INFO][sqlalchemy.engine.Engine] [cached since 1.956s ago] {'user_id_1': '2'}
[2025-07-14 12:53:20][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:20][INFO][sqlalchemy.engine.Engine] [cached since 1.956s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 12:53:22][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 12:53:22][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 12:53:22][INFO][sqlalchemy.engine.Engine] [cached since 1.855s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 12:53:22][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 12:53:22][INFO][sqlalchemy.engine.Engine] [cached since 1.851s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of her relationships. When conflicts arise, she prefers to give space and time, opting to wait it out rather than  ... (187 characters truncated) ... helming. 수아 seeks a relationship characterized by balanced independence, where both partners have space to grow individually while staying connected.', 'created_at': datetime.datetime(2025, 7, 14, 3, 53, 22, 493286), 'updated_at': datetime.datetime(2025, 7, 14, 3, 53, 22, 493289)}
[2025-07-14 12:53:22][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 12:53:22][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 12:53:22][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 12:53:22][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 13:03:02][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 13:03:02][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 13:03:02][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 13:03:02][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00056s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 3, 3, 350016), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 3, 3, 350020), 'birth': None, 'gender': 'female'}]
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 3, 3, 358672)}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'custom_input__0': None, 'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 4, 3, 2, 806175), 'question_id__0': 1, 'user_id__1': '1', 'custom_input__1': None, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 4, 3, 2, 806201), 'question_id__1': 2, 'user_id__2': '1', 'custom_input__2': None, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 4, 3, 2, 806257), 'question_id__2': 3, 'user_id__3': '1', 'custom_input__3': None, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 4, 3, 2, 806280), 'question_id__3': 4, 'user_id__4': '1', 'custom_input__4': None, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 4, 3, 2, 806294), 'question_id__4': 5, 'user_id__5': '2', 'custom_input__5': None, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 4, 3, 2, 806305), 'question_id__5': 1, 'user_id__6': '2', 'custom_input__6': None, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 4, 3, 2, 806314), 'question_id__6': 2, 'user_id__7': '2', 'custom_input__7': None, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 4, 3, 2, 806324), 'question_id__7': 3, 'user_id__8': '2', 'custom_input__8': None, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 4, 3, 2, 806334), 'question_id__8': 4, 'user_id__9': '2', 'custom_input__9': None, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 4, 3, 2, 806345), 'question_id__9': 5}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__1': '기대감', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__2': '미안함', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__3': '죄책감', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__4': '사랑', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__5': '다정함', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__6': '친밀감', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__7': '억울함', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__8': '서운함', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__9': '행복', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__10': '감사', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__11': '신뢰', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__12': '애정', 'user_id__12': '1' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__15': '서운함', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__16': '실망감', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__17': '이해', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__18': '다정함', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__19': '호감', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__20': '편안함', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'emotion__21': '기대감', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__22': '불만', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__23': '기쁨', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__24': '감동', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'emotion__25': '사랑', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__26': '안정감', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'couple_id__0': '1', 'user_id__0': '1', 'is_delivered__0': 1, 'image_url__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'embed_index__0': None, 'has_image__0': 0, 'deleted_at__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'couple_id__1': '1', 'user_id__1': '2', 'is_delivered__1': 1, 'image_url__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'embed_index__1': None, 'has_image__1': 0, 'deleted_at__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'couple_id__2': '1', 'user_id__2': '1', 'is_delivered__2': 1, 'image_url__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'embed_index__2': None, 'has_image__2': 0, 'deleted_at__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'couple_id__3': '1', 'user_id__3': '2', 'is_delivered__3': 1, 'image_url__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'embed_index__3': None, 'has_image__3': 0, 'deleted_at__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'couple_id__4': '1', 'user_id__4': '2', 'is_delivered__4': 1, 'image_url__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'embed_index__4': None, 'has_image__4': 0, 'deleted_at__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'couple_id__5': '1', 'user_id__5': '1', 'is_delivered__5': 1, 'image_url__5': None, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40) ... 170 parameters truncated ... 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'embed_index__24': None, 'has_image__24': 0, 'deleted_at__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'couple_id__25': '1', 'user_id__25': '2', 'is_delivered__25': 1, 'image_url__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'embed_index__25': None, 'has_image__25': 0, 'deleted_at__25': None, 'content__25': '나도야~ 🥰', 'couple_id__26': '1', 'user_id__26': '1', 'is_delivered__26': 1, 'image_url__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'embed_index__26': None, 'has_image__26': 0, 'deleted_at__26': None, 'content__26': '일주일 진짜 빠르다', 'couple_id__27': '1', 'user_id__27': '2', 'is_delivered__27': 1, 'image_url__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'embed_index__27': None, 'has_image__27': 0, 'deleted_at__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'couple_id__28': '1', 'user_id__28': '1', 'is_delivered__28': 1, 'image_url__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'embed_index__28': None, 'has_image__28': 0, 'deleted_at__28': None, 'content__28': '너 있어서 든든했어', 'couple_id__29': '1', 'user_id__29': '2', 'is_delivered__29': 1, 'image_url__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'embed_index__29': None, 'has_image__29': 0, 'deleted_at__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘'}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 13:03:03][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1'}
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:03:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:06][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:03:06][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:03:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:06][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 13:03:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id': '1', 'summary': "지민 values communication highly in relationships and prefers to address conflicts by cooling off before having a thoughtful discussion. They express a ... (226 characters truncated) ... by a deep connection, where both partners are genuinely attuned to each other's needs. Overall, 지민 prioritizes open dialogue and emotional closeness.", 'created_at': datetime.datetime(2025, 7, 14, 4, 3, 6, 398289), 'updated_at': datetime.datetime(2025, 7, 14, 4, 3, 6, 398293)}
[2025-07-14 13:03:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:06][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 13:03:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:06][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 13:03:06][INFO][sqlalchemy.engine.Engine] [cached since 2.994s ago] {'user_id_1': '2'}
[2025-07-14 13:03:06][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:03:06][INFO][sqlalchemy.engine.Engine] [cached since 2.993s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 13:03:09][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:03:09][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:03:09][INFO][sqlalchemy.engine.Engine] [cached since 3.24s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 13:03:09][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 13:03:09][INFO][sqlalchemy.engine.Engine] [cached since 3.239s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of a relationship and prefers to build connections where both partners feel secure and reliable. In times of confli ... (269 characters truncated) ... on is regular but not overwhelming. 수아 seeks a balanced relationship where both partners enjoy mutual independence alongside their shared connection.', 'created_at': datetime.datetime(2025, 7, 14, 4, 3, 9, 637103), 'updated_at': datetime.datetime(2025, 7, 14, 4, 3, 9, 637106)}
[2025-07-14 13:03:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:09][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 13:03:09][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 13:03:09][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 13:03:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:19][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.user_1 = %(user_1_1)s OR couples.user_2 = %(user_2_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:03:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_1_1': '1', 'user_2_1': '1', 'param_1': 1}
[2025-07-14 13:03:19][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:19][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.user_id = %(user_id_1)s AND messages.is_delivered = false ORDER BY messages.created_at
[2025-07-14 13:03:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'user_id_1': '2'}
[2025-07-14 13:03:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:24][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:03:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:24][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:24][INFO][routers.ai_chat] [chat_with_persona] 요청: user_id=1, couple_id=1
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id': '1', 'couple_id': '1', 'role': 'user', 'content': '안녕', 'created_at': datetime.datetime(2025, 7, 14, 4, 3, 25, 72529), 'embed_index': None}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'pk_1': 1}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1'}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT persona_config.couple_id AS persona_config_couple_id, persona_config.persona_name AS persona_config_persona_name, persona_config.updated_at AS persona_config_updated_at 
FROM persona_config 
WHERE persona_config.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [cached since 21.68s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [cached since 18.69s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [cached since 0.01032s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [cached since 0.01358s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:25][INFO][routers.ai_chat] [chat_with_persona] OpenAI 호출 시작: user_id=1, history_len=3
[2025-07-14 13:03:25][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:03:25][INFO][routers.ai_chat] [chat_with_persona] OpenAI 응답 성공: user_id=1
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [cached since 0.7249s ago] {'user_id': '1', 'couple_id': '1', 'role': 'assistant', 'content': '안녕하세요, 지민님! 오늘은 어떤 이야기를 나눠볼까요? 😊', 'created_at': datetime.datetime(2025, 7, 14, 4, 3, 25, 797425), 'embed_index': None}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [cached since 0.7289s ago] {'pk_1': 2}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [cached since 0.7289s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:25][INFO][routers.ai_chat] [chat_with_persona] 응답 완료: user_id=1, msg_id=2
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [cached since 0.7329s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [cached since 0.7353s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] [cached since 0.7378s ago] {'user_id_1': '1'}
[2025-07-14 13:03:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] [cached since 5.525s ago] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:30][INFO][routers.ai_chat] [chat_with_persona] 요청: user_id=1, couple_id=1
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] [cached since 5.288s ago] {'user_id': '1', 'couple_id': '1', 'role': 'user', 'content': 'hi', 'created_at': datetime.datetime(2025, 7, 14, 4, 3, 30, 361294), 'embed_index': None}
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] [cached since 5.288s ago] {'pk_1': 3}
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] [cached since 5.289s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] [cached since 5.292s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:30][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:30][INFO][routers.ai_chat] [chat_with_persona] OpenAI 호출 시작: user_id=1, history_len=5
[2025-07-14 13:03:31][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:03:31][INFO][routers.ai_chat] [chat_with_persona] OpenAI 응답 성공: user_id=1
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] [cached since 6.459s ago] {'user_id': '1', 'couple_id': '1', 'role': 'assistant', 'content': 'Hello, Jimin! How can I help you today?', 'created_at': datetime.datetime(2025, 7, 14, 4, 3, 31, 529244), 'embed_index': None}
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] [cached since 6.465s ago] {'pk_1': 4}
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] [cached since 6.466s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:31][INFO][routers.ai_chat] [chat_with_persona] 응답 완료: user_id=1, msg_id=4
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] [cached since 6.47s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] [cached since 6.473s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] [cached since 6.475s ago] {'user_id_1': '1'}
[2025-07-14 13:03:31][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:04:59][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 13:04:59][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 13:04:59][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00044s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [no key 0.00091s] {}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 4, 59, 833309), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 4, 59, 833312), 'birth': None, 'gender': 'female'}]
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 4, 59, 840839)}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 4, 4, 59, 182654), 'custom_input__0': None, 'user_id__0': '1', 'choice_id__0': 2, 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 4, 4, 59, 182731), 'custom_input__1': None, 'user_id__1': '1', 'choice_id__1': 8, 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 4, 4, 59, 182762), 'custom_input__2': None, 'user_id__2': '1', 'choice_id__2': 13, 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 4, 4, 59, 182796), 'custom_input__3': None, 'user_id__3': '1', 'choice_id__3': 21, 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 4, 4, 59, 182840), 'custom_input__4': None, 'user_id__4': '1', 'choice_id__4': 26, 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 4, 4, 59, 182874), 'custom_input__5': None, 'user_id__5': '2', 'choice_id__5': 1, 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 4, 4, 59, 182900), 'custom_input__6': None, 'user_id__6': '2', 'choice_id__6': 9, 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 4, 4, 59, 182926), 'custom_input__7': None, 'user_id__7': '2', 'choice_id__7': 16, 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 4, 4, 59, 182959), 'custom_input__8': None, 'user_id__8': '2', 'choice_id__8': 20, 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 4, 4, 59, 182991), 'custom_input__9': None, 'user_id__9': '2', 'choice_id__9': 25}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__12': '애정', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'user_id__14': '2', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s (insertmanyvalues) 1/1 (ordered)] {'image_url__0': None, 'deleted_at__0': None, 'is_delivered__0': 1, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'user_id__0': '1', 'embed_index__0': None, 'has_image__0': 0, 'couple_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'image_url__1': None, 'deleted_at__1': None, 'is_delivered__1': 1, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'user_id__1': '2', 'embed_index__1': None, 'has_image__1': 0, 'couple_id__1': '1', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'image_url__2': None, 'deleted_at__2': None, 'is_delivered__2': 1, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'user_id__2': '1', 'embed_index__2': None, 'has_image__2': 0, 'couple_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'image_url__3': None, 'deleted_at__3': None, 'is_delivered__3': 1, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'user_id__3': '2', 'embed_index__3': None, 'has_image__3': 0, 'couple_id__3': '1', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'image_url__4': None, 'deleted_at__4': None, 'is_delivered__4': 1, 'content__4': '어제 약속했는데 통화 못했네 😕', 'user_id__4': '2', 'embed_index__4': None, 'has_image__4': 0, 'couple_id__4': '1', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'image_url__5': None, 'deleted_at__5': None, 'is_delivered__5': 1, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'user_id__5': '1' ... 170 parameters truncated ... 'user_id__24': '1', 'embed_index__24': None, 'has_image__24': 0, 'couple_id__24': '1', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'image_url__25': None, 'deleted_at__25': None, 'is_delivered__25': 1, 'content__25': '나도야~ 🥰', 'user_id__25': '2', 'embed_index__25': None, 'has_image__25': 0, 'couple_id__25': '1', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'image_url__26': None, 'deleted_at__26': None, 'is_delivered__26': 1, 'content__26': '일주일 진짜 빠르다', 'user_id__26': '1', 'embed_index__26': None, 'has_image__26': 0, 'couple_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'image_url__27': None, 'deleted_at__27': None, 'is_delivered__27': 1, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'user_id__27': '2', 'embed_index__27': None, 'has_image__27': 0, 'couple_id__27': '1', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'image_url__28': None, 'deleted_at__28': None, 'is_delivered__28': 1, 'content__28': '너 있어서 든든했어', 'user_id__28': '1', 'embed_index__28': None, 'has_image__28': 0, 'couple_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'image_url__29': None, 'deleted_at__29': None, 'is_delivered__29': 1, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'user_id__29': '2', 'embed_index__29': None, 'has_image__29': 0, 'couple_id__29': '1', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0)}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 13:04:59][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1'}
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:04:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:02][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:05:02][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:02][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 13:05:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {'user_id': '1', 'summary': '지민 values communication as a cornerstone of their relationships, seeking open and honest dialogue with their partner. During conflicts, they prefer t ... (229 characters truncated) ... regular interactions to stay connected. Ultimately, they strive for a deep connection, prioritizing meaningful and intimate bonds with their partner.', 'created_at': datetime.datetime(2025, 7, 14, 4, 5, 2, 368048), 'updated_at': datetime.datetime(2025, 7, 14, 4, 5, 2, 368051)}
[2025-07-14 13:05:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:02][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 13:05:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:02][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 13:05:02][INFO][sqlalchemy.engine.Engine] [cached since 2.481s ago] {'user_id_1': '2'}
[2025-07-14 13:05:02][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:02][INFO][sqlalchemy.engine.Engine] [cached since 2.48s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 13:05:04][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:05:05][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:05][INFO][sqlalchemy.engine.Engine] [cached since 2.684s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 13:05:05][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 13:05:05][INFO][sqlalchemy.engine.Engine] [cached since 2.685s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of her relationships, prioritizing reliability and openness with her partner. In times of conflict, she prefers to ... (316 characters truncated) ... ng. Ultimately, 수아 seeks a balanced independence in her relationships, where both partners maintain their individuality while supporting one another.', 'created_at': datetime.datetime(2025, 7, 14, 4, 5, 5, 52459), 'updated_at': datetime.datetime(2025, 7, 14, 4, 5, 5, 52462)}
[2025-07-14 13:05:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:05][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 13:05:05][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 13:05:05][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 13:05:21][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:21][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.user_1 = %(user_1_1)s OR couples.user_2 = %(user_2_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:21][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_1_1': '1', 'user_2_1': '1', 'param_1': 1}
[2025-07-14 13:05:21][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:21][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:21][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.user_id = %(user_id_1)s AND messages.is_delivered = false ORDER BY messages.created_at
[2025-07-14 13:05:21][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'couple_id_1': '1', 'user_id_1': '2'}
[2025-07-14 13:05:21][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:23][INFO][routers.ai_chat] [chat_with_persona] 요청: user_id=1, couple_id=1
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id': '1', 'couple_id': '1', 'role': 'user', 'content': 'hi', 'created_at': datetime.datetime(2025, 7, 14, 4, 5, 23, 808948), 'embed_index': None}
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'pk_1': 1}
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1'}
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] SELECT persona_config.couple_id AS persona_config_couple_id, persona_config.persona_name AS persona_config_persona_name, persona_config.updated_at AS persona_config_updated_at 
FROM persona_config 
WHERE persona_config.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] [cached since 23.93s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] [cached since 21.46s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] [cached since 0.01054s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] [cached since 0.01358s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:23][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:23][INFO][routers.ai_chat] [chat_with_persona] OpenAI 호출 시작: user_id=1, history_len=3
[2025-07-14 13:05:25][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:05:25][INFO][routers.ai_chat] [chat_with_persona] OpenAI 응답 성공: user_id=1
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] [cached since 1.234s ago] {'user_id': '1', 'couple_id': '1', 'role': 'assistant', 'content': '안녕하세요, 지민님! 오늘은 어떤 이야기를 나눠볼까요? 😊', 'created_at': datetime.datetime(2025, 7, 14, 4, 5, 25, 43047), 'embed_index': None}
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] [cached since 1.236s ago] {'pk_1': 2}
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] [cached since 1.236s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:25][INFO][routers.ai_chat] [chat_with_persona] 응답 완료: user_id=1, msg_id=2
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] [cached since 1.24s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] [cached since 1.243s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] [cached since 1.245s ago] {'user_id_1': '1'}
[2025-07-14 13:05:25][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:05:55][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 13:05:55][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 13:05:55][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 13:05:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00053s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00027s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00026s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00027s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00026s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 5, 56, 528283), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 5, 56, 528288), 'birth': None, 'gender': 'female'}]
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 5, 56, 533953)}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 4, 5, 56, 29533), 'question_id__0': 1, 'custom_input__0': None, 'user_id__0': '1', 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 4, 5, 56, 29563), 'question_id__1': 2, 'custom_input__1': None, 'user_id__1': '1', 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 4, 5, 56, 29591), 'question_id__2': 3, 'custom_input__2': None, 'user_id__2': '1', 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 4, 5, 56, 29614), 'question_id__3': 4, 'custom_input__3': None, 'user_id__3': '1', 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 4, 5, 56, 29629), 'question_id__4': 5, 'custom_input__4': None, 'user_id__4': '1', 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 4, 5, 56, 29644), 'question_id__5': 1, 'custom_input__5': None, 'user_id__5': '2', 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 4, 5, 56, 29656), 'question_id__6': 2, 'custom_input__6': None, 'user_id__6': '2', 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 4, 5, 56, 29667), 'question_id__7': 3, 'custom_input__7': None, 'user_id__7': '2', 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 4, 5, 56, 29678), 'question_id__8': 4, 'custom_input__8': None, 'user_id__8': '2', 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 4, 5, 56, 29690), 'question_id__9': 5, 'custom_input__9': None, 'user_id__9': '2'}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__2': '1', 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__4': '1', 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__6': '1', 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__7': '1', 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__9': '1', 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__11': '1', 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1', 'emotion__12': '애정' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__15': '2', 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__17': '2', 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__19': '2', 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__21': '2', 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__23': '2', 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__25': '2', 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s (insertmanyvalues) 1/1 (ordered)] {'couple_id__0': '1', 'deleted_at__0': None, 'embed_index__0': None, 'has_image__0': 0, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'is_delivered__0': 1, 'image_url__0': None, 'user_id__0': '1', 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'couple_id__1': '1', 'deleted_at__1': None, 'embed_index__1': None, 'has_image__1': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'is_delivered__1': 1, 'image_url__1': None, 'user_id__1': '2', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'couple_id__2': '1', 'deleted_at__2': None, 'embed_index__2': None, 'has_image__2': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'is_delivered__2': 1, 'image_url__2': None, 'user_id__2': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'couple_id__3': '1', 'deleted_at__3': None, 'embed_index__3': None, 'has_image__3': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'is_delivered__3': 1, 'image_url__3': None, 'user_id__3': '2', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'couple_id__4': '1', 'deleted_at__4': None, 'embed_index__4': None, 'has_image__4': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'is_delivered__4': 1, 'image_url__4': None, 'user_id__4': '2', 'content__4': '어제 약속했는데 통화 못했네 😕', 'couple_id__5': '1', 'deleted_at__5': None, 'embed_index__5': None, 'has_image__5': 0, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40) ... 170 parameters truncated ... 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'is_delivered__24': 1, 'image_url__24': None, 'user_id__24': '1', 'content__24': '너랑 시간 보내는 거 제일 좋아', 'couple_id__25': '1', 'deleted_at__25': None, 'embed_index__25': None, 'has_image__25': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'is_delivered__25': 1, 'image_url__25': None, 'user_id__25': '2', 'content__25': '나도야~ 🥰', 'couple_id__26': '1', 'deleted_at__26': None, 'embed_index__26': None, 'has_image__26': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'is_delivered__26': 1, 'image_url__26': None, 'user_id__26': '1', 'content__26': '일주일 진짜 빠르다', 'couple_id__27': '1', 'deleted_at__27': None, 'embed_index__27': None, 'has_image__27': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'is_delivered__27': 1, 'image_url__27': None, 'user_id__27': '2', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'couple_id__28': '1', 'deleted_at__28': None, 'embed_index__28': None, 'has_image__28': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'is_delivered__28': 1, 'image_url__28': None, 'user_id__28': '1', 'content__28': '너 있어서 든든했어', 'couple_id__29': '1', 'deleted_at__29': None, 'embed_index__29': None, 'has_image__29': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'is_delivered__29': 1, 'image_url__29': None, 'user_id__29': '2', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘'}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 13:05:56][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1'}
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:59][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:05:59][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:05:59][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 13:05:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, emphasizing the importance of open and clear exchanges with their partner. When conflicts arise, 지민  ... (231 characters truncated) ... eir partner, favoring regular interactions to maintain closeness. Overall, they desire a relationship characterized by a deep, meaningful connection.', 'created_at': datetime.datetime(2025, 7, 14, 4, 5, 59, 101451), 'updated_at': datetime.datetime(2025, 7, 14, 4, 5, 59, 101455)}
[2025-07-14 13:05:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:05:59][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 13:05:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:05:59][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 13:05:59][INFO][sqlalchemy.engine.Engine] [cached since 2.52s ago] {'user_id_1': '2'}
[2025-07-14 13:05:59][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:05:59][INFO][sqlalchemy.engine.Engine] [cached since 2.519s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 13:06:00][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:06:00][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:06:00][INFO][sqlalchemy.engine.Engine] [cached since 1.614s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 13:06:00][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 13:06:00][INFO][sqlalchemy.engine.Engine] [cached since 1.613s ago] {'user_id': '2', 'summary': '수아 values trust in her relationships, prioritizing partners she can rely on and be honest with. When conflicts arise, she prefers to wait patiently r ... (230 characters truncated) ... level of independence. Her ideal relationship allows both partners to maintain their individual identities while fostering a strong, supportive bond.', 'created_at': datetime.datetime(2025, 7, 14, 4, 6, 0, 714650), 'updated_at': datetime.datetime(2025, 7, 14, 4, 6, 0, 714653)}
[2025-07-14 13:06:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:00][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 13:06:00][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 13:06:00][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 13:06:16][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 13:06:16][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 13:06:16][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00175s] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 13:06:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00027s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00046s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 6, 17, 387791), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 6, 17, 387800), 'birth': None, 'gender': 'female'}]
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00043s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 6, 17, 398312)}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00044s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00051s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'choice_id__0': 2, 'question_id__0': 1, 'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 4, 6, 16, 733717), 'user_id__1': '1', 'choice_id__1': 8, 'question_id__1': 2, 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 4, 6, 16, 733748), 'user_id__2': '1', 'choice_id__2': 13, 'question_id__2': 3, 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 4, 6, 16, 733763), 'user_id__3': '1', 'choice_id__3': 21, 'question_id__3': 4, 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 4, 6, 16, 733776), 'user_id__4': '1', 'choice_id__4': 26, 'question_id__4': 5, 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 4, 6, 16, 733792), 'user_id__5': '2', 'choice_id__5': 1, 'question_id__5': 1, 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 4, 6, 16, 733808), 'user_id__6': '2', 'choice_id__6': 9, 'question_id__6': 2, 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 4, 6, 16, 733818), 'user_id__7': '2', 'choice_id__7': 16, 'question_id__7': 3, 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 4, 6, 16, 733828), 'user_id__8': '2', 'choice_id__8': 20, 'question_id__8': 4, 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 4, 6, 16, 733839), 'user_id__9': '2', 'choice_id__9': 25, 'question_id__9': 5, 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 4, 6, 16, 733851)}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'emotion__0': '고마움', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__1': '기대감', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'emotion__2': '미안함', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__3': '죄책감', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'emotion__4': '사랑', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__5': '다정함', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'emotion__6': '친밀감', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'emotion__7': '억울함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__8': '서운함', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'emotion__9': '행복', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__10': '감사', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'emotion__11': '신뢰', 'memo__12': '너에 대한 애정이 넘쳤어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'user_id__14': '2', 'emotion__14': '바쁨', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'emotion__15': '서운함', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__16': '실망감', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'emotion__17': '이해', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__18': '다정함', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'emotion__19': '호감', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__20': '편안함', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'emotion__21': '기대감', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__22': '불만', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'emotion__23': '기쁨', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__24': '감동', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'emotion__25': '사랑', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'emotion__26': '안정감'}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'user_id__0': '1', 'couple_id__0': '1', 'is_delivered__0': 1, 'embed_index__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'has_image__0': 0, 'image_url__0': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'user_id__1': '2', 'couple_id__1': '1', 'is_delivered__1': 1, 'embed_index__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'has_image__1': 0, 'image_url__1': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'user_id__2': '1', 'couple_id__2': '1', 'is_delivered__2': 1, 'embed_index__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'has_image__2': 0, 'image_url__2': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'user_id__3': '2', 'couple_id__3': '1', 'is_delivered__3': 1, 'embed_index__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'has_image__3': 0, 'image_url__3': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'user_id__4': '2', 'couple_id__4': '1', 'is_delivered__4': 1, 'embed_index__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'has_image__4': 0, 'image_url__4': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'deleted_at__5': None, 'user_id__5': '1', 'couple_id__5': '1', 'is_delivered__5': 1 ... 170 parameters truncated ... 'is_delivered__24': 1, 'embed_index__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'has_image__24': 0, 'image_url__24': None, 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'user_id__25': '2', 'couple_id__25': '1', 'is_delivered__25': 1, 'embed_index__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'has_image__25': 0, 'image_url__25': None, 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'user_id__26': '1', 'couple_id__26': '1', 'is_delivered__26': 1, 'embed_index__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'has_image__26': 0, 'image_url__26': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'user_id__27': '2', 'couple_id__27': '1', 'is_delivered__27': 1, 'embed_index__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'has_image__27': 0, 'image_url__27': None, 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'user_id__28': '1', 'couple_id__28': '1', 'is_delivered__28': 1, 'embed_index__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'has_image__28': 0, 'image_url__28': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None, 'user_id__29': '2', 'couple_id__29': '1', 'is_delivered__29': 1, 'embed_index__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'has_image__29': 0, 'image_url__29': None}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 13:06:17][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1'}
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:06:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:20][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:06:20][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:06:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:20][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 13:06:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id': '1', 'summary': "지민 values open and clear communication in their relationships, preferring to address issues by cooling off first and then having a constructive conve ... (339 characters truncated) ... nd profound relationships over superficial encounters. Overall, 지민 prioritizes emotional depth and effective communication in fostering strong bonds.", 'created_at': datetime.datetime(2025, 7, 14, 4, 6, 20, 191523), 'updated_at': datetime.datetime(2025, 7, 14, 4, 6, 20, 191526)}
[2025-07-14 13:06:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:20][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 13:06:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:20][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 13:06:20][INFO][sqlalchemy.engine.Engine] [cached since 2.738s ago] {'user_id_1': '2'}
[2025-07-14 13:06:20][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:06:20][INFO][sqlalchemy.engine.Engine] [cached since 2.737s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 13:06:22][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:06:22][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:06:22][INFO][sqlalchemy.engine.Engine] [cached since 2.021s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 13:06:22][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 13:06:22][INFO][sqlalchemy.engine.Engine] [cached since 2.02s ago] {'user_id': '2', 'summary': '수아 values trust in relationships and prefers to let conflicts resolve naturally over time rather than addressing them immediately. They show affectio ... (148 characters truncated) ... reciating both personal space and togetherness. Overall, they aim for a relationship that is built on mutual trust and allows for individual freedom.', 'created_at': datetime.datetime(2025, 7, 14, 4, 6, 22, 211626), 'updated_at': datetime.datetime(2025, 7, 14, 4, 6, 22, 211630)}
[2025-07-14 13:06:22][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:22][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 13:06:22][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 13:06:22][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 13:06:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:26][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:06:26][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:26][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:26][INFO][routers.ai_chat] [chat_with_persona] 요청: user_id=1, couple_id=1
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id': '1', 'couple_id': '1', 'role': 'user', 'content': 'hi', 'created_at': datetime.datetime(2025, 7, 14, 4, 6, 27, 118096), 'embed_index': None}
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'pk_1': 1}
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {'user_id_1': '1'}
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] SELECT persona_config.couple_id AS persona_config_couple_id, persona_config.persona_name AS persona_config_persona_name, persona_config.updated_at AS persona_config_updated_at 
FROM persona_config 
WHERE persona_config.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] [cached since 9.675s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] [cached since 6.946s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] [cached since 0.01048s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] [cached since 0.01324s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:27][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:27][INFO][routers.ai_chat] [chat_with_persona] OpenAI 호출 시작: user_id=1, history_len=3
[2025-07-14 13:06:28][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:06:28][INFO][routers.ai_chat] [chat_with_persona] OpenAI 응답 성공: user_id=1
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] [cached since 1.862s ago] {'user_id': '1', 'couple_id': '1', 'role': 'assistant', 'content': 'Hello 지민! How are you feeling today? 😊', 'created_at': datetime.datetime(2025, 7, 14, 4, 6, 28, 979211), 'embed_index': None}
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] [cached since 1.868s ago] {'pk_1': 2}
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] [cached since 1.868s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:28][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:28][INFO][routers.ai_chat] [chat_with_persona] 응답 완료: user_id=1, msg_id=2
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] [cached since 1.872s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] [cached since 1.875s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] [cached since 1.877s ago] {'user_id_1': '1'}
[2025-07-14 13:06:29][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] [cached since 13.78s ago] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:40][INFO][routers.ai_chat] [chat_with_persona] 요청: user_id=1, couple_id=1
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] [cached since 13.5s ago] {'user_id': '1', 'couple_id': '1', 'role': 'user', 'content': '뭐하고있엇어', 'created_at': datetime.datetime(2025, 7, 14, 4, 6, 40, 620182), 'embed_index': None}
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] [cached since 13.5s ago] {'pk_1': 3}
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] [cached since 13.5s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] [cached since 13.5s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:40][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:40][INFO][routers.ai_chat] [chat_with_persona] OpenAI 호출 시작: user_id=1, history_len=5
[2025-07-14 13:06:41][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:06:41][INFO][routers.ai_chat] [chat_with_persona] OpenAI 응답 성공: user_id=1
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] [cached since 14.62s ago] {'user_id': '1', 'couple_id': '1', 'role': 'assistant', 'content': '저는 항상 여기서 지민님을 기다리고 있었어요. 오늘 어떤 이야기 나눌까요? 😊', 'created_at': datetime.datetime(2025, 7, 14, 4, 6, 41, 735082), 'embed_index': None}
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] [cached since 14.62s ago] {'pk_1': 4}
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] [cached since 14.62s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:41][INFO][routers.ai_chat] [chat_with_persona] 응답 완료: user_id=1, msg_id=4
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] [cached since 14.63s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] [cached since 14.64s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] [cached since 14.64s ago] {'user_id_1': '1'}
[2025-07-14 13:06:41][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:08:41][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 13:08:41][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 13:08:41][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00049s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [no key 0.00033s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:08:41][INFO][sqlalchemy.engine.Engine] [no key 0.00036s] {}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [no key 0.00081s] {}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [no key 0.00037s] {}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 8, 42, 236191), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 8, 42, 236195), 'birth': None, 'gender': 'female'}]
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 4, 8, 42, 241937)}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00034s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 4, 8, 41, 608711), 'custom_input__0': None, 'choice_id__0': 2, 'question_id__0': 1, 'user_id__0': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 4, 8, 41, 608737), 'custom_input__1': None, 'choice_id__1': 8, 'question_id__1': 2, 'user_id__1': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 4, 8, 41, 608751), 'custom_input__2': None, 'choice_id__2': 13, 'question_id__2': 3, 'user_id__2': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 4, 8, 41, 608763), 'custom_input__3': None, 'choice_id__3': 21, 'question_id__3': 4, 'user_id__3': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 4, 8, 41, 608779), 'custom_input__4': None, 'choice_id__4': 26, 'question_id__4': 5, 'user_id__4': '1', 'submitted_at__5': datetime.datetime(2025, 7, 14, 4, 8, 41, 608793), 'custom_input__5': None, 'choice_id__5': 1, 'question_id__5': 1, 'user_id__5': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 4, 8, 41, 608805), 'custom_input__6': None, 'choice_id__6': 9, 'question_id__6': 2, 'user_id__6': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 4, 8, 41, 608816), 'custom_input__7': None, 'choice_id__7': 16, 'question_id__7': 3, 'user_id__7': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 4, 8, 41, 608827), 'custom_input__8': None, 'choice_id__8': 20, 'question_id__8': 4, 'user_id__8': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 4, 8, 41, 608839), 'custom_input__9': None, 'choice_id__9': 25, 'question_id__9': 5, 'user_id__9': '2'}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'user_id__0': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'user_id__1': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'user_id__2': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'user_id__3': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'user_id__4': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'user_id__5': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'user_id__6': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'user_id__7': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'user_id__8': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'user_id__9': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'user_id__10': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'user_id__11': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'user_id__14': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'user_id__15': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'user_id__16': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'user_id__17': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'user_id__18': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'user_id__19': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'user_id__20': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'user_id__21': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'user_id__22': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'user_id__23': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'user_id__24': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'user_id__25': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'user_id__26': '2'}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s (insertmanyvalues) 1/1 (ordered)] {'embed_index__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__0': None, 'is_delivered__0': 1, 'has_image__0': 0, 'deleted_at__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'couple_id__0': '1', 'user_id__0': '1', 'embed_index__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__1': None, 'is_delivered__1': 1, 'has_image__1': 0, 'deleted_at__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'couple_id__1': '1', 'user_id__1': '2', 'embed_index__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__2': None, 'is_delivered__2': 1, 'has_image__2': 0, 'deleted_at__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'couple_id__2': '1', 'user_id__2': '1', 'embed_index__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__3': None, 'is_delivered__3': 1, 'has_image__3': 0, 'deleted_at__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'couple_id__3': '1', 'user_id__3': '2', 'embed_index__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__4': None, 'is_delivered__4': 1, 'has_image__4': 0, 'deleted_at__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'couple_id__4': '1', 'user_id__4': '2', 'embed_index__5': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'image_url__5': None, 'is_delivered__5': 1, 'has_image__5': 0 ... 170 parameters truncated ... 'has_image__24': 0, 'deleted_at__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'couple_id__24': '1', 'user_id__24': '1', 'embed_index__25': None, 'content__25': '나도야~ 🥰', 'image_url__25': None, 'is_delivered__25': 1, 'has_image__25': 0, 'deleted_at__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'couple_id__25': '1', 'user_id__25': '2', 'embed_index__26': None, 'content__26': '일주일 진짜 빠르다', 'image_url__26': None, 'is_delivered__26': 1, 'has_image__26': 0, 'deleted_at__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'couple_id__26': '1', 'user_id__26': '1', 'embed_index__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__27': None, 'is_delivered__27': 1, 'has_image__27': 0, 'deleted_at__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'couple_id__27': '1', 'user_id__27': '2', 'embed_index__28': None, 'content__28': '너 있어서 든든했어', 'image_url__28': None, 'is_delivered__28': 1, 'has_image__28': 0, 'deleted_at__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'couple_id__28': '1', 'user_id__28': '1', 'embed_index__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'image_url__29': None, 'is_delivered__29': 1, 'has_image__29': 0, 'deleted_at__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'couple_id__29': '1', 'user_id__29': '2'}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 13:08:42][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'user_id_1': '1'}
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:08:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:08:44][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:08:44][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:08:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:08:44][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 13:08:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id': '1', 'summary': '지민 values communication as a cornerstone in relationships, emphasizing the importance of staying connected through frequent interactions. When confli ... (175 characters truncated) ... ful conversations and verbal affirmations. Overall, 지민 seeks deep connections with their partners, prioritizing emotional intimacy and understanding.', 'created_at': datetime.datetime(2025, 7, 14, 4, 8, 44, 236763), 'updated_at': datetime.datetime(2025, 7, 14, 4, 8, 44, 236767)}
[2025-07-14 13:08:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:44][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 13:08:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:08:44][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 13:08:44][INFO][sqlalchemy.engine.Engine] [cached since 1.945s ago] {'user_id_1': '2'}
[2025-07-14 13:08:44][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:08:44][INFO][sqlalchemy.engine.Engine] [cached since 1.944s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 13:08:46][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:08:46][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:08:46][INFO][sqlalchemy.engine.Engine] [cached since 2.293s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 13:08:46][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 13:08:46][INFO][sqlalchemy.engine.Engine] [cached since 2.292s ago] {'user_id': '2', 'summary': '수아 values trust in her relationships and prefers to let conflicts simmer down naturally before addressing them. She expresses affection primarily thr ... (196 characters truncated) ...  in her relationships, supporting autonomy while fostering connection. Overall, she strives for harmony and understanding with her significant other.', 'created_at': datetime.datetime(2025, 7, 14, 4, 8, 46, 528907), 'updated_at': datetime.datetime(2025, 7, 14, 4, 8, 46, 528911)}
[2025-07-14 13:08:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:08:46][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 13:08:46][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 13:08:46][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00080s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:00][INFO][routers.ai_chat] [chat_with_persona] 요청: user_id=1, couple_id=1
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id': '1', 'couple_id': '1', 'role': 'user', 'content': '내가 영어로 말해도 한국어로 대답해줘', 'created_at': datetime.datetime(2025, 7, 14, 4, 9, 0, 722968), 'embed_index': None}
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'pk_1': 1}
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] [cached since 0.002938s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:00][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:00][INFO][routers.ai_chat] [chat_with_persona] OpenAI 호출 시작: user_id=1, history_len=7
[2025-07-14 13:09:01][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:09:01][INFO][routers.ai_chat] [chat_with_persona] OpenAI 응답 성공: user_id=1
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] [cached since 1.064s ago] {'user_id': '1', 'couple_id': '1', 'role': 'assistant', 'content': '알겠어요! 지민님이 편하신 언어로 말씀해 주시고, 저는 한국어로 답변해드릴게요. 😊 어떤 이야기 나누고 싶으세요?', 'created_at': datetime.datetime(2025, 7, 14, 4, 9, 1, 786896), 'embed_index': None}
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] [cached since 1.067s ago] {'pk_1': 2}
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] [cached since 1.066s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:01][INFO][routers.ai_chat] [chat_with_persona] 응답 완료: user_id=1, msg_id=2
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] [cached since 1.07s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] [cached since 1.072s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1'}
[2025-07-14 13:09:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] [cached since 14.49s ago] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:14][INFO][routers.ai_chat] [chat_with_persona] 요청: user_id=1, couple_id=1
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] [cached since 14.23s ago] {'user_id': '1', 'couple_id': '1', 'role': 'user', 'content': 'im so sad today', 'created_at': datetime.datetime(2025, 7, 14, 4, 9, 14, 948578), 'embed_index': None}
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] [cached since 14.22s ago] {'pk_1': 3}
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] [cached since 14.22s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] [cached since 14.23s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:14][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:14][INFO][routers.ai_chat] [chat_with_persona] OpenAI 호출 시작: user_id=1, history_len=9
[2025-07-14 13:09:16][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:09:16][INFO][routers.ai_chat] [chat_with_persona] OpenAI 응답 성공: user_id=1
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] [cached since 15.3s ago] {'user_id': '1', 'couple_id': '1', 'role': 'assistant', 'content': '지금 많이 힘드신가 보네요. 어떤 일 때문에 슬픈 마음이 드셨나요? 마음 편하게 말씀해 주세요. 함께 이야기 나누면 조금은 나아질 수도 있을 거예요. 💕', 'created_at': datetime.datetime(2025, 7, 14, 4, 9, 16, 19539), 'embed_index': None}
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] [cached since 15.3s ago] {'pk_1': 4}
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] [cached since 15.3s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:16][INFO][routers.ai_chat] [chat_with_persona] 응답 완료: user_id=1, msg_id=4
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] [cached since 15.31s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] [cached since 15.31s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] [cached since 14.24s ago] {'user_id_1': '1'}
[2025-07-14 13:09:16][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] [cached since 55.03s ago] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:55][INFO][routers.ai_chat] [chat_with_persona] 요청: user_id=1, couple_id=1
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] [cached since 54.78s ago] {'user_id': '1', 'couple_id': '1', 'role': 'user', 'content': 'im exhausted', 'created_at': datetime.datetime(2025, 7, 14, 4, 9, 55, 503568), 'embed_index': None}
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] [cached since 54.85s ago] {'pk_1': 5}
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] [cached since 54.85s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] [cached since 54.85s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:55][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:55][INFO][routers.ai_chat] [chat_with_persona] OpenAI 호출 시작: user_id=1, history_len=11
[2025-07-14 13:09:56][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 13:09:56][INFO][routers.ai_chat] [chat_with_persona] OpenAI 응답 성공: user_id=1
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] INSERT INTO ai_messages (user_id, couple_id, role, content, created_at, embed_index) VALUES (%(user_id)s, %(couple_id)s, %(role)s, %(content)s, %(created_at)s, %(embed_index)s)
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] [cached since 56.2s ago] {'user_id': '1', 'couple_id': '1', 'role': 'assistant', 'content': '지금 많이 지치셨군요. 일이 많으셨던 건가요, 아니면 다른 이유가 있었을까요? 어떻게든 힘이 되어드리고 싶어요. 💗', 'created_at': datetime.datetime(2025, 7, 14, 4, 9, 56, 925878), 'embed_index': None}
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id, ai_messages.user_id, ai_messages.couple_id, ai_messages.role, ai_messages.content, ai_messages.created_at, ai_messages.embed_index 
FROM ai_messages 
WHERE ai_messages.id = %(pk_1)s
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] [cached since 56.23s ago] {'pk_1': 6}
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] [cached since 56.23s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:56][INFO][routers.ai_chat] [chat_with_persona] 응답 완료: user_id=1, msg_id=6
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] [cached since 56.24s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s ORDER BY ai_chat_summaries.created_at DESC 
 LIMIT %(param_1)s
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] [cached since 56.24s ago] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] SELECT ai_messages.id AS ai_messages_id, ai_messages.user_id AS ai_messages_user_id, ai_messages.couple_id AS ai_messages_couple_id, ai_messages.role AS ai_messages_role, ai_messages.content AS ai_messages_content, ai_messages.created_at AS ai_messages_created_at, ai_messages.embed_index AS ai_messages_embed_index 
FROM ai_messages 
WHERE ai_messages.user_id = %(user_id_1)s ORDER BY ai_messages.created_at
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] [cached since 55.17s ago] {'user_id_1': '1'}
[2025-07-14 13:09:56][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 15:24:43][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:24:43][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:24:43][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [no key 0.00026s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [no key 0.00027s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [no key 0.00038s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:24:43][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 24, 44, 197514), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 24, 44, 197518), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 24, 44, 203587)}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 24, 43, 673080), 'choice_id__0': 2, 'user_id__0': '1', 'question_id__0': 1, 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 24, 43, 673113), 'choice_id__1': 8, 'user_id__1': '1', 'question_id__1': 2, 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 24, 43, 673127), 'choice_id__2': 13, 'user_id__2': '1', 'question_id__2': 3, 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 24, 43, 673139), 'choice_id__3': 21, 'user_id__3': '1', 'question_id__3': 4, 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 24, 43, 673151), 'choice_id__4': 26, 'user_id__4': '1', 'question_id__4': 5, 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 24, 43, 673160), 'choice_id__5': 1, 'user_id__5': '2', 'question_id__5': 1, 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 24, 43, 673169), 'choice_id__6': 9, 'user_id__6': '2', 'question_id__6': 2, 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 24, 43, 673179), 'choice_id__7': 16, 'user_id__7': '2', 'question_id__7': 3, 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 24, 43, 673189), 'choice_id__8': 20, 'user_id__8': '2', 'question_id__8': 4, 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 24, 43, 673199), 'choice_id__9': 25, 'user_id__9': '2', 'question_id__9': 5}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'user_id__12': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__14': '바쁨', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감'}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'has_image__0': 0, 'deleted_at__0': None, 'is_delivered__0': 1, 'image_url__0': None, 'embed_index__0': None, 'user_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'couple_id__0': '1', 'has_image__1': 0, 'deleted_at__1': None, 'is_delivered__1': 1, 'image_url__1': None, 'embed_index__1': None, 'user_id__1': '2', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'couple_id__1': '1', 'has_image__2': 0, 'deleted_at__2': None, 'is_delivered__2': 1, 'image_url__2': None, 'embed_index__2': None, 'user_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'couple_id__2': '1', 'has_image__3': 0, 'deleted_at__3': None, 'is_delivered__3': 1, 'image_url__3': None, 'embed_index__3': None, 'user_id__3': '2', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'couple_id__3': '1', 'has_image__4': 0, 'deleted_at__4': None, 'is_delivered__4': 1, 'image_url__4': None, 'embed_index__4': None, 'user_id__4': '2', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'content__4': '어제 약속했는데 통화 못했네 😕', 'couple_id__4': '1', 'has_image__5': 0, 'deleted_at__5': None, 'is_delivered__5': 1, 'image_url__5': None, 'embed_index__5': None ... 170 parameters truncated ... 'embed_index__24': None, 'user_id__24': '1', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'content__24': '너랑 시간 보내는 거 제일 좋아', 'couple_id__24': '1', 'has_image__25': 0, 'deleted_at__25': None, 'is_delivered__25': 1, 'image_url__25': None, 'embed_index__25': None, 'user_id__25': '2', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'content__25': '나도야~ 🥰', 'couple_id__25': '1', 'has_image__26': 0, 'deleted_at__26': None, 'is_delivered__26': 1, 'image_url__26': None, 'embed_index__26': None, 'user_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'content__26': '일주일 진짜 빠르다', 'couple_id__26': '1', 'has_image__27': 0, 'deleted_at__27': None, 'is_delivered__27': 1, 'image_url__27': None, 'embed_index__27': None, 'user_id__27': '2', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'couple_id__27': '1', 'has_image__28': 0, 'deleted_at__28': None, 'is_delivered__28': 1, 'image_url__28': None, 'embed_index__28': None, 'user_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'content__28': '너 있어서 든든했어', 'couple_id__28': '1', 'has_image__29': 0, 'deleted_at__29': None, 'is_delivered__29': 1, 'image_url__29': None, 'embed_index__29': None, 'user_id__29': '2', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'couple_id__29': '1'}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 15:24:44][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1'}
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:24:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:24:46][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:24:46][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:24:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:24:46][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:24:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id': '1', 'summary': '지민 highly values communication in relationships, preferring to maintain open and honest dialogue. When faced with conflict, they tend to remain calm  ... (246 characters truncated) ... nteraction and engagement. Ultimately, they seek a deep and meaningful connection, prioritizing sincerity and emotional depth in their relationships.', 'created_at': datetime.datetime(2025, 7, 14, 6, 24, 46, 825808), 'updated_at': datetime.datetime(2025, 7, 14, 6, 24, 46, 825811)}
[2025-07-14 15:24:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:46][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:24:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:24:46][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:24:46][INFO][sqlalchemy.engine.Engine] [cached since 2.572s ago] {'user_id_1': '2'}
[2025-07-14 15:24:46][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:24:46][INFO][sqlalchemy.engine.Engine] [cached since 2.569s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:24:49][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:24:49][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:24:49][INFO][sqlalchemy.engine.Engine] [cached since 3.01s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:24:49][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:24:49][INFO][sqlalchemy.engine.Engine] [cached since 3.013s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships and prefers to address conflicts by giving them time to resolve naturally. She expresses affec ... (293 characters truncated) ... th partners have space for their individual interests. Overall, she aims for a harmonious partnership that respects mutual autonomy and togetherness.', 'created_at': datetime.datetime(2025, 7, 14, 6, 24, 49, 837954), 'updated_at': datetime.datetime(2025, 7, 14, 6, 24, 49, 837977)}
[2025-07-14 15:24:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:24:49][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:24:49][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:24:49][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:24:49][ERROR][root] 유저 couple chat 분석 실패: asyncio.run() cannot be called from a running event loop
[2025-07-14 15:25:31][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:25:31][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:25:31][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00084s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00041s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00026s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:31][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 25, 32, 62147), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 25, 32, 62152), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 25, 32, 68230)}
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 25, 31, 534444), 'user_id__0': '1', 'choice_id__0': 2, 'question_id__0': 1, 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 25, 31, 534469), 'user_id__1': '1', 'choice_id__1': 8, 'question_id__1': 2, 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 25, 31, 534484), 'user_id__2': '1', 'choice_id__2': 13, 'question_id__2': 3, 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 25, 31, 534496), 'user_id__3': '1', 'choice_id__3': 21, 'question_id__3': 4, 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 25, 31, 534508), 'user_id__4': '1', 'choice_id__4': 26, 'question_id__4': 5, 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 25, 31, 534517), 'user_id__5': '2', 'choice_id__5': 1, 'question_id__5': 1, 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 25, 31, 534529), 'user_id__6': '2', 'choice_id__6': 9, 'question_id__6': 2, 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 25, 31, 534539), 'user_id__7': '2', 'choice_id__7': 16, 'question_id__7': 3, 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 25, 31, 534549), 'user_id__8': '2', 'choice_id__8': 20, 'question_id__8': 4, 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 25, 31, 534559), 'user_id__9': '2', 'choice_id__9': 25, 'question_id__9': 5}
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__12': '너에 대한 애정이 넘쳤어.', 'user_id__12': '1' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__14': '바쁨', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감'}
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__0': None, 'embed_index__0': None, 'has_image__0': 0, 'is_delivered__0': 1, 'couple_id__0': '1', 'deleted_at__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'user_id__1': '2', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__1': None, 'embed_index__1': None, 'has_image__1': 0, 'is_delivered__1': 1, 'couple_id__1': '1', 'deleted_at__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'user_id__2': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__2': None, 'embed_index__2': None, 'has_image__2': 0, 'is_delivered__2': 1, 'couple_id__2': '1', 'deleted_at__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'user_id__3': '2', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__3': None, 'embed_index__3': None, 'has_image__3': 0, 'is_delivered__3': 1, 'couple_id__3': '1', 'deleted_at__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'user_id__4': '2', 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__4': None, 'embed_index__4': None, 'has_image__4': 0, 'is_delivered__4': 1, 'couple_id__4': '1', 'deleted_at__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'user_id__5': '1', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'image_url__5': None, 'embed_index__5': None, 'has_image__5': 0 ... 170 parameters truncated ... 'has_image__24': 0, 'is_delivered__24': 1, 'couple_id__24': '1', 'deleted_at__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'user_id__25': '2', 'content__25': '나도야~ 🥰', 'image_url__25': None, 'embed_index__25': None, 'has_image__25': 0, 'is_delivered__25': 1, 'couple_id__25': '1', 'deleted_at__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'user_id__26': '1', 'content__26': '일주일 진짜 빠르다', 'image_url__26': None, 'embed_index__26': None, 'has_image__26': 0, 'is_delivered__26': 1, 'couple_id__26': '1', 'deleted_at__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'user_id__27': '2', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__27': None, 'embed_index__27': None, 'has_image__27': 0, 'is_delivered__27': 1, 'couple_id__27': '1', 'deleted_at__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'user_id__28': '1', 'content__28': '너 있어서 든든했어', 'image_url__28': None, 'embed_index__28': None, 'has_image__28': 0, 'is_delivered__28': 1, 'couple_id__28': '1', 'deleted_at__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'user_id__29': '2', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'image_url__29': None, 'embed_index__29': None, 'has_image__29': 0, 'is_delivered__29': 1, 'couple_id__29': '1', 'deleted_at__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0)}
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 15:25:32][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1'}
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:25:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:25:34][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:25:34][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:25:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:25:34][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:25:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'user_id': '1', 'summary': 'Jimin values open and effective communication in relationships, making it a cornerstone of their interactions. When conflicts arise, they prefer to c ... (227 characters truncated) ... eir partner, fostering a sense of closeness and connection. Ultimately, they seek a deep, meaningful relationship that goes beyond the surface level.', 'created_at': datetime.datetime(2025, 7, 14, 6, 25, 34, 778172), 'updated_at': datetime.datetime(2025, 7, 14, 6, 25, 34, 778176)}
[2025-07-14 15:25:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:34][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:25:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:34][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:25:34][INFO][sqlalchemy.engine.Engine] [cached since 2.66s ago] {'user_id_1': '2'}
[2025-07-14 15:25:34][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:25:34][INFO][sqlalchemy.engine.Engine] [cached since 2.658s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:25:36][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:25:36][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:25:36][INFO][sqlalchemy.engine.Engine] [cached since 2.07s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:25:36][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:25:36][INFO][sqlalchemy.engine.Engine] [cached since 2.073s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, emphasizing transparency and reliability. In times of conflict, she prefers to wait things ou ... (263 characters truncated) ...  Ultimately, 수아 seeks a relationship where both partners enjoy balanced independence, allowing space for personal growth while supporting each other.', 'created_at': datetime.datetime(2025, 7, 14, 6, 25, 36, 849992), 'updated_at': datetime.datetime(2025, 7, 14, 6, 25, 36, 850007)}
[2025-07-14 15:25:36][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:36][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:25:36][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:25:36][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:25:36][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:25:45][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:25:46][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:25:46][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00026s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00028s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [no key 0.00026s] {}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 25, 46, 663778), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 25, 46, 663783), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 25, 46, 669023)}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 25, 46, 138339), 'choice_id__0': 2, 'user_id__0': '1', 'question_id__0': 1, 'custom_input__0': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 25, 46, 138368), 'choice_id__1': 8, 'user_id__1': '1', 'question_id__1': 2, 'custom_input__1': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 25, 46, 138384), 'choice_id__2': 13, 'user_id__2': '1', 'question_id__2': 3, 'custom_input__2': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 25, 46, 138401), 'choice_id__3': 21, 'user_id__3': '1', 'question_id__3': 4, 'custom_input__3': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 25, 46, 138414), 'choice_id__4': 26, 'user_id__4': '1', 'question_id__4': 5, 'custom_input__4': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 25, 46, 138424), 'choice_id__5': 1, 'user_id__5': '2', 'question_id__5': 1, 'custom_input__5': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 25, 46, 138433), 'choice_id__6': 9, 'user_id__6': '2', 'question_id__6': 2, 'custom_input__6': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 25, 46, 138442), 'choice_id__7': 16, 'user_id__7': '2', 'question_id__7': 3, 'custom_input__7': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 25, 46, 138452), 'choice_id__8': 20, 'user_id__8': '2', 'question_id__8': 4, 'custom_input__8': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 25, 46, 138463), 'choice_id__9': 25, 'user_id__9': '2', 'question_id__9': 5, 'custom_input__9': None}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'user_id__0': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'user_id__1': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'user_id__2': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'user_id__3': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'user_id__4': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'user_id__5': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'user_id__6': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'user_id__7': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'user_id__8': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'user_id__9': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'user_id__10': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'user_id__11': '1', 'memo__12': '너에 대한 애정이 넘쳤어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'emotion__14': '바쁨', 'user_id__14': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'user_id__15': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'user_id__16': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'user_id__17': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'user_id__18': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'user_id__19': '2', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'user_id__20': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'user_id__21': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'user_id__22': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'user_id__23': '2', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'user_id__24': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'user_id__25': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'user_id__26': '2'}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s (insertmanyvalues) 1/1 (ordered)] {'couple_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'image_url__0': None, 'deleted_at__0': None, 'embed_index__0': None, 'user_id__0': '1', 'is_delivered__0': 1, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'has_image__0': 0, 'couple_id__1': '1', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'image_url__1': None, 'deleted_at__1': None, 'embed_index__1': None, 'user_id__1': '2', 'is_delivered__1': 1, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'has_image__1': 0, 'couple_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'image_url__2': None, 'deleted_at__2': None, 'embed_index__2': None, 'user_id__2': '1', 'is_delivered__2': 1, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'has_image__2': 0, 'couple_id__3': '1', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'image_url__3': None, 'deleted_at__3': None, 'embed_index__3': None, 'user_id__3': '2', 'is_delivered__3': 1, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'has_image__3': 0, 'couple_id__4': '1', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'image_url__4': None, 'deleted_at__4': None, 'embed_index__4': None, 'user_id__4': '2', 'is_delivered__4': 1, 'content__4': '어제 약속했는데 통화 못했네 😕', 'has_image__4': 0, 'couple_id__5': '1', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'image_url__5': None, 'deleted_at__5': None, 'embed_index__5': None ... 170 parameters truncated ... 'embed_index__24': None, 'user_id__24': '1', 'is_delivered__24': 1, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'has_image__24': 0, 'couple_id__25': '1', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'image_url__25': None, 'deleted_at__25': None, 'embed_index__25': None, 'user_id__25': '2', 'is_delivered__25': 1, 'content__25': '나도야~ 🥰', 'has_image__25': 0, 'couple_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'image_url__26': None, 'deleted_at__26': None, 'embed_index__26': None, 'user_id__26': '1', 'is_delivered__26': 1, 'content__26': '일주일 진짜 빠르다', 'has_image__26': 0, 'couple_id__27': '1', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'image_url__27': None, 'deleted_at__27': None, 'embed_index__27': None, 'user_id__27': '2', 'is_delivered__27': 1, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'has_image__27': 0, 'couple_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'image_url__28': None, 'deleted_at__28': None, 'embed_index__28': None, 'user_id__28': '1', 'is_delivered__28': 1, 'content__28': '너 있어서 든든했어', 'has_image__28': 0, 'couple_id__29': '1', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'image_url__29': None, 'deleted_at__29': None, 'embed_index__29': None, 'user_id__29': '2', 'is_delivered__29': 1, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'has_image__29': 0}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 15:25:46][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] {'user_id_1': '1'}
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:25:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:25:49][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:25:49][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:25:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00054s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:25:49][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:25:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00047s] {'user_id': '1', 'summary': '지민 values open communication in relationships and prefers addressing conflicts calmly before engaging in a constructive conversation. They express af ... (176 characters truncated) ... tion and interaction. Their ideal relationship is grounded in a deep emotional bond, suggesting a preference for meaningful and profound connections.', 'created_at': datetime.datetime(2025, 7, 14, 6, 25, 49, 79840), 'updated_at': datetime.datetime(2025, 7, 14, 6, 25, 49, 79847)}
[2025-07-14 15:25:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:49][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:25:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:25:49][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:25:49][INFO][sqlalchemy.engine.Engine] [cached since 2.365s ago] {'user_id_1': '2'}
[2025-07-14 15:25:49][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:25:49][INFO][sqlalchemy.engine.Engine] [cached since 2.365s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:25:51][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:25:51][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:25:51][INFO][sqlalchemy.engine.Engine] [cached since 2.499s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:25:51][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:25:51][INFO][sqlalchemy.engine.Engine] [cached since 2.497s ago] {'user_id': '2', 'summary': '수아 values trust in a relationship, making it a cornerstone of her interactions. When conflicts arise, she prefers to wait it out rather than confront ... (270 characters truncated) ... ar but not overwhelming communication. Ultimately, 수아 seeks a balanced relationship where both partners enjoy independence while remaining connected.', 'created_at': datetime.datetime(2025, 7, 14, 6, 25, 51, 576476), 'updated_at': datetime.datetime(2025, 7, 14, 6, 25, 51, 576479)}
[2025-07-14 15:25:51][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:25:51][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:25:51][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:25:51][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:25:51][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:26:16][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:26:16][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:26:16][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00026s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 26, 16, 972147), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 26, 16, 972151), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 26, 16, 977145)}
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 26, 16, 463027), 'user_id__0': '1', 'question_id__0': 1, 'choice_id__0': 2, 'custom_input__0': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 26, 16, 463055), 'user_id__1': '1', 'question_id__1': 2, 'choice_id__1': 8, 'custom_input__1': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 26, 16, 463071), 'user_id__2': '1', 'question_id__2': 3, 'choice_id__2': 13, 'custom_input__2': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 26, 16, 463084), 'user_id__3': '1', 'question_id__3': 4, 'choice_id__3': 21, 'custom_input__3': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 26, 16, 463095), 'user_id__4': '1', 'question_id__4': 5, 'choice_id__4': 26, 'custom_input__4': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 26, 16, 463105), 'user_id__5': '2', 'question_id__5': 1, 'choice_id__5': 1, 'custom_input__5': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 26, 16, 463113), 'user_id__6': '2', 'question_id__6': 2, 'choice_id__6': 9, 'custom_input__6': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 26, 16, 463123), 'user_id__7': '2', 'question_id__7': 3, 'choice_id__7': 16, 'custom_input__7': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 26, 16, 463132), 'user_id__8': '2', 'question_id__8': 4, 'choice_id__8': 20, 'custom_input__8': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 26, 16, 463146), 'user_id__9': '2', 'question_id__9': 5, 'choice_id__9': 25, 'custom_input__9': None}
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'image_url__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'couple_id__0': '1', 'has_image__0': 0, 'deleted_at__0': None, 'user_id__0': '1', 'embed_index__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'is_delivered__0': 1, 'image_url__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'couple_id__1': '1', 'has_image__1': 0, 'deleted_at__1': None, 'user_id__1': '2', 'embed_index__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'is_delivered__1': 1, 'image_url__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'couple_id__2': '1', 'has_image__2': 0, 'deleted_at__2': None, 'user_id__2': '1', 'embed_index__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'is_delivered__2': 1, 'image_url__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'couple_id__3': '1', 'has_image__3': 0, 'deleted_at__3': None, 'user_id__3': '2', 'embed_index__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'is_delivered__3': 1, 'image_url__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'couple_id__4': '1', 'has_image__4': 0, 'deleted_at__4': None, 'user_id__4': '2', 'embed_index__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'is_delivered__4': 1, 'image_url__5': None, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'couple_id__5': '1', 'has_image__5': 0, 'deleted_at__5': None ... 170 parameters truncated ... 'deleted_at__24': None, 'user_id__24': '1', 'embed_index__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'is_delivered__24': 1, 'image_url__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'couple_id__25': '1', 'has_image__25': 0, 'deleted_at__25': None, 'user_id__25': '2', 'embed_index__25': None, 'content__25': '나도야~ 🥰', 'is_delivered__25': 1, 'image_url__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'couple_id__26': '1', 'has_image__26': 0, 'deleted_at__26': None, 'user_id__26': '1', 'embed_index__26': None, 'content__26': '일주일 진짜 빠르다', 'is_delivered__26': 1, 'image_url__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'couple_id__27': '1', 'has_image__27': 0, 'deleted_at__27': None, 'user_id__27': '2', 'embed_index__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'is_delivered__27': 1, 'image_url__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'couple_id__28': '1', 'has_image__28': 0, 'deleted_at__28': None, 'user_id__28': '1', 'embed_index__28': None, 'content__28': '너 있어서 든든했어', 'is_delivered__28': 1, 'image_url__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'couple_id__29': '1', 'has_image__29': 0, 'deleted_at__29': None, 'user_id__29': '2', 'embed_index__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'is_delivered__29': 1}
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 15:26:17][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1'}
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:26:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:26:20][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:26:20][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:26:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00075s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:26:20][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:26:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, suggesting they believe open dialogue is key to a strong bond. When conflicts arise, they prefer to  ... (263 characters truncated) ... ntain a sense of closeness. Ultimately, they seek a deep and meaningful connection with their partner, emphasizing emotional depth and understanding.', 'created_at': datetime.datetime(2025, 7, 14, 6, 26, 20, 245767), 'updated_at': datetime.datetime(2025, 7, 14, 6, 26, 20, 245771)}
[2025-07-14 15:26:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:20][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:26:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:20][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:26:20][INFO][sqlalchemy.engine.Engine] [cached since 3.22s ago] {'user_id_1': '2'}
[2025-07-14 15:26:20][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:26:20][INFO][sqlalchemy.engine.Engine] [cached since 3.219s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:26:22][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 2.005s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 2.003s ago] {'user_id': '2', 'summary': '수아 values trust as a cornerstone of their relationships, emphasizing the importance of honesty and reliability. When conflicts arise, they prefer to  ... (268 characters truncated) ...  between togetherness and personal space. 수아 seeks a relationship where both partners can enjoy their independence while remaining closely connected.', 'created_at': datetime.datetime(2025, 7, 14, 6, 26, 22, 248190), 'updated_at': datetime.datetime(2025, 7, 14, 6, 26, 22, 248193)}
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:22][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:26:22][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:26:22][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] 전체 1명 분석 시작 (2025-07-02)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 23, 59, 59, 999999)}
[2025-07-14 15:26:22][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] ('1',)의 2025-07-02 대화 없음
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] 전체 분석 완료
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.00779s ago] {}
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] 전체 1명 분석 시작 (2025-07-03)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.008099s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 23, 59, 59, 999999)}
[2025-07-14 15:26:22][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] ('1',)의 2025-07-03 대화 없음
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] 전체 분석 완료
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.01345s ago] {}
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] 전체 1명 분석 시작 (2025-07-04)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.01107s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 23, 59, 59, 999999)}
[2025-07-14 15:26:22][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] ('1',)의 2025-07-04 대화 없음
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] 전체 분석 완료
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.01602s ago] {}
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] 전체 1명 분석 시작 (2025-07-05)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.01461s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 23, 59, 59, 999999)}
[2025-07-14 15:26:22][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] ('1',)의 2025-07-05 대화 없음
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] 전체 분석 완료
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.02111s ago] {}
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] 전체 1명 분석 시작 (2025-07-06)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.02039s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 23, 59, 59, 999999)}
[2025-07-14 15:26:22][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] ('1',)의 2025-07-06 대화 없음
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] 전체 분석 완료
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.02727s ago] {}
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] 전체 1명 분석 시작 (2025-07-07)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.02672s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 23, 59, 59, 999999)}
[2025-07-14 15:26:22][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] ('1',)의 2025-07-07 대화 없음
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] 전체 분석 완료
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.03376s ago] {}
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] 전체 1명 분석 시작 (2025-07-08)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:22][INFO][sqlalchemy.engine.Engine] [cached since 0.03132s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 8, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 23, 59, 59, 999999)}
[2025-07-14 15:26:22][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] ('1',)의 2025-07-08 대화 없음
[2025-07-14 15:26:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] 전체 분석 완료
[2025-07-14 15:26:22][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:26:23][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:26:23][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:26:23][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:26:23][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 26, 24, 253332), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 26, 24, 253336), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 26, 24, 261974)}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00108s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00076s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 26, 23, 783639), 'user_id__0': '1', 'custom_input__0': None, 'question_id__0': 1, 'choice_id__0': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 26, 23, 783688), 'user_id__1': '1', 'custom_input__1': None, 'question_id__1': 2, 'choice_id__1': 8, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 26, 23, 783702), 'user_id__2': '1', 'custom_input__2': None, 'question_id__2': 3, 'choice_id__2': 13, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 26, 23, 783715), 'user_id__3': '1', 'custom_input__3': None, 'question_id__3': 4, 'choice_id__3': 21, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 26, 23, 783727), 'user_id__4': '1', 'custom_input__4': None, 'question_id__4': 5, 'choice_id__4': 26, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 26, 23, 783737), 'user_id__5': '2', 'custom_input__5': None, 'question_id__5': 1, 'choice_id__5': 1, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 26, 23, 783746), 'user_id__6': '2', 'custom_input__6': None, 'question_id__6': 2, 'choice_id__6': 9, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 26, 23, 783755), 'user_id__7': '2', 'custom_input__7': None, 'question_id__7': 3, 'choice_id__7': 16, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 26, 23, 783765), 'user_id__8': '2', 'custom_input__8': None, 'question_id__8': 4, 'choice_id__8': 20, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 26, 23, 783776), 'user_id__9': '2', 'custom_input__9': None, 'question_id__9': 5, 'choice_id__9': 25}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__12': '애정' ... 8 parameters truncated ... 'user_id__14': '2', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s (insertmanyvalues) 1/1 (ordered)] {'is_delivered__0': 1, 'couple_id__0': '1', 'has_image__0': 0, 'deleted_at__0': None, 'image_url__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'user_id__0': '1', 'embed_index__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'is_delivered__1': 1, 'couple_id__1': '1', 'has_image__1': 0, 'deleted_at__1': None, 'image_url__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'user_id__1': '2', 'embed_index__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'is_delivered__2': 1, 'couple_id__2': '1', 'has_image__2': 0, 'deleted_at__2': None, 'image_url__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'user_id__2': '1', 'embed_index__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'is_delivered__3': 1, 'couple_id__3': '1', 'has_image__3': 0, 'deleted_at__3': None, 'image_url__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'user_id__3': '2', 'embed_index__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'is_delivered__4': 1, 'couple_id__4': '1', 'has_image__4': 0, 'deleted_at__4': None, 'image_url__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'user_id__4': '2', 'embed_index__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'is_delivered__5': 1, 'couple_id__5': '1', 'has_image__5': 0, 'deleted_at__5': None, 'image_url__5': None ... 170 parameters truncated ... 'image_url__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'user_id__24': '1', 'embed_index__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'is_delivered__25': 1, 'couple_id__25': '1', 'has_image__25': 0, 'deleted_at__25': None, 'image_url__25': None, 'content__25': '나도야~ 🥰', 'user_id__25': '2', 'embed_index__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'is_delivered__26': 1, 'couple_id__26': '1', 'has_image__26': 0, 'deleted_at__26': None, 'image_url__26': None, 'content__26': '일주일 진짜 빠르다', 'user_id__26': '1', 'embed_index__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'is_delivered__27': 1, 'couple_id__27': '1', 'has_image__27': 0, 'deleted_at__27': None, 'image_url__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'user_id__27': '2', 'embed_index__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'is_delivered__28': 1, 'couple_id__28': '1', 'has_image__28': 0, 'deleted_at__28': None, 'image_url__28': None, 'content__28': '너 있어서 든든했어', 'user_id__28': '1', 'embed_index__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'is_delivered__29': 1, 'couple_id__29': '1', 'has_image__29': 0, 'deleted_at__29': None, 'image_url__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'user_id__29': '2', 'embed_index__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0)}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 15:26:24][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1'}
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:26:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:26:26][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:26:26][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:26:26][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:26:26][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:26:26][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id': '1', 'summary': '지민 values communication as a cornerstone of their relationships, ensuring that open dialogue is maintained. In times of conflict, they prefer to stay ... (179 characters truncated) ... t is important to 지민, as they seek to maintain a close and ongoing connection. Ultimately, 지민 aspires to cultivate deep and meaningful relationships.', 'created_at': datetime.datetime(2025, 7, 14, 6, 26, 26, 352995), 'updated_at': datetime.datetime(2025, 7, 14, 6, 26, 26, 352998)}
[2025-07-14 15:26:26][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:26][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:26:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:26][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:26:26][INFO][sqlalchemy.engine.Engine] [cached since 2.025s ago] {'user_id_1': '2'}
[2025-07-14 15:26:26][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:26:26][INFO][sqlalchemy.engine.Engine] [cached since 2.025s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:26:29][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 2.976s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 2.979s ago] {'user_id': '2', 'summary': '수아 values trust in relationships and responds to conflicts by waiting for tensions to subside before addressing them. She expresses affection through ... (259 characters truncated) ... rs maintain their individuality while being connected. Overall, her approach to relationships is thoughtful, patient, and centered on mutual respect.', 'created_at': datetime.datetime(2025, 7, 14, 6, 26, 29, 330998), 'updated_at': datetime.datetime(2025, 7, 14, 6, 26, 29, 331013)}
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:26:29][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:26:29][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:26:29][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {}
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] 전체 1명 분석 시작 (2025-07-02)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 23, 59, 59, 999999)}
[2025-07-14 15:26:29][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] ('1',)의 2025-07-02 대화 없음
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] 전체 분석 완료
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.007051s ago] {}
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] 전체 1명 분석 시작 (2025-07-03)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.005869s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 23, 59, 59, 999999)}
[2025-07-14 15:26:29][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] ('1',)의 2025-07-03 대화 없음
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] 전체 분석 완료
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.01268s ago] {}
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] 전체 1명 분석 시작 (2025-07-04)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.0119s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 23, 59, 59, 999999)}
[2025-07-14 15:26:29][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] ('1',)의 2025-07-04 대화 없음
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] 전체 분석 완료
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.01881s ago] {}
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] 전체 1명 분석 시작 (2025-07-05)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.01747s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 23, 59, 59, 999999)}
[2025-07-14 15:26:29][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] ('1',)의 2025-07-05 대화 없음
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] 전체 분석 완료
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.02423s ago] {}
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] 전체 1명 분석 시작 (2025-07-06)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.02314s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 23, 59, 59, 999999)}
[2025-07-14 15:26:29][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] ('1',)의 2025-07-06 대화 없음
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] 전체 분석 완료
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.03292s ago] {}
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] 전체 1명 분석 시작 (2025-07-07)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.03033s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 23, 59, 59, 999999)}
[2025-07-14 15:26:29][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] ('1',)의 2025-07-07 대화 없음
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] 전체 분석 완료
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.0358s ago] {}
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] 전체 1명 분석 시작 (2025-07-08)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:26:29][INFO][sqlalchemy.engine.Engine] [cached since 0.03348s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 8, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 23, 59, 59, 999999)}
[2025-07-14 15:26:29][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] ('1',)의 2025-07-08 대화 없음
[2025-07-14 15:26:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] 전체 분석 완료
[2025-07-14 15:26:29][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:27:27][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:27:27][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:27:27][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00045s] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:27:27][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00082s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00036s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00062s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 27, 28, 470639), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 27, 28, 470643), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 27, 28, 475771)}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'custom_input__0': None, 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 27, 27, 812770), 'choice_id__0': 2, 'user_id__1': '1', 'custom_input__1': None, 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 27, 27, 812800), 'choice_id__1': 8, 'user_id__2': '1', 'custom_input__2': None, 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 27, 27, 812814), 'choice_id__2': 13, 'user_id__3': '1', 'custom_input__3': None, 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 27, 27, 812828), 'choice_id__3': 21, 'user_id__4': '1', 'custom_input__4': None, 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 27, 27, 812840), 'choice_id__4': 26, 'user_id__5': '2', 'custom_input__5': None, 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 27, 27, 812849), 'choice_id__5': 1, 'user_id__6': '2', 'custom_input__6': None, 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 27, 27, 812858), 'choice_id__6': 9, 'user_id__7': '2', 'custom_input__7': None, 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 27, 27, 812868), 'choice_id__7': 16, 'user_id__8': '2', 'custom_input__8': None, 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 27, 27, 812878), 'choice_id__8': 20, 'user_id__9': '2', 'custom_input__9': None, 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 27, 27, 812889), 'choice_id__9': 25}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__12': '애정' ... 8 parameters truncated ... 'user_id__14': '2', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'image_url__0': None, 'is_delivered__0': 1, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'couple_id__0': '1', 'has_image__0': 0, 'embed_index__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'user_id__1': '2', 'image_url__1': None, 'is_delivered__1': 1, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'couple_id__1': '1', 'has_image__1': 0, 'embed_index__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'user_id__2': '1', 'image_url__2': None, 'is_delivered__2': 1, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'couple_id__2': '1', 'has_image__2': 0, 'embed_index__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'user_id__3': '2', 'image_url__3': None, 'is_delivered__3': 1, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'couple_id__3': '1', 'has_image__3': 0, 'embed_index__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'user_id__4': '2', 'image_url__4': None, 'is_delivered__4': 1, 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'couple_id__4': '1', 'has_image__4': 0, 'embed_index__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'user_id__5': '1', 'image_url__5': None, 'is_delivered__5': 1, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'deleted_at__5': None ... 170 parameters truncated ... 'deleted_at__24': None, 'couple_id__24': '1', 'has_image__24': 0, 'embed_index__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'user_id__25': '2', 'image_url__25': None, 'is_delivered__25': 1, 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'couple_id__25': '1', 'has_image__25': 0, 'embed_index__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'user_id__26': '1', 'image_url__26': None, 'is_delivered__26': 1, 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'couple_id__26': '1', 'has_image__26': 0, 'embed_index__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'user_id__27': '2', 'image_url__27': None, 'is_delivered__27': 1, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'couple_id__27': '1', 'has_image__27': 0, 'embed_index__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'user_id__28': '1', 'image_url__28': None, 'is_delivered__28': 1, 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'couple_id__28': '1', 'has_image__28': 0, 'embed_index__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'user_id__29': '2', 'image_url__29': None, 'is_delivered__29': 1, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None, 'couple_id__29': '1', 'has_image__29': 0, 'embed_index__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0)}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 15:27:28][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1'}
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:27:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00030s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:27:30][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:27:30][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:27:30][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:27:30][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:27:30][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id': '1', 'summary': '지민 values open and effective communication in their relationships, prioritizing honest and meaningful exchanges. When conflicts arise, they prefer to ... (282 characters truncated) ... se bond. Ultimately, they aim for a deep connection, underscoring the importance of emotional intimacy and understanding in their ideal relationship.', 'created_at': datetime.datetime(2025, 7, 14, 6, 27, 30, 728666), 'updated_at': datetime.datetime(2025, 7, 14, 6, 27, 30, 728669)}
[2025-07-14 15:27:30][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:30][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:27:30][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:30][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:27:30][INFO][sqlalchemy.engine.Engine] [cached since 2.207s ago] {'user_id_1': '2'}
[2025-07-14 15:27:30][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:27:30][INFO][sqlalchemy.engine.Engine] [cached since 2.206s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:27:33][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 2.61s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 2.609s ago] {'user_id': '2', 'summary': '수아 values trust as a cornerstone in her relationships, preferring partners who are trustworthy and supportive. She tends to respond to conflicts by w ... (295 characters truncated) ... Overall, 수아 seeks a relationship characterized by balanced independence, where both partners maintain their individuality while being closely bonded.', 'created_at': datetime.datetime(2025, 7, 14, 6, 27, 33, 337584), 'updated_at': datetime.datetime(2025, 7, 14, 6, 27, 33, 337587)}
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:27:33][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:27:33][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:27:33][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] 전체 1 커플 분석 시작 (2025-07-02)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 23, 59, 59, 999999)}
[2025-07-14 15:27:33][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] ('1',)의 2025-07-02 대화 없음
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] 전체 분석 완료
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.007606s ago] {}
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] 전체 1 커플 분석 시작 (2025-07-03)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.006547s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 23, 59, 59, 999999)}
[2025-07-14 15:27:33][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] ('1',)의 2025-07-03 대화 없음
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] 전체 분석 완료
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.0123s ago] {}
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] 전체 1 커플 분석 시작 (2025-07-04)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.009458s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 23, 59, 59, 999999)}
[2025-07-14 15:27:33][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] ('1',)의 2025-07-04 대화 없음
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] 전체 분석 완료
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.01541s ago] {}
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] 전체 1 커플 분석 시작 (2025-07-05)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.01417s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 23, 59, 59, 999999)}
[2025-07-14 15:27:33][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] ('1',)의 2025-07-05 대화 없음
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] 전체 분석 완료
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.02149s ago] {}
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] 전체 1 커플 분석 시작 (2025-07-06)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.02063s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 23, 59, 59, 999999)}
[2025-07-14 15:27:33][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] ('1',)의 2025-07-06 대화 없음
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] 전체 분석 완료
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.02799s ago] {}
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] 전체 1 커플 분석 시작 (2025-07-07)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.02632s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 23, 59, 59, 999999)}
[2025-07-14 15:27:33][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] ('1',)의 2025-07-07 대화 없음
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] 전체 분석 완료
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.03429s ago] {}
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] 전체 1 커플 분석 시작 (2025-07-08)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at <= %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:27:33][INFO][sqlalchemy.engine.Engine] [cached since 0.0313s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 8, 0, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 23, 59, 59, 999999)}
[2025-07-14 15:27:33][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] ('1',)의 2025-07-08 대화 없음
[2025-07-14 15:27:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] 전체 분석 완료
[2025-07-14 15:27:33][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:29:08][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:29:08][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:29:08][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00092s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00033s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:08][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 29, 9, 37524), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 29, 9, 37528), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 29, 9, 42104)}
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'choice_id__0': 2, 'custom_input__0': None, 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 29, 8, 549719), 'user_id__0': '1', 'choice_id__1': 8, 'custom_input__1': None, 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 29, 8, 549750), 'user_id__1': '1', 'choice_id__2': 13, 'custom_input__2': None, 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 29, 8, 549765), 'user_id__2': '1', 'choice_id__3': 21, 'custom_input__3': None, 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 29, 8, 549780), 'user_id__3': '1', 'choice_id__4': 26, 'custom_input__4': None, 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 29, 8, 549793), 'user_id__4': '1', 'choice_id__5': 1, 'custom_input__5': None, 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 29, 8, 549803), 'user_id__5': '2', 'choice_id__6': 9, 'custom_input__6': None, 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 29, 8, 549813), 'user_id__6': '2', 'choice_id__7': 16, 'custom_input__7': None, 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 29, 8, 549823), 'user_id__7': '2', 'choice_id__8': 20, 'custom_input__8': None, 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 29, 8, 549834), 'user_id__8': '2', 'choice_id__9': 25, 'custom_input__9': None, 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 29, 8, 549845), 'user_id__9': '2'}
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'user_id__0': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'user_id__1': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'user_id__2': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'user_id__3': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'user_id__4': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'user_id__5': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'user_id__6': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'user_id__7': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'user_id__8': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'user_id__9': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'user_id__10': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'user_id__11': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'user_id__14': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'user_id__15': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'user_id__16': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'user_id__17': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'user_id__18': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'user_id__19': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'user_id__20': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'user_id__21': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'user_id__22': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'user_id__23': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'user_id__24': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'user_id__25': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'user_id__26': '2'}
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s (insertmanyvalues) 1/1 (ordered)] {'has_image__0': 0, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'couple_id__0': '1', 'deleted_at__0': None, 'is_delivered__0': 1, 'image_url__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'embed_index__0': None, 'user_id__0': '1', 'has_image__1': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'couple_id__1': '1', 'deleted_at__1': None, 'is_delivered__1': 1, 'image_url__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'embed_index__1': None, 'user_id__1': '2', 'has_image__2': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'couple_id__2': '1', 'deleted_at__2': None, 'is_delivered__2': 1, 'image_url__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'embed_index__2': None, 'user_id__2': '1', 'has_image__3': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'couple_id__3': '1', 'deleted_at__3': None, 'is_delivered__3': 1, 'image_url__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'embed_index__3': None, 'user_id__3': '2', 'has_image__4': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'couple_id__4': '1', 'deleted_at__4': None, 'is_delivered__4': 1, 'image_url__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'embed_index__4': None, 'user_id__4': '2', 'has_image__5': 0, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'couple_id__5': '1', 'deleted_at__5': None, 'is_delivered__5': 1 ... 170 parameters truncated ... 'is_delivered__24': 1, 'image_url__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'embed_index__24': None, 'user_id__24': '1', 'has_image__25': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'couple_id__25': '1', 'deleted_at__25': None, 'is_delivered__25': 1, 'image_url__25': None, 'content__25': '나도야~ 🥰', 'embed_index__25': None, 'user_id__25': '2', 'has_image__26': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'couple_id__26': '1', 'deleted_at__26': None, 'is_delivered__26': 1, 'image_url__26': None, 'content__26': '일주일 진짜 빠르다', 'embed_index__26': None, 'user_id__26': '1', 'has_image__27': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'couple_id__27': '1', 'deleted_at__27': None, 'is_delivered__27': 1, 'image_url__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'embed_index__27': None, 'user_id__27': '2', 'has_image__28': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'couple_id__28': '1', 'deleted_at__28': None, 'is_delivered__28': 1, 'image_url__28': None, 'content__28': '너 있어서 든든했어', 'embed_index__28': None, 'user_id__28': '1', 'has_image__29': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'couple_id__29': '1', 'deleted_at__29': None, 'is_delivered__29': 1, 'image_url__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'embed_index__29': None, 'user_id__29': '2'}
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 15:29:09][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1'}
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:29:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:29:10][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:29:10][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:29:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00060s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:29:10][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:29:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00051s] {'user_id': '1', 'summary': '지민 values open and effective communication in relationships, prioritizing clear and honest exchanges. When conflicts arise, they prefer to take a mom ... (249 characters truncated) ...  intimacy and understanding. Overall, they are committed to nurturing a strong bond through regular communication and thoughtful expressions of care.', 'created_at': datetime.datetime(2025, 7, 14, 6, 29, 10, 845723), 'updated_at': datetime.datetime(2025, 7, 14, 6, 29, 10, 845732)}
[2025-07-14 15:29:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:10][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:29:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:10][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:29:10][INFO][sqlalchemy.engine.Engine] [cached since 1.762s ago] {'user_id_1': '2'}
[2025-07-14 15:29:10][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:29:10][INFO][sqlalchemy.engine.Engine] [cached since 1.762s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:29:14][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 3.187s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 3.185s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships and prefers to build connections based on mutual understanding. When conflicts arise, she tend ... (306 characters truncated) ... g. Overall, 수아 seeks a relationship marked by balanced independence, where both partners have space to grow individually while supporting each other.', 'created_at': datetime.datetime(2025, 7, 14, 6, 29, 14, 30266), 'updated_at': datetime.datetime(2025, 7, 14, 6, 29, 14, 30270)}
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:14][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:29:14][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:29:14][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] 전체 1 커플 분석 시작 (2025-07-02)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': ('1',), 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 2)}
[2025-07-14 15:29:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] ('1',)의 2025-07-02 대화 없음
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02)] 전체 분석 완료
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.007705s ago] {}
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] 전체 1 커플 분석 시작 (2025-07-03)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.007295s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.date(2025, 7, 2), 'created_at_2': datetime.date(2025, 7, 3)}
[2025-07-14 15:29:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] ('1',)의 2025-07-03 대화 없음
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03)] 전체 분석 완료
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.01276s ago] {}
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] 전체 1 커플 분석 시작 (2025-07-04)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.009877s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.date(2025, 7, 3), 'created_at_2': datetime.date(2025, 7, 4)}
[2025-07-14 15:29:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] ('1',)의 2025-07-04 대화 없음
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04)] 전체 분석 완료
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.01552s ago] {}
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] 전체 1 커플 분석 시작 (2025-07-05)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.01413s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.date(2025, 7, 4), 'created_at_2': datetime.date(2025, 7, 5)}
[2025-07-14 15:29:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] ('1',)의 2025-07-05 대화 없음
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05)] 전체 분석 완료
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.02105s ago] {}
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] 전체 1 커플 분석 시작 (2025-07-06)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.01997s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.date(2025, 7, 5), 'created_at_2': datetime.date(2025, 7, 6)}
[2025-07-14 15:29:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] ('1',)의 2025-07-06 대화 없음
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06)] 전체 분석 완료
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.02693s ago] {}
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] 전체 1 커플 분석 시작 (2025-07-07)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.02533s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.date(2025, 7, 6), 'created_at_2': datetime.date(2025, 7, 7)}
[2025-07-14 15:29:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] ('1',)의 2025-07-07 대화 없음
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07)] 전체 분석 완료
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.03425s ago] {}
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] 전체 1 커플 분석 시작 (2025-07-08)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:14][INFO][sqlalchemy.engine.Engine] [cached since 0.03196s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.date(2025, 7, 7), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 15:29:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] ('1',)의 2025-07-08 대화 없음
[2025-07-14 15:29:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08)] 전체 분석 완료
[2025-07-14 15:29:14][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:29:15][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:29:15][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:29:15][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:29:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00030s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 29, 16, 349796), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 29, 16, 349800), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 29, 16, 356027)}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'question_id__0': 1, 'custom_input__0': None, 'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 29, 15, 890583), 'user_id__0': '1', 'question_id__1': 2, 'custom_input__1': None, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 29, 15, 890612), 'user_id__1': '1', 'question_id__2': 3, 'custom_input__2': None, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 29, 15, 890625), 'user_id__2': '1', 'question_id__3': 4, 'custom_input__3': None, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 29, 15, 890637), 'user_id__3': '1', 'question_id__4': 5, 'custom_input__4': None, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 29, 15, 890649), 'user_id__4': '1', 'question_id__5': 1, 'custom_input__5': None, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 29, 15, 890659), 'user_id__5': '2', 'question_id__6': 2, 'custom_input__6': None, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 29, 15, 890670), 'user_id__6': '2', 'question_id__7': 3, 'custom_input__7': None, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 29, 15, 890681), 'user_id__7': '2', 'question_id__8': 4, 'custom_input__8': None, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 29, 15, 890691), 'user_id__8': '2', 'question_id__9': 5, 'custom_input__9': None, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 29, 15, 890702), 'user_id__9': '2'}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'emotion__12': '애정', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__14': '2', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2'}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s (insertmanyvalues) 1/1 (ordered)] {'embed_index__0': None, 'couple_id__0': '1', 'image_url__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'is_delivered__0': 1, 'has_image__0': 0, 'user_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'embed_index__1': None, 'couple_id__1': '1', 'image_url__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'is_delivered__1': 1, 'has_image__1': 0, 'user_id__1': '2', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'embed_index__2': None, 'couple_id__2': '1', 'image_url__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'is_delivered__2': 1, 'has_image__2': 0, 'user_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'embed_index__3': None, 'couple_id__3': '1', 'image_url__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'is_delivered__3': 1, 'has_image__3': 0, 'user_id__3': '2', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'embed_index__4': None, 'couple_id__4': '1', 'image_url__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'is_delivered__4': 1, 'has_image__4': 0, 'user_id__4': '2', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'embed_index__5': None, 'couple_id__5': '1', 'image_url__5': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'deleted_at__5': None ... 170 parameters truncated ... 'deleted_at__24': None, 'is_delivered__24': 1, 'has_image__24': 0, 'user_id__24': '1', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'embed_index__25': None, 'couple_id__25': '1', 'image_url__25': None, 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'is_delivered__25': 1, 'has_image__25': 0, 'user_id__25': '2', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'embed_index__26': None, 'couple_id__26': '1', 'image_url__26': None, 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'is_delivered__26': 1, 'has_image__26': 0, 'user_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'embed_index__27': None, 'couple_id__27': '1', 'image_url__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'is_delivered__27': 1, 'has_image__27': 0, 'user_id__27': '2', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'embed_index__28': None, 'couple_id__28': '1', 'image_url__28': None, 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'is_delivered__28': 1, 'has_image__28': 0, 'user_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'embed_index__29': None, 'couple_id__29': '1', 'image_url__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None, 'is_delivered__29': 1, 'has_image__29': 0, 'user_id__29': '2', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0)}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 15:29:16][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1'}
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:29:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:29:19][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:29:19][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:29:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00050s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:29:19][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:29:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00057s] {'user_id': '1', 'summary': '지민 values communication as a cornerstone of their relationships, often using words to express affection and forge deeper connections. In times of con ... (174 characters truncated) ...  sense of closeness and understanding. Ultimately, 지민 seeks relationships that are rooted in profound emotional connections and mutual understanding.', 'created_at': datetime.datetime(2025, 7, 14, 6, 29, 19, 78863), 'updated_at': datetime.datetime(2025, 7, 14, 6, 29, 19, 78871)}
[2025-07-14 15:29:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:19][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:29:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:19][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:29:19][INFO][sqlalchemy.engine.Engine] [cached since 2.686s ago] {'user_id_1': '2'}
[2025-07-14 15:29:19][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:29:19][INFO][sqlalchemy.engine.Engine] [cached since 2.687s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:29:20][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 1.871s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 1.869s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, preferring partners who are reliable and honest. When conflicts arise, she tends to adopt a w ... (230 characters truncated) ... ontact, maintaining connections without being overwhelming. 수아 seeks a relationship where both partners enjoy autonomy while nurturing a strong bond.', 'created_at': datetime.datetime(2025, 7, 14, 6, 29, 20, 947162), 'updated_at': datetime.datetime(2025, 7, 14, 6, 29, 20, 947165)}
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:29:20][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:29:20][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:29:20][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:29:20][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] ('1',)의 2025-07-02 04:00:00 대화 없음
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.006794s ago] {}
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.007075s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:29:20][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] ('1',)의 2025-07-03 04:00:00 대화 없음
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.012s ago] {}
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.009575s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:29:20][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] ('1',)의 2025-07-04 04:00:00 대화 없음
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.01478s ago] {}
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.01422s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:29:20][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] ('1',)의 2025-07-05 04:00:00 대화 없음
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.02038s ago] {}
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.01922s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:29:20][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] ('1',)의 2025-07-06 04:00:00 대화 없음
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.0253s ago] {}
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.02397s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:29:20][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] ('1',)의 2025-07-07 04:00:00 대화 없음
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.03105s ago] {}
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:29:20][INFO][sqlalchemy.engine.Engine] [cached since 0.02886s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:29:20][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] ('1',)의 2025-07-08 04:00:00 대화 없음
[2025-07-14 15:29:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:29:20][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:32:32][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:32:32][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:32:32][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00034s] {}
[2025-07-14 15:32:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00059s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00028s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 32, 33, 517466), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 32, 33, 517469), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 32, 33, 524070)}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00034s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'question_id__0': 1, 'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 32, 33, 4206), 'user_id__0': '1', 'custom_input__1': None, 'question_id__1': 2, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 32, 33, 4232), 'user_id__1': '1', 'custom_input__2': None, 'question_id__2': 3, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 32, 33, 4245), 'user_id__2': '1', 'custom_input__3': None, 'question_id__3': 4, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 32, 33, 4256), 'user_id__3': '1', 'custom_input__4': None, 'question_id__4': 5, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 32, 33, 4269), 'user_id__4': '1', 'custom_input__5': None, 'question_id__5': 1, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 32, 33, 4281), 'user_id__5': '2', 'custom_input__6': None, 'question_id__6': 2, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 32, 33, 4291), 'user_id__6': '2', 'custom_input__7': None, 'question_id__7': 3, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 32, 33, 4305), 'user_id__7': '2', 'custom_input__8': None, 'question_id__8': 4, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 32, 33, 4318), 'user_id__8': '2', 'custom_input__9': None, 'question_id__9': 5, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 32, 33, 4329), 'user_id__9': '2'}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__12': '애정' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__14': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2'}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'is_delivered__0': 1, 'has_image__0': 0, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__0': None, 'deleted_at__0': None, 'embed_index__0': None, 'user_id__0': '1', 'couple_id__0': '1', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'is_delivered__1': 1, 'has_image__1': 0, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__1': None, 'deleted_at__1': None, 'embed_index__1': None, 'user_id__1': '2', 'couple_id__1': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'is_delivered__2': 1, 'has_image__2': 0, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__2': None, 'deleted_at__2': None, 'embed_index__2': None, 'user_id__2': '1', 'couple_id__2': '1', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'is_delivered__3': 1, 'has_image__3': 0, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__3': None, 'deleted_at__3': None, 'embed_index__3': None, 'user_id__3': '2', 'couple_id__3': '1', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'is_delivered__4': 1, 'has_image__4': 0, 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__4': None, 'deleted_at__4': None, 'embed_index__4': None, 'user_id__4': '2', 'couple_id__4': '1', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'is_delivered__5': 1, 'has_image__5': 0, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'image_url__5': None ... 170 parameters truncated ... 'image_url__24': None, 'deleted_at__24': None, 'embed_index__24': None, 'user_id__24': '1', 'couple_id__24': '1', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'is_delivered__25': 1, 'has_image__25': 0, 'content__25': '나도야~ 🥰', 'image_url__25': None, 'deleted_at__25': None, 'embed_index__25': None, 'user_id__25': '2', 'couple_id__25': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'is_delivered__26': 1, 'has_image__26': 0, 'content__26': '일주일 진짜 빠르다', 'image_url__26': None, 'deleted_at__26': None, 'embed_index__26': None, 'user_id__26': '1', 'couple_id__26': '1', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'is_delivered__27': 1, 'has_image__27': 0, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__27': None, 'deleted_at__27': None, 'embed_index__27': None, 'user_id__27': '2', 'couple_id__27': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'is_delivered__28': 1, 'has_image__28': 0, 'content__28': '너 있어서 든든했어', 'image_url__28': None, 'deleted_at__28': None, 'embed_index__28': None, 'user_id__28': '1', 'couple_id__28': '1', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'is_delivered__29': 1, 'has_image__29': 0, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'image_url__29': None, 'deleted_at__29': None, 'embed_index__29': None, 'user_id__29': '2', 'couple_id__29': '1'}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 15:32:33][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1'}
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:32:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:32:47][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:32:47][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:32:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:32:47][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:32:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id': '1', 'summary': '지민 highly values open and effective communication in relationships, ensuring that both parties understand each other well. When conflicts arise, they ... (293 characters truncated) ... ense of closeness and ongoing connection. Ultimately, they seek a deep and meaningful bond, focusing on building a profound and lasting relationship.', 'created_at': datetime.datetime(2025, 7, 14, 6, 32, 47, 409350), 'updated_at': datetime.datetime(2025, 7, 14, 6, 32, 47, 409354)}
[2025-07-14 15:32:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:47][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:32:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:47][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:32:47][INFO][sqlalchemy.engine.Engine] [cached since 13.84s ago] {'user_id_1': '2'}
[2025-07-14 15:32:47][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:32:47][INFO][sqlalchemy.engine.Engine] [cached since 13.84s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:32:50][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 2.885s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 2.885s ago] {'user_id': '2', 'summary': '수아 values trust as a cornerstone of her relationships, striving to build strong bonds grounded in reliability and honesty. She approaches conflicts w ... (285 characters truncated) ... pendence and values personal space within the relationship. Overall, 수아 seeks a partnership where mutual trust and independence coexist harmoniously.', 'created_at': datetime.datetime(2025, 7, 14, 6, 32, 50, 294150), 'updated_at': datetime.datetime(2025, 7, 14, 6, 32, 50, 294153)}
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:32:50][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:32:50][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:32:50][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:32:50][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] ('1',)의 2025-07-02 04:00:00 대화 없음
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.007023s ago] {}
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.007108s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:32:50][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] ('1',)의 2025-07-03 04:00:00 대화 없음
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.01202s ago] {}
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.009827s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:32:50][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] ('1',)의 2025-07-04 04:00:00 대화 없음
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.01468s ago] {}
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.01373s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:32:50][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] ('1',)의 2025-07-05 04:00:00 대화 없음
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.02055s ago] {}
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.01964s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:32:50][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] ('1',)의 2025-07-06 04:00:00 대화 없음
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.0261s ago] {}
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.02508s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:32:50][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] ('1',)의 2025-07-07 04:00:00 대화 없음
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.03186s ago] {}
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:32:50][INFO][sqlalchemy.engine.Engine] [cached since 0.0297s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:32:50][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] ('1',)의 2025-07-08 04:00:00 대화 없음
[2025-07-14 15:32:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:32:50][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:33:41][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:33:41][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:33:41][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 33, 41, 984080), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 33, 41, 984083), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 33, 41, 989462)}
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:33:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'question_id__0': 1, 'user_id__0': '1', 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 33, 41, 532213), 'choice_id__0': 2, 'custom_input__1': None, 'question_id__1': 2, 'user_id__1': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 33, 41, 532240), 'choice_id__1': 8, 'custom_input__2': None, 'question_id__2': 3, 'user_id__2': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 33, 41, 532254), 'choice_id__2': 13, 'custom_input__3': None, 'question_id__3': 4, 'user_id__3': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 33, 41, 532266), 'choice_id__3': 21, 'custom_input__4': None, 'question_id__4': 5, 'user_id__4': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 33, 41, 532278), 'choice_id__4': 26, 'custom_input__5': None, 'question_id__5': 1, 'user_id__5': '2', 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 33, 41, 532288), 'choice_id__5': 1, 'custom_input__6': None, 'question_id__6': 2, 'user_id__6': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 33, 41, 532297), 'choice_id__6': 9, 'custom_input__7': None, 'question_id__7': 3, 'user_id__7': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 33, 41, 532307), 'choice_id__7': 16, 'custom_input__8': None, 'question_id__8': 4, 'user_id__8': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 33, 41, 532317), 'choice_id__8': 20, 'custom_input__9': None, 'question_id__9': 5, 'user_id__9': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 33, 41, 532328), 'choice_id__9': 25}
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__14': '바쁨', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감'}
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s (insertmanyvalues) 1/1 (ordered)] {'image_url__0': None, 'embed_index__0': None, 'is_delivered__0': 1, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'user_id__0': '1', 'couple_id__0': '1', 'deleted_at__0': None, 'has_image__0': 0, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__1': None, 'embed_index__1': None, 'is_delivered__1': 1, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'user_id__1': '2', 'couple_id__1': '1', 'deleted_at__1': None, 'has_image__1': 0, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__2': None, 'embed_index__2': None, 'is_delivered__2': 1, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'user_id__2': '1', 'couple_id__2': '1', 'deleted_at__2': None, 'has_image__2': 0, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__3': None, 'embed_index__3': None, 'is_delivered__3': 1, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'user_id__3': '2', 'couple_id__3': '1', 'deleted_at__3': None, 'has_image__3': 0, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__4': None, 'embed_index__4': None, 'is_delivered__4': 1, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'user_id__4': '2', 'couple_id__4': '1', 'deleted_at__4': None, 'has_image__4': 0, 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__5': None, 'embed_index__5': None, 'is_delivered__5': 1, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'user_id__5': '1' ... 170 parameters truncated ... 'user_id__24': '1', 'couple_id__24': '1', 'deleted_at__24': None, 'has_image__24': 0, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'image_url__25': None, 'embed_index__25': None, 'is_delivered__25': 1, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'user_id__25': '2', 'couple_id__25': '1', 'deleted_at__25': None, 'has_image__25': 0, 'content__25': '나도야~ 🥰', 'image_url__26': None, 'embed_index__26': None, 'is_delivered__26': 1, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'user_id__26': '1', 'couple_id__26': '1', 'deleted_at__26': None, 'has_image__26': 0, 'content__26': '일주일 진짜 빠르다', 'image_url__27': None, 'embed_index__27': None, 'is_delivered__27': 1, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'user_id__27': '2', 'couple_id__27': '1', 'deleted_at__27': None, 'has_image__27': 0, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__28': None, 'embed_index__28': None, 'is_delivered__28': 1, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'user_id__28': '1', 'couple_id__28': '1', 'deleted_at__28': None, 'has_image__28': 0, 'content__28': '너 있어서 든든했어', 'image_url__29': None, 'embed_index__29': None, 'is_delivered__29': 1, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'user_id__29': '2', 'couple_id__29': '1', 'deleted_at__29': None, 'has_image__29': 0, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘'}
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 15:33:42][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1'}
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:33:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:33:44][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:33:44][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:33:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00037s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:33:44][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:33:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00041s] {'user_id': '1', 'summary': '지민 values open communication in relationships and prefers to address conflicts by cooling off first, then discussing them calmly. They express affect ... (293 characters truncated) ... sizing mutual understanding and closeness. Overall, 지민 seeks a thoughtful and communicative partnership where both individuals feel heard and valued.', 'created_at': datetime.datetime(2025, 7, 14, 6, 33, 44, 186643), 'updated_at': datetime.datetime(2025, 7, 14, 6, 33, 44, 186649)}
[2025-07-14 15:33:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:44][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:33:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:44][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:33:44][INFO][sqlalchemy.engine.Engine] [cached since 2.152s ago] {'user_id_1': '2'}
[2025-07-14 15:33:44][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:33:44][INFO][sqlalchemy.engine.Engine] [cached since 2.152s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:33:45][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 1.74s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 1.739s ago] {'user_id': '2', 'summary': '수아 values trust as a fundamental aspect of their relationships, prioritizing honesty and reliability. When conflicts arise, they prefer a patient app ... (295 characters truncated) ... alanced sense of independence. Overall, 수아 aims for a harmonious relationship that allows both partners to grow individually while staying connected.', 'created_at': datetime.datetime(2025, 7, 14, 6, 33, 45, 925016), 'updated_at': datetime.datetime(2025, 7, 14, 6, 33, 45, 925019)}
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:33:45][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:33:45][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:33:45][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:33:45][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] ('1',)의 2025-07-02 04:00:00 대화 없음
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.006978s ago] {}
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.007133s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:33:45][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] ('1',)의 2025-07-03 04:00:00 대화 없음
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.01229s ago] {}
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.009942s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:33:45][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] ('1',)의 2025-07-04 04:00:00 대화 없음
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.01504s ago] {}
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.01409s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:33:45][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] ('1',)의 2025-07-05 04:00:00 대화 없음
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.02071s ago] {}
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.01976s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:33:45][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] ('1',)의 2025-07-06 04:00:00 대화 없음
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.02621s ago] {}
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.02553s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:33:45][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] ('1',)의 2025-07-07 04:00:00 대화 없음
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.03306s ago] {}
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:33:45][INFO][sqlalchemy.engine.Engine] [cached since 0.03075s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:33:45][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] ('1',)의 2025-07-08 04:00:00 대화 없음
[2025-07-14 15:33:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:33:45][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:39:18][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:39:18][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:39:18][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:39:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00028s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00028s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00053s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00033s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 39, 19, 398956), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 39, 19, 398959), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 39, 19, 405453)}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 39, 18, 927622), 'custom_input__0': None, 'user_id__0': '1', 'question_id__0': 1, 'choice_id__0': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 39, 18, 927648), 'custom_input__1': None, 'user_id__1': '1', 'question_id__1': 2, 'choice_id__1': 8, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 39, 18, 927661), 'custom_input__2': None, 'user_id__2': '1', 'question_id__2': 3, 'choice_id__2': 13, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 39, 18, 927672), 'custom_input__3': None, 'user_id__3': '1', 'question_id__3': 4, 'choice_id__3': 21, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 39, 18, 927685), 'custom_input__4': None, 'user_id__4': '1', 'question_id__4': 5, 'choice_id__4': 26, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 39, 18, 927694), 'custom_input__5': None, 'user_id__5': '2', 'question_id__5': 1, 'choice_id__5': 1, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 39, 18, 927703), 'custom_input__6': None, 'user_id__6': '2', 'question_id__6': 2, 'choice_id__6': 9, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 39, 18, 927713), 'custom_input__7': None, 'user_id__7': '2', 'question_id__7': 3, 'choice_id__7': 16, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 39, 18, 927726), 'custom_input__8': None, 'user_id__8': '2', 'question_id__8': 4, 'choice_id__8': 20, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 39, 18, 927737), 'custom_input__9': None, 'user_id__9': '2', 'question_id__9': 5, 'choice_id__9': 25}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'user_id__0': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'user_id__1': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'user_id__2': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'user_id__3': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'user_id__4': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'user_id__5': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'user_id__6': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'user_id__7': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'user_id__8': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'user_id__9': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'user_id__10': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'user_id__11': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'user_id__14': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'user_id__15': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'user_id__16': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'user_id__17': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'user_id__18': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'user_id__19': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'user_id__20': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'user_id__21': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'user_id__22': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'user_id__23': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'user_id__24': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'user_id__25': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'user_id__26': '2'}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s (insertmanyvalues) 1/1 (ordered)] {'deleted_at__0': None, 'image_url__0': None, 'embed_index__0': None, 'is_delivered__0': 1, 'user_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'has_image__0': 0, 'couple_id__0': '1', 'deleted_at__1': None, 'image_url__1': None, 'embed_index__1': None, 'is_delivered__1': 1, 'user_id__1': '2', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'has_image__1': 0, 'couple_id__1': '1', 'deleted_at__2': None, 'image_url__2': None, 'embed_index__2': None, 'is_delivered__2': 1, 'user_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'has_image__2': 0, 'couple_id__2': '1', 'deleted_at__3': None, 'image_url__3': None, 'embed_index__3': None, 'is_delivered__3': 1, 'user_id__3': '2', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'has_image__3': 0, 'couple_id__3': '1', 'deleted_at__4': None, 'image_url__4': None, 'embed_index__4': None, 'is_delivered__4': 1, 'user_id__4': '2', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'content__4': '어제 약속했는데 통화 못했네 😕', 'has_image__4': 0, 'couple_id__4': '1', 'deleted_at__5': None, 'image_url__5': None, 'embed_index__5': None, 'is_delivered__5': 1, 'user_id__5': '1' ... 170 parameters truncated ... 'user_id__24': '1', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'content__24': '너랑 시간 보내는 거 제일 좋아', 'has_image__24': 0, 'couple_id__24': '1', 'deleted_at__25': None, 'image_url__25': None, 'embed_index__25': None, 'is_delivered__25': 1, 'user_id__25': '2', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'content__25': '나도야~ 🥰', 'has_image__25': 0, 'couple_id__25': '1', 'deleted_at__26': None, 'image_url__26': None, 'embed_index__26': None, 'is_delivered__26': 1, 'user_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'content__26': '일주일 진짜 빠르다', 'has_image__26': 0, 'couple_id__26': '1', 'deleted_at__27': None, 'image_url__27': None, 'embed_index__27': None, 'is_delivered__27': 1, 'user_id__27': '2', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'has_image__27': 0, 'couple_id__27': '1', 'deleted_at__28': None, 'image_url__28': None, 'embed_index__28': None, 'is_delivered__28': 1, 'user_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'content__28': '너 있어서 든든했어', 'has_image__28': 0, 'couple_id__28': '1', 'deleted_at__29': None, 'image_url__29': None, 'embed_index__29': None, 'is_delivered__29': 1, 'user_id__29': '2', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'has_image__29': 0, 'couple_id__29': '1'}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 15:39:19][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1'}
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:39:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:39:21][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:39:21][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:39:21][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:39:21][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:39:21][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, emphasizing the importance of open and honest dialogue. When conflicts arise, 지민 prefers to remain c ... (244 characters truncated) ... nteraction to maintain closeness. Ultimately, they seek a deep connection, where both partners understand and support each other on a profound level.', 'created_at': datetime.datetime(2025, 7, 14, 6, 39, 21, 629877), 'updated_at': datetime.datetime(2025, 7, 14, 6, 39, 21, 629882)}
[2025-07-14 15:39:21][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:21][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:39:21][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:21][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:39:21][INFO][sqlalchemy.engine.Engine] [cached since 2.181s ago] {'user_id_1': '2'}
[2025-07-14 15:39:21][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:39:21][INFO][sqlalchemy.engine.Engine] [cached since 2.18s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:39:23][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 2.023s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 2.023s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, prioritizing openness and reliability with her partner. She prefers a balanced approach to co ... (255 characters truncated) ... g regular communication without being overly demanding. Overall, 수아 seeks a relationship that embraces both personal independence and mutual support.', 'created_at': datetime.datetime(2025, 7, 14, 6, 39, 23, 652669), 'updated_at': datetime.datetime(2025, 7, 14, 6, 39, 23, 652681)}
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:39:23][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:39:23][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:39:23][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00038s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': ('1',)}
[2025-07-14 15:39:23][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] ('1',)의 2025-07-02 04:00:00 대화 없음
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.007395s ago] {}
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.006449s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.005323s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:39:23][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] ('1',)의 2025-07-03 04:00:00 대화 없음
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.01352s ago] {}
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.0128s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.01178s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:39:23][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] ('1',)의 2025-07-04 04:00:00 대화 없음
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.02054s ago] {}
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.01982s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.01905s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:39:23][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] ('1',)의 2025-07-05 04:00:00 대화 없음
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.02805s ago] {}
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.02863s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.02764s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:39:23][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] ('1',)의 2025-07-06 04:00:00 대화 없음
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.03468s ago] {}
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.03238s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.03183s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:39:23][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] ('1',)의 2025-07-07 04:00:00 대화 없음
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.03927s ago] {}
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.03748s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:39:23][INFO][sqlalchemy.engine.Engine] [cached since 0.03668s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:39:23][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] ('1',)의 2025-07-08 04:00:00 대화 없음
[2025-07-14 15:39:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:39:23][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:40:03][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:40:03][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:40:03][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 40, 3, 752029), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 40, 3, 752034), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 40, 3, 757905)}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 40, 3, 318310), 'custom_input__0': None, 'choice_id__0': 2, 'user_id__0': '1', 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 40, 3, 318339), 'custom_input__1': None, 'choice_id__1': 8, 'user_id__1': '1', 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 40, 3, 318352), 'custom_input__2': None, 'choice_id__2': 13, 'user_id__2': '1', 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 40, 3, 318363), 'custom_input__3': None, 'choice_id__3': 21, 'user_id__3': '1', 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 40, 3, 318374), 'custom_input__4': None, 'choice_id__4': 26, 'user_id__4': '1', 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 40, 3, 318384), 'custom_input__5': None, 'choice_id__5': 1, 'user_id__5': '2', 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 40, 3, 318392), 'custom_input__6': None, 'choice_id__6': 9, 'user_id__6': '2', 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 40, 3, 318414), 'custom_input__7': None, 'choice_id__7': 16, 'user_id__7': '2', 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 40, 3, 318433), 'custom_input__8': None, 'choice_id__8': 20, 'user_id__8': '2', 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 40, 3, 318445), 'custom_input__9': None, 'choice_id__9': 25, 'user_id__9': '2'}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__14': '바쁨', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감'}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s (insertmanyvalues) 1/1 (ordered)] {'is_delivered__0': 1, 'deleted_at__0': None, 'has_image__0': 0, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'embed_index__0': None, 'image_url__0': None, 'couple_id__0': '1', 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'user_id__0': '1', 'is_delivered__1': 1, 'deleted_at__1': None, 'has_image__1': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'embed_index__1': None, 'image_url__1': None, 'couple_id__1': '1', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'user_id__1': '2', 'is_delivered__2': 1, 'deleted_at__2': None, 'has_image__2': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'embed_index__2': None, 'image_url__2': None, 'couple_id__2': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'user_id__2': '1', 'is_delivered__3': 1, 'deleted_at__3': None, 'has_image__3': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'embed_index__3': None, 'image_url__3': None, 'couple_id__3': '1', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'user_id__3': '2', 'is_delivered__4': 1, 'deleted_at__4': None, 'has_image__4': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'embed_index__4': None, 'image_url__4': None, 'couple_id__4': '1', 'content__4': '어제 약속했는데 통화 못했네 😕', 'user_id__4': '2', 'is_delivered__5': 1, 'deleted_at__5': None, 'has_image__5': 0, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'embed_index__5': None ... 170 parameters truncated ... 'embed_index__24': None, 'image_url__24': None, 'couple_id__24': '1', 'content__24': '너랑 시간 보내는 거 제일 좋아', 'user_id__24': '1', 'is_delivered__25': 1, 'deleted_at__25': None, 'has_image__25': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'embed_index__25': None, 'image_url__25': None, 'couple_id__25': '1', 'content__25': '나도야~ 🥰', 'user_id__25': '2', 'is_delivered__26': 1, 'deleted_at__26': None, 'has_image__26': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'embed_index__26': None, 'image_url__26': None, 'couple_id__26': '1', 'content__26': '일주일 진짜 빠르다', 'user_id__26': '1', 'is_delivered__27': 1, 'deleted_at__27': None, 'has_image__27': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'embed_index__27': None, 'image_url__27': None, 'couple_id__27': '1', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'user_id__27': '2', 'is_delivered__28': 1, 'deleted_at__28': None, 'has_image__28': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'embed_index__28': None, 'image_url__28': None, 'couple_id__28': '1', 'content__28': '너 있어서 든든했어', 'user_id__28': '1', 'is_delivered__29': 1, 'deleted_at__29': None, 'has_image__29': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'embed_index__29': None, 'image_url__29': None, 'couple_id__29': '1', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'user_id__29': '2'}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:40:03][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1'}
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:40:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:40:06][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:40:06][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:40:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00072s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:40:06][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:40:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00058s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, emphasizing the importance of open dialogue. When conflicts arise, they prefer to approach them with ... (301 characters truncated) ... stent connection. Ultimately, they seek relationships that offer a deep and meaningful connection, prioritizing emotional intimacy and understanding.', 'created_at': datetime.datetime(2025, 7, 14, 6, 40, 6, 428911), 'updated_at': datetime.datetime(2025, 7, 14, 6, 40, 6, 428923)}
[2025-07-14 15:40:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:06][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:40:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:06][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:40:06][INFO][sqlalchemy.engine.Engine] [cached since 2.634s ago] {'user_id_1': '2'}
[2025-07-14 15:40:06][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:40:06][INFO][sqlalchemy.engine.Engine] [cached since 2.634s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:40:08][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 2.198s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 2.195s ago] {'user_id': '2', 'summary': '수아 values trust as a foundational element in her relationships, prioritizing honesty and reliability. In times of conflict, she prefers to wait it ou ... (182 characters truncated) ... erate, indicating a balanced approach to communication. Overall, 수아 thrives in relationships that allow for both closeness and personal independence.', 'created_at': datetime.datetime(2025, 7, 14, 6, 40, 8, 623789), 'updated_at': datetime.datetime(2025, 7, 14, 6, 40, 8, 623792)}
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:08][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:40:08][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:40:08][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'couple_id_1': ('1',)}
[2025-07-14 15:40:08][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] ('1',)의 2025-07-02 04:00:00 대화 없음
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.007502s ago] {}
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.006333s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.005437s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:08][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] ('1',)의 2025-07-03 04:00:00 대화 없음
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.01412s ago] {}
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.01289s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.01212s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:08][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] ('1',)의 2025-07-04 04:00:00 대화 없음
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.02093s ago] {}
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.01981s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.01877s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:08][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] ('1',)의 2025-07-05 04:00:00 대화 없음
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.02712s ago] {}
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.02752s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.02686s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:08][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] ('1',)의 2025-07-06 04:00:00 대화 없음
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.03445s ago] {}
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.03181s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.03086s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:08][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] ('1',)의 2025-07-07 04:00:00 대화 없음
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.03797s ago] {}
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.03527s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:08][INFO][sqlalchemy.engine.Engine] [cached since 0.03427s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:08][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] ('1',)의 2025-07-08 04:00:00 대화 없음
[2025-07-14 15:40:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:08][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:40:10][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:40:10][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:40:10][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00106s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00076s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00040s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00080s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 40, 10, 757738), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 40, 10, 757742), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 40, 10, 763514)}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 40, 10, 175181), 'user_id__0': '1', 'choice_id__0': 2, 'custom_input__1': None, 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 40, 10, 175213), 'user_id__1': '1', 'choice_id__1': 8, 'custom_input__2': None, 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 40, 10, 175227), 'user_id__2': '1', 'choice_id__2': 13, 'custom_input__3': None, 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 40, 10, 175238), 'user_id__3': '1', 'choice_id__3': 21, 'custom_input__4': None, 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 40, 10, 175250), 'user_id__4': '1', 'choice_id__4': 26, 'custom_input__5': None, 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 40, 10, 175260), 'user_id__5': '2', 'choice_id__5': 1, 'custom_input__6': None, 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 40, 10, 175269), 'user_id__6': '2', 'choice_id__6': 9, 'custom_input__7': None, 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 40, 10, 175279), 'user_id__7': '2', 'choice_id__7': 16, 'custom_input__8': None, 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 40, 10, 175289), 'user_id__8': '2', 'choice_id__8': 20, 'custom_input__9': None, 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 40, 10, 175300), 'user_id__9': '2', 'choice_id__9': 25}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'memo__12': '너에 대한 애정이 넘쳤어.', 'emotion__12': '애정' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__14': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2'}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'image_url__0': None, 'deleted_at__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'has_image__0': 0, 'is_delivered__0': 1, 'user_id__0': '1', 'couple_id__0': '1', 'embed_index__0': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'image_url__1': None, 'deleted_at__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'has_image__1': 0, 'is_delivered__1': 1, 'user_id__1': '2', 'couple_id__1': '1', 'embed_index__1': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'image_url__2': None, 'deleted_at__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'has_image__2': 0, 'is_delivered__2': 1, 'user_id__2': '1', 'couple_id__2': '1', 'embed_index__2': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'image_url__3': None, 'deleted_at__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'has_image__3': 0, 'is_delivered__3': 1, 'user_id__3': '2', 'couple_id__3': '1', 'embed_index__3': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'image_url__4': None, 'deleted_at__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'has_image__4': 0, 'is_delivered__4': 1, 'user_id__4': '2', 'couple_id__4': '1', 'embed_index__4': None, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'image_url__5': None, 'deleted_at__5': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'has_image__5': 0 ... 170 parameters truncated ... 'has_image__24': 0, 'is_delivered__24': 1, 'user_id__24': '1', 'couple_id__24': '1', 'embed_index__24': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'image_url__25': None, 'deleted_at__25': None, 'content__25': '나도야~ 🥰', 'has_image__25': 0, 'is_delivered__25': 1, 'user_id__25': '2', 'couple_id__25': '1', 'embed_index__25': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'image_url__26': None, 'deleted_at__26': None, 'content__26': '일주일 진짜 빠르다', 'has_image__26': 0, 'is_delivered__26': 1, 'user_id__26': '1', 'couple_id__26': '1', 'embed_index__26': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'image_url__27': None, 'deleted_at__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'has_image__27': 0, 'is_delivered__27': 1, 'user_id__27': '2', 'couple_id__27': '1', 'embed_index__27': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'image_url__28': None, 'deleted_at__28': None, 'content__28': '너 있어서 든든했어', 'has_image__28': 0, 'is_delivered__28': 1, 'user_id__28': '1', 'couple_id__28': '1', 'embed_index__28': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'image_url__29': None, 'deleted_at__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'has_image__29': 0, 'is_delivered__29': 1, 'user_id__29': '2', 'couple_id__29': '1', 'embed_index__29': None}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 15:40:10][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {'user_id_1': '1'}
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:40:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:40:12][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:40:12][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:40:12][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:40:12][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:40:12][INFO][sqlalchemy.engine.Engine] [generated in 0.00040s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, often seeking open and honest dialogue. In the face of conflict, 지민 prefers to remain calm and addre ... (190 characters truncated) ... nt contact, as this helps to maintain a close bond. Ultimately, they seek a deep connection, prioritizing meaningful interactions with their partner.', 'created_at': datetime.datetime(2025, 7, 14, 6, 40, 12, 559235), 'updated_at': datetime.datetime(2025, 7, 14, 6, 40, 12, 559241)}
[2025-07-14 15:40:12][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:12][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:40:12][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:12][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:40:12][INFO][sqlalchemy.engine.Engine] [cached since 1.754s ago] {'user_id_1': '2'}
[2025-07-14 15:40:12][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:40:12][INFO][sqlalchemy.engine.Engine] [cached since 1.754s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:40:14][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 1.673s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 1.672s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, emphasizing honesty and reliability. In times of conflict, she prefers to wait it out, giving ... (274 characters truncated) ...  Ultimately, 수아 seeks a relationship characterized by balanced independence, where both partners maintain their individuality while being supportive.', 'created_at': datetime.datetime(2025, 7, 14, 6, 40, 14, 231112), 'updated_at': datetime.datetime(2025, 7, 14, 6, 40, 14, 231115)}
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:40:14][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:40:14][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:40:14][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'couple_id_1': ('1',)}
[2025-07-14 15:40:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] ('1',)의 2025-07-02 04:00:00 대화 없음
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.007321s ago] {}
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.006904s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.006402s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] ('1',)의 2025-07-03 04:00:00 대화 없음
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.01492s ago] {}
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.01462s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.01409s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] ('1',)의 2025-07-04 04:00:00 대화 없음
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.02272s ago] {}
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.0221s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.02177s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] ('1',)의 2025-07-05 04:00:00 대화 없음
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.03052s ago] {}
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.03171s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.0312s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] ('1',)의 2025-07-06 04:00:00 대화 없음
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.03799s ago] {}
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.03567s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.03491s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] ('1',)의 2025-07-07 04:00:00 대화 없음
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.04149s ago] {}
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.03933s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:40:14][INFO][sqlalchemy.engine.Engine] [cached since 0.03884s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:40:14][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] ('1',)의 2025-07-08 04:00:00 대화 없음
[2025-07-14 15:40:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:40:14][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:41:47][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:41:47][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:41:47][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00030s] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:41:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00028s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00027s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00040s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 41, 48, 457926), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 41, 48, 457930), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 41, 48, 463426)}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00034s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'choice_id__0': 2, 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 41, 47, 810357), 'custom_input__0': None, 'user_id__1': '1', 'choice_id__1': 8, 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 41, 47, 810384), 'custom_input__1': None, 'user_id__2': '1', 'choice_id__2': 13, 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 41, 47, 810398), 'custom_input__2': None, 'user_id__3': '1', 'choice_id__3': 21, 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 41, 47, 810410), 'custom_input__3': None, 'user_id__4': '1', 'choice_id__4': 26, 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 41, 47, 810422), 'custom_input__4': None, 'user_id__5': '2', 'choice_id__5': 1, 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 41, 47, 810431), 'custom_input__5': None, 'user_id__6': '2', 'choice_id__6': 9, 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 41, 47, 810440), 'custom_input__6': None, 'user_id__7': '2', 'choice_id__7': 16, 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 41, 47, 810450), 'custom_input__7': None, 'user_id__8': '2', 'choice_id__8': 20, 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 41, 47, 810460), 'custom_input__8': None, 'user_id__9': '2', 'choice_id__9': 25, 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 41, 47, 810486), 'custom_input__9': None}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'emotion__12': '애정', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__14': '2', 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2'}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'user_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'is_delivered__0': 1, 'image_url__0': None, 'embed_index__0': None, 'deleted_at__0': None, 'has_image__0': 0, 'couple_id__0': '1', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'user_id__1': '2', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'is_delivered__1': 1, 'image_url__1': None, 'embed_index__1': None, 'deleted_at__1': None, 'has_image__1': 0, 'couple_id__1': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'user_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'is_delivered__2': 1, 'image_url__2': None, 'embed_index__2': None, 'deleted_at__2': None, 'has_image__2': 0, 'couple_id__2': '1', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'user_id__3': '2', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'is_delivered__3': 1, 'image_url__3': None, 'embed_index__3': None, 'deleted_at__3': None, 'has_image__3': 0, 'couple_id__3': '1', 'content__4': '어제 약속했는데 통화 못했네 😕', 'user_id__4': '2', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'is_delivered__4': 1, 'image_url__4': None, 'embed_index__4': None, 'deleted_at__4': None, 'has_image__4': 0, 'couple_id__4': '1', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'user_id__5': '1', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'is_delivered__5': 1, 'image_url__5': None ... 170 parameters truncated ... 'image_url__24': None, 'embed_index__24': None, 'deleted_at__24': None, 'has_image__24': 0, 'couple_id__24': '1', 'content__25': '나도야~ 🥰', 'user_id__25': '2', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'is_delivered__25': 1, 'image_url__25': None, 'embed_index__25': None, 'deleted_at__25': None, 'has_image__25': 0, 'couple_id__25': '1', 'content__26': '일주일 진짜 빠르다', 'user_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'is_delivered__26': 1, 'image_url__26': None, 'embed_index__26': None, 'deleted_at__26': None, 'has_image__26': 0, 'couple_id__26': '1', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'user_id__27': '2', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'is_delivered__27': 1, 'image_url__27': None, 'embed_index__27': None, 'deleted_at__27': None, 'has_image__27': 0, 'couple_id__27': '1', 'content__28': '너 있어서 든든했어', 'user_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'is_delivered__28': 1, 'image_url__28': None, 'embed_index__28': None, 'deleted_at__28': None, 'has_image__28': 0, 'couple_id__28': '1', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'user_id__29': '2', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'is_delivered__29': 1, 'image_url__29': None, 'embed_index__29': None, 'deleted_at__29': None, 'has_image__29': 0, 'couple_id__29': '1'}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 15:41:48][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1'}
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:41:50][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:41:50][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:41:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:41:50][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:41:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id': '1', 'summary': "지민 places a high value on communication in relationships and prefers to address conflicts calmly before discussing them. They express affection prima ... (256 characters truncated) ... ritizing emotional intimacy and understanding. Overall, 지민's relationship approach is thoughtful and focused on building strong, communicative bonds.", 'created_at': datetime.datetime(2025, 7, 14, 6, 41, 50, 339014), 'updated_at': datetime.datetime(2025, 7, 14, 6, 41, 50, 339017)}
[2025-07-14 15:41:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:50][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:41:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:50][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:41:50][INFO][sqlalchemy.engine.Engine] [cached since 1.83s ago] {'user_id_1': '2'}
[2025-07-14 15:41:50][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:41:50][INFO][sqlalchemy.engine.Engine] [cached since 1.829s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:41:52][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 1.962s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 1.961s ago] {'user_id': '2', 'summary': "수아 values trust and believes it's the foundation of a strong relationship. When conflicts arise, she prefers a patient approach, giving situations ti ... (249 characters truncated) ... personal space. Overall, 수아 seeks a relationship that balances closeness with independence, ensuring both partners maintain a sense of individuality.", 'created_at': datetime.datetime(2025, 7, 14, 6, 41, 52, 299828), 'updated_at': datetime.datetime(2025, 7, 14, 6, 41, 52, 299831)}
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:52][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:41:52][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:41:52][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'couple_id_1': ('1',)}
[2025-07-14 15:41:52][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] ('1',)의 2025-07-02 04:00:00 대화 없음
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.008172s ago] {}
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.006495s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.005122s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:41:52][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] ('1',)의 2025-07-03 04:00:00 대화 없음
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.01362s ago] {}
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.01223s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.01102s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:41:52][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] ('1',)의 2025-07-04 04:00:00 대화 없음
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.02001s ago] {}
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.01907s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.01784s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:41:52][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] ('1',)의 2025-07-05 04:00:00 대화 없음
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.02685s ago] {}
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.02717s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.02594s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:41:52][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] ('1',)의 2025-07-06 04:00:00 대화 없음
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.03373s ago] {}
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.03137s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.03017s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:41:52][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] ('1',)의 2025-07-07 04:00:00 대화 없음
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.03833s ago] {}
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.03616s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:41:52][INFO][sqlalchemy.engine.Engine] [cached since 0.03478s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:41:52][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] ('1',)의 2025-07-08 04:00:00 대화 없음
[2025-07-14 15:41:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:41:52][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:41:53][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:41:53][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:41:53][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:41:53][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00088s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00105s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 41, 54, 346472), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 41, 54, 346488), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00053s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 41, 54, 358368)}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00036s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00034s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'question_id__0': 1, 'custom_input__0': None, 'user_id__0': '1', 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 41, 53, 835232), 'choice_id__0': 2, 'question_id__1': 2, 'custom_input__1': None, 'user_id__1': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 41, 53, 835259), 'choice_id__1': 8, 'question_id__2': 3, 'custom_input__2': None, 'user_id__2': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 41, 53, 835273), 'choice_id__2': 13, 'question_id__3': 4, 'custom_input__3': None, 'user_id__3': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 41, 53, 835285), 'choice_id__3': 21, 'question_id__4': 5, 'custom_input__4': None, 'user_id__4': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 41, 53, 835297), 'choice_id__4': 26, 'question_id__5': 1, 'custom_input__5': None, 'user_id__5': '2', 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 41, 53, 835306), 'choice_id__5': 1, 'question_id__6': 2, 'custom_input__6': None, 'user_id__6': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 41, 53, 835318), 'choice_id__6': 9, 'question_id__7': 3, 'custom_input__7': None, 'user_id__7': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 41, 53, 835328), 'choice_id__7': 16, 'question_id__8': 4, 'custom_input__8': None, 'user_id__8': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 41, 53, 835338), 'choice_id__8': 20, 'question_id__9': 5, 'custom_input__9': None, 'user_id__9': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 41, 53, 835349), 'choice_id__9': 25}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__12': '애정' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__14': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2'}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'user_id__0': '1', 'is_delivered__0': 1, 'embed_index__0': None, 'deleted_at__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'has_image__0': 0, 'image_url__0': None, 'couple_id__0': '1', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'user_id__1': '2', 'is_delivered__1': 1, 'embed_index__1': None, 'deleted_at__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'has_image__1': 0, 'image_url__1': None, 'couple_id__1': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'user_id__2': '1', 'is_delivered__2': 1, 'embed_index__2': None, 'deleted_at__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'has_image__2': 0, 'image_url__2': None, 'couple_id__2': '1', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'user_id__3': '2', 'is_delivered__3': 1, 'embed_index__3': None, 'deleted_at__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'has_image__3': 0, 'image_url__3': None, 'couple_id__3': '1', 'content__4': '어제 약속했는데 통화 못했네 😕', 'user_id__4': '2', 'is_delivered__4': 1, 'embed_index__4': None, 'deleted_at__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'has_image__4': 0, 'image_url__4': None, 'couple_id__4': '1', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'user_id__5': '1', 'is_delivered__5': 1, 'embed_index__5': None, 'deleted_at__5': None ... 170 parameters truncated ... 'deleted_at__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'has_image__24': 0, 'image_url__24': None, 'couple_id__24': '1', 'content__25': '나도야~ 🥰', 'user_id__25': '2', 'is_delivered__25': 1, 'embed_index__25': None, 'deleted_at__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'has_image__25': 0, 'image_url__25': None, 'couple_id__25': '1', 'content__26': '일주일 진짜 빠르다', 'user_id__26': '1', 'is_delivered__26': 1, 'embed_index__26': None, 'deleted_at__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'has_image__26': 0, 'image_url__26': None, 'couple_id__26': '1', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'user_id__27': '2', 'is_delivered__27': 1, 'embed_index__27': None, 'deleted_at__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'has_image__27': 0, 'image_url__27': None, 'couple_id__27': '1', 'content__28': '너 있어서 든든했어', 'user_id__28': '1', 'is_delivered__28': 1, 'embed_index__28': None, 'deleted_at__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'has_image__28': 0, 'image_url__28': None, 'couple_id__28': '1', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'user_id__29': '2', 'is_delivered__29': 1, 'embed_index__29': None, 'deleted_at__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'has_image__29': 0, 'image_url__29': None, 'couple_id__29': '1'}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:41:54][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {'user_id_1': '1'}
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:41:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:41:56][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:41:56][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:41:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:41:56][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:41:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id': '1', 'summary': "지민 values communication highly in relationships, preferring to maintain open and honest dialogues with their partner. When conflicts arise, they tend ... (191 characters truncated) ... y frequent contact with their partner, emphasizing consistent interaction. Overall, 지민 seeks a deep and meaningful connection in their relationships.", 'created_at': datetime.datetime(2025, 7, 14, 6, 41, 56, 912756), 'updated_at': datetime.datetime(2025, 7, 14, 6, 41, 56, 912758)}
[2025-07-14 15:41:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:41:56][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:41:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:41:56][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:41:56][INFO][sqlalchemy.engine.Engine] [cached since 2.507s ago] {'user_id_1': '2'}
[2025-07-14 15:41:56][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:41:56][INFO][sqlalchemy.engine.Engine] [cached since 2.507s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:42:01][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 2.76s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 2.76s ago] {'user_id': '2', 'summary': '수아 values trust highly in her relationships, seeking connections that are based on mutual reliability and honesty. When conflicts arise, she prefers  ... (305 characters truncated) ...  personal space. Overall, 수아 seeks a relationship where both partners enjoy a healthy level of independence while remaining supportive of each other.', 'created_at': datetime.datetime(2025, 7, 14, 6, 42, 1, 597933), 'updated_at': datetime.datetime(2025, 7, 14, 6, 42, 1, 597936)}
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:42:01][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:42:01][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:42:01][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {}
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] {'couple_id_1': ('1',)}
[2025-07-14 15:42:01][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] ('1',)의 2025-07-02 04:00:00 대화 없음
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.009898s ago] {}
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.008774s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.007642s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:42:01][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] ('1',)의 2025-07-03 04:00:00 대화 없음
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.01729s ago] {}
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.01596s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.01486s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:42:01][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] ('1',)의 2025-07-04 04:00:00 대화 없음
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.02518s ago] {}
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.02421s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.02567s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:42:01][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] ('1',)의 2025-07-05 04:00:00 대화 없음
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.03482s ago] {}
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.03188s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.03051s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:42:01][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] ('1',)의 2025-07-06 04:00:00 대화 없음
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.03883s ago] {}
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.0364s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.03515s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:42:01][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] ('1',)의 2025-07-07 04:00:00 대화 없음
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.04329s ago] {}
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.04172s ago] {'couple_id_1': ('1',), 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s ORDER BY messages.created_at
[2025-07-14 15:42:01][INFO][sqlalchemy.engine.Engine] [cached since 0.04043s ago] {'couple_id_1': ('1',)}
[2025-07-14 15:42:01][WARNING][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] ('1',)의 2025-07-08 04:00:00 대화 없음
[2025-07-14 15:42:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:42:01][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:44:38][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:44:38][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:44:38][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 44, 39, 513011), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 44, 39, 513015), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 44, 39, 517638)}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00045s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'question_id__0': 1, 'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 44, 39, 62936), 'choice_id__0': 2, 'user_id__0': '1', 'question_id__1': 2, 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 44, 39, 62962), 'choice_id__1': 8, 'user_id__1': '1', 'question_id__2': 3, 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 44, 39, 62975), 'choice_id__2': 13, 'user_id__2': '1', 'question_id__3': 4, 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 44, 39, 62987), 'choice_id__3': 21, 'user_id__3': '1', 'question_id__4': 5, 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 44, 39, 62999), 'choice_id__4': 26, 'user_id__4': '1', 'question_id__5': 1, 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 44, 39, 63009), 'choice_id__5': 1, 'user_id__5': '2', 'question_id__6': 2, 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 44, 39, 63018), 'choice_id__6': 9, 'user_id__6': '2', 'question_id__7': 3, 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 44, 39, 63028), 'choice_id__7': 16, 'user_id__7': '2', 'question_id__8': 4, 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 44, 39, 63039), 'choice_id__8': 20, 'user_id__8': '2', 'question_id__9': 5, 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 44, 39, 63050), 'choice_id__9': 25, 'user_id__9': '2'}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'user_id__0': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'user_id__1': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'user_id__2': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'user_id__3': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'user_id__4': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'user_id__5': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'user_id__6': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'user_id__7': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'user_id__8': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'user_id__9': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'user_id__10': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'user_id__11': '1', 'memo__12': '너에 대한 애정이 넘쳤어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'emotion__14': '바쁨', 'user_id__14': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'user_id__15': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'user_id__16': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'user_id__17': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'user_id__18': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'user_id__19': '2', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'user_id__20': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'user_id__21': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'user_id__22': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'user_id__23': '2', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'user_id__24': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'user_id__25': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'user_id__26': '2'}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s (insertmanyvalues) 1/1 (ordered)] {'couple_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__0': None, 'is_delivered__0': 1, 'has_image__0': 0, 'embed_index__0': None, 'deleted_at__0': None, 'user_id__0': '1', 'couple_id__1': '1', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__1': None, 'is_delivered__1': 1, 'has_image__1': 0, 'embed_index__1': None, 'deleted_at__1': None, 'user_id__1': '2', 'couple_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__2': None, 'is_delivered__2': 1, 'has_image__2': 0, 'embed_index__2': None, 'deleted_at__2': None, 'user_id__2': '1', 'couple_id__3': '1', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__3': None, 'is_delivered__3': 1, 'has_image__3': 0, 'embed_index__3': None, 'deleted_at__3': None, 'user_id__3': '2', 'couple_id__4': '1', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__4': None, 'is_delivered__4': 1, 'has_image__4': 0, 'embed_index__4': None, 'deleted_at__4': None, 'user_id__4': '2', 'couple_id__5': '1', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'image_url__5': None, 'is_delivered__5': 1 ... 170 parameters truncated ... 'is_delivered__24': 1, 'has_image__24': 0, 'embed_index__24': None, 'deleted_at__24': None, 'user_id__24': '1', 'couple_id__25': '1', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'content__25': '나도야~ 🥰', 'image_url__25': None, 'is_delivered__25': 1, 'has_image__25': 0, 'embed_index__25': None, 'deleted_at__25': None, 'user_id__25': '2', 'couple_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'content__26': '일주일 진짜 빠르다', 'image_url__26': None, 'is_delivered__26': 1, 'has_image__26': 0, 'embed_index__26': None, 'deleted_at__26': None, 'user_id__26': '1', 'couple_id__27': '1', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__27': None, 'is_delivered__27': 1, 'has_image__27': 0, 'embed_index__27': None, 'deleted_at__27': None, 'user_id__27': '2', 'couple_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'content__28': '너 있어서 든든했어', 'image_url__28': None, 'is_delivered__28': 1, 'has_image__28': 0, 'embed_index__28': None, 'deleted_at__28': None, 'user_id__28': '1', 'couple_id__29': '1', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'image_url__29': None, 'is_delivered__29': 1, 'has_image__29': 0, 'embed_index__29': None, 'deleted_at__29': None, 'user_id__29': '2'}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 15:44:39][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1'}
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:44:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:44:41][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:44:41][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:44:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:44:41][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:44:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'user_id': '1', 'summary': '지민 values communication highly in relationships and prefers to address conflicts by cooling down first and then discussing the issue. They express af ... (236 characters truncated) ... ionships that offer a deep connection and mutual understanding. Overall, 지민 prioritizes open dialogue and emotional closeness in their relationships.', 'created_at': datetime.datetime(2025, 7, 14, 6, 44, 41, 395363), 'updated_at': datetime.datetime(2025, 7, 14, 6, 44, 41, 395367)}
[2025-07-14 15:44:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:41][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:44:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:44:41][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:44:41][INFO][sqlalchemy.engine.Engine] [cached since 1.832s ago] {'user_id_1': '2'}
[2025-07-14 15:44:41][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:44:41][INFO][sqlalchemy.engine.Engine] [cached since 1.831s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:44:43][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:44:43][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:44:43][INFO][sqlalchemy.engine.Engine] [cached since 2.226s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:44:43][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:44:43][INFO][sqlalchemy.engine.Engine] [cached since 2.225s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships and prefers to allow time to resolve conflicts. She expresses affection through spending quali ... (124 characters truncated) ... ependence, where both partners have space to grow individually. Overall, 수아 seeks a harmonious dynamic where mutual understanding and support thrive.', 'created_at': datetime.datetime(2025, 7, 14, 6, 44, 43, 620079), 'updated_at': datetime.datetime(2025, 7, 14, 6, 44, 43, 620082)}
[2025-07-14 15:44:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:44:43][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:44:43][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:44:43][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:44:43][ERROR][root] 유저 couple chat 분석 실패: 'Query' object has no attribute 'scalars'
[2025-07-14 15:45:44][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:45:45][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:45:45][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00052s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 45, 45, 617552), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 45, 45, 617555), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 45, 45, 625156)}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'custom_input__0': None, 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 45, 45, 115820), 'choice_id__0': 2, 'user_id__1': '1', 'custom_input__1': None, 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 45, 45, 115848), 'choice_id__1': 8, 'user_id__2': '1', 'custom_input__2': None, 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 45, 45, 115861), 'choice_id__2': 13, 'user_id__3': '1', 'custom_input__3': None, 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 45, 45, 115873), 'choice_id__3': 21, 'user_id__4': '1', 'custom_input__4': None, 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 45, 45, 115885), 'choice_id__4': 26, 'user_id__5': '2', 'custom_input__5': None, 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 45, 45, 115894), 'choice_id__5': 1, 'user_id__6': '2', 'custom_input__6': None, 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 45, 45, 115903), 'choice_id__6': 9, 'user_id__7': '2', 'custom_input__7': None, 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 45, 45, 115913), 'choice_id__7': 16, 'user_id__8': '2', 'custom_input__8': None, 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 45, 45, 115923), 'choice_id__8': 20, 'user_id__9': '2', 'custom_input__9': None, 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 45, 45, 115934), 'choice_id__9': 25}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__12': '애정' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__14': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2'}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s (insertmanyvalues) 1/1 (ordered)] {'couple_id__0': '1', 'has_image__0': 0, 'is_delivered__0': 1, 'user_id__0': '1', 'deleted_at__0': None, 'embed_index__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'image_url__0': None, 'couple_id__1': '1', 'has_image__1': 0, 'is_delivered__1': 1, 'user_id__1': '2', 'deleted_at__1': None, 'embed_index__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'image_url__1': None, 'couple_id__2': '1', 'has_image__2': 0, 'is_delivered__2': 1, 'user_id__2': '1', 'deleted_at__2': None, 'embed_index__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'image_url__2': None, 'couple_id__3': '1', 'has_image__3': 0, 'is_delivered__3': 1, 'user_id__3': '2', 'deleted_at__3': None, 'embed_index__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'image_url__3': None, 'couple_id__4': '1', 'has_image__4': 0, 'is_delivered__4': 1, 'user_id__4': '2', 'deleted_at__4': None, 'embed_index__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'image_url__4': None, 'couple_id__5': '1', 'has_image__5': 0, 'is_delivered__5': 1, 'user_id__5': '1', 'deleted_at__5': None ... 170 parameters truncated ... 'deleted_at__24': None, 'embed_index__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'image_url__24': None, 'couple_id__25': '1', 'has_image__25': 0, 'is_delivered__25': 1, 'user_id__25': '2', 'deleted_at__25': None, 'embed_index__25': None, 'content__25': '나도야~ 🥰', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'image_url__25': None, 'couple_id__26': '1', 'has_image__26': 0, 'is_delivered__26': 1, 'user_id__26': '1', 'deleted_at__26': None, 'embed_index__26': None, 'content__26': '일주일 진짜 빠르다', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'image_url__26': None, 'couple_id__27': '1', 'has_image__27': 0, 'is_delivered__27': 1, 'user_id__27': '2', 'deleted_at__27': None, 'embed_index__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'image_url__27': None, 'couple_id__28': '1', 'has_image__28': 0, 'is_delivered__28': 1, 'user_id__28': '1', 'deleted_at__28': None, 'embed_index__28': None, 'content__28': '너 있어서 든든했어', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'image_url__28': None, 'couple_id__29': '1', 'has_image__29': 0, 'is_delivered__29': 1, 'user_id__29': '2', 'deleted_at__29': None, 'embed_index__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'image_url__29': None}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 15:45:45][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1'}
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:45:48][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:45:48][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:45:48][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:45:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id': '1', 'summary': '지민 values communication as a cornerstone of their relationships, preferring to address issues calmly before engaging in discussion. They express affe ... (194 characters truncated) ... reciates frequent contact, making it a priority to stay in touch regularly. Overall, they seek a partnership founded on openness and emotional depth.', 'created_at': datetime.datetime(2025, 7, 14, 6, 45, 48, 658793), 'updated_at': datetime.datetime(2025, 7, 14, 6, 45, 48, 658796)}
[2025-07-14 15:45:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:48][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:45:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:48][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:45:48][INFO][sqlalchemy.engine.Engine] [cached since 2.992s ago] {'user_id_1': '2'}
[2025-07-14 15:45:48][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:48][INFO][sqlalchemy.engine.Engine] [cached since 2.992s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:45:52][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] [cached since 3.753s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] [cached since 3.753s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, prioritizing honesty and reliability. When conflicts arise, she prefers to wait it out rather ... (306 characters truncated) ...  Overall, she seeks a balanced sense of independence, desiring a relationship where both partners maintain their individuality while being connected.', 'created_at': datetime.datetime(2025, 7, 14, 6, 45, 52, 411520), 'updated_at': datetime.datetime(2025, 7, 14, 6, 45, 52, 411523)}
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:52][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:45:52][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:45:52][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 15:45:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:45:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:45:55][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('잘 잤어? 오늘도 힘내자! 😊\n응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.\n나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~\n좋아! 우리 저녁엔 통화하자 :)', 62)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 49166), 'modified_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 49166)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-02 04:00:00 분석 저장 완료
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.617s ago] {}
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.615s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:45:55][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('어제 약속했는데 통화 못했네 😕\n미안… 회의 끝나고 뻗어버렸어 ㅠ\n기다렸는데 연락 없어서 속상했어\n진짜 미안해. 오늘은 꼭 먼저 연락할게!', 58)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.01022s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.009588s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 58829), 'modified_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 58829)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-03 04:00:00 분석 저장 완료
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.63s ago] {}
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.628s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:45:55][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('좋은 아침 🌞 오늘은 기분 좀 어때?\n괜찮아! 나도 어제 너무 예민했나봐~\n그럴 수 있지~ 나도 더 신경 쓸게\n우리 오늘 저녁에 산책 어때?\n완전 좋지! 기다릴게 ❤️', 64)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.02272s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.02188s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 71161), 'modified_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 71161)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-04 04:00:00 분석 저장 완료
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.639s ago] {}
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.639s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:45:55][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('점심 뭐 먹었어? 난 제육덮밥 ㅎㅎ\n헉 나도 고기 땡겨서 삼겹살 먹었는데 😆\n맛잘알 역시~\n우리 입맛 잘 맞아 그치? ㅋㅋ', 54)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.03499s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.0346s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 83675), 'modified_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 83675)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-05 04:00:00 분석 저장 완료
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.653s ago] {}
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.651s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:45:55][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('오늘 카톡 답 너무 느렸던 거 알아?\n미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐\n그래도 너무 무신경하게 느껴졌어\n앞으론 짧게라도 꼭 답할게!\n알겠어… 나도 예민했나봐', 65)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.04575s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.04514s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 94340), 'modified_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 94340)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-06 04:00:00 분석 저장 완료
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.663s ago] {}
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.661s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:45:55][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('오늘 영화 예매했어~ 7시 타임!\n오오 고마워! 오늘은 너한테 집중할게 ❤️\n너랑 시간 보내는 거 제일 좋아\n나도야~ 🥰', 46)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.05632s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.05608s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 105143), 'modified_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 105143)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-07 04:00:00 분석 저장 완료
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.674s ago] {}
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 2.673s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:45:55][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('일주일 진짜 빠르다\n그러게~ 우리 이번 주도 잘 버텼다\n너 있어서 든든했어\n다음 주도 잘 지내보자! 사랑해 😘', 44)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.06906s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 8, 0, 0), 'param_1': 1}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] [cached since 0.06842s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 8, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 117631), 'modified_at': datetime.datetime(2025, 7, 14, 6, 45, 55, 117631)}
[2025-07-14 15:45:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-08 04:00:00 분석 저장 완료
[2025-07-14 15:45:55][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:45:55][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:48:43][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:48:43][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:48:43][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:48:43][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 48, 44, 171766), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 48, 44, 171770), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 48, 44, 177206)}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'question_id__0': 1, 'choice_id__0': 2, 'user_id__0': '1', 'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 48, 43, 707204), 'question_id__1': 2, 'choice_id__1': 8, 'user_id__1': '1', 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 48, 43, 707231), 'question_id__2': 3, 'choice_id__2': 13, 'user_id__2': '1', 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 48, 43, 707247), 'question_id__3': 4, 'choice_id__3': 21, 'user_id__3': '1', 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 48, 43, 707258), 'question_id__4': 5, 'choice_id__4': 26, 'user_id__4': '1', 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 48, 43, 707271), 'question_id__5': 1, 'choice_id__5': 1, 'user_id__5': '2', 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 48, 43, 707280), 'question_id__6': 2, 'choice_id__6': 9, 'user_id__6': '2', 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 48, 43, 707289), 'question_id__7': 3, 'choice_id__7': 16, 'user_id__7': '2', 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 48, 43, 707299), 'question_id__8': 4, 'choice_id__8': 20, 'user_id__8': '2', 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 48, 43, 707309), 'question_id__9': 5, 'choice_id__9': 25, 'user_id__9': '2', 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 48, 43, 707320)}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'embed_index__0': None, 'has_image__0': 0, 'is_delivered__0': 1, 'couple_id__0': '1', 'user_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'image_url__0': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'embed_index__1': None, 'has_image__1': 0, 'is_delivered__1': 1, 'couple_id__1': '1', 'user_id__1': '2', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'image_url__1': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'embed_index__2': None, 'has_image__2': 0, 'is_delivered__2': 1, 'couple_id__2': '1', 'user_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'image_url__2': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'embed_index__3': None, 'has_image__3': 0, 'is_delivered__3': 1, 'couple_id__3': '1', 'user_id__3': '2', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'image_url__3': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'embed_index__4': None, 'has_image__4': 0, 'is_delivered__4': 1, 'couple_id__4': '1', 'user_id__4': '2', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'image_url__4': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'deleted_at__5': None, 'embed_index__5': None, 'has_image__5': 0, 'is_delivered__5': 1 ... 170 parameters truncated ... 'is_delivered__24': 1, 'couple_id__24': '1', 'user_id__24': '1', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'image_url__24': None, 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'embed_index__25': None, 'has_image__25': 0, 'is_delivered__25': 1, 'couple_id__25': '1', 'user_id__25': '2', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'image_url__25': None, 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'embed_index__26': None, 'has_image__26': 0, 'is_delivered__26': 1, 'couple_id__26': '1', 'user_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'image_url__26': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'embed_index__27': None, 'has_image__27': 0, 'is_delivered__27': 1, 'couple_id__27': '1', 'user_id__27': '2', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'image_url__27': None, 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'embed_index__28': None, 'has_image__28': 0, 'is_delivered__28': 1, 'couple_id__28': '1', 'user_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'image_url__28': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None, 'embed_index__29': None, 'has_image__29': 0, 'is_delivered__29': 1, 'couple_id__29': '1', 'user_id__29': '2', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'image_url__29': None}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:48:44][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {'user_id_1': '1'}
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:48:45][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:48:45][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:48:45][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:48:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id': '1', 'summary': '지민 highly values communication in relationships, prioritizing open and honest dialogue. When conflicts arise, they prefer to remain calm and discuss  ... (202 characters truncated) ... ortance of staying closely connected. Ultimately, they seek deep emotional connections with their partner, aiming for a meaningful and profound bond.', 'created_at': datetime.datetime(2025, 7, 14, 6, 48, 45, 942516), 'updated_at': datetime.datetime(2025, 7, 14, 6, 48, 45, 942519)}
[2025-07-14 15:48:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:45][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:48:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:45][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:48:45][INFO][sqlalchemy.engine.Engine] [cached since 1.72s ago] {'user_id_1': '2'}
[2025-07-14 15:48:45][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:45][INFO][sqlalchemy.engine.Engine] [cached since 1.719s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:48:47][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 1.596s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 1.596s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships and prefers to give conflicts time to resolve naturally. She expresses affection by spending q ... (259 characters truncated) ... ndence, where both partners support each other’s individuality. Overall, 수아 seeks a harmonious partnership built on mutual respect and understanding.', 'created_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 538278), 'updated_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 538281)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:47][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:48:47][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:48:47][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:48:47][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('잘 잤어? 오늘도 힘내자! 😊\n응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.\n나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~\n좋아! 우리 저녁엔 통화하자 :)', 62)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00034s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 839796), 'modified_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 839796)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-02 04:00:00 분석 저장 완료
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.2974s ago] {}
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.2947s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:48:47][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('어제 약속했는데 통화 못했네 😕\n미안… 회의 끝나고 뻗어버렸어 ㅠ\n기다렸는데 연락 없어서 속상했어\n진짜 미안해. 오늘은 꼭 먼저 연락할게!', 58)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.01108s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.0106s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 850423), 'modified_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 850423)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-03 04:00:00 분석 저장 완료
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.3113s ago] {}
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.3087s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:48:47][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('좋은 아침 🌞 오늘은 기분 좀 어때?\n괜찮아! 나도 어제 너무 예민했나봐~\n그럴 수 있지~ 나도 더 신경 쓸게\n우리 오늘 저녁에 산책 어때?\n완전 좋지! 기다릴게 ❤️', 64)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.02536s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.02477s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 864575), 'modified_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 864575)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-04 04:00:00 분석 저장 완료
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.3217s ago] {}
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.3207s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:48:47][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('점심 뭐 먹었어? 난 제육덮밥 ㅎㅎ\n헉 나도 고기 땡겨서 삼겹살 먹었는데 😆\n맛잘알 역시~\n우리 입맛 잘 맞아 그치? ㅋㅋ', 54)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.03774s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.03841s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 878273), 'modified_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 878273)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-05 04:00:00 분석 저장 완료
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.3352s ago] {}
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.3326s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:48:47][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('오늘 카톡 답 너무 느렸던 거 알아?\n미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐\n그래도 너무 무신경하게 느껴졌어\n앞으론 짧게라도 꼭 답할게!\n알겠어… 나도 예민했나봐', 65)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.04827s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.04743s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 887408), 'modified_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 887408)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-06 04:00:00 분석 저장 완료
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.3458s ago] {}
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.3431s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:48:47][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('오늘 영화 예매했어~ 7시 타임!\n오오 고마워! 오늘은 너한테 집중할게 ❤️\n너랑 시간 보내는 거 제일 좋아\n나도야~ 🥰', 46)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.05875s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.05835s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 898150), 'modified_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 898150)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-07 04:00:00 분석 저장 완료
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.3547s ago] {}
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.353s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:48:47][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('일주일 진짜 빠르다\n그러게~ 우리 이번 주도 잘 버텼다\n너 있어서 든든했어\n다음 주도 잘 지내보자! 사랑해 😘', 44)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.07005s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 8, 0, 0), 'param_1': 1}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] [cached since 0.06929s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 8, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 909201), 'modified_at': datetime.datetime(2025, 7, 14, 6, 48, 47, 909201)}
[2025-07-14 15:48:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-08 04:00:00 분석 저장 완료
[2025-07-14 15:48:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:48:47][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:51:47][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:51:48][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:51:48][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00088s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00029s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 51, 48, 601218), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 51, 48, 601222), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 51, 48, 606764)}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00037s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 51, 48, 134372), 'user_id__0': '1', 'choice_id__0': 2, 'question_id__0': 1, 'custom_input__0': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 51, 48, 134402), 'user_id__1': '1', 'choice_id__1': 8, 'question_id__1': 2, 'custom_input__1': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 51, 48, 134416), 'user_id__2': '1', 'choice_id__2': 13, 'question_id__2': 3, 'custom_input__2': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 51, 48, 134429), 'user_id__3': '1', 'choice_id__3': 21, 'question_id__3': 4, 'custom_input__3': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 51, 48, 134441), 'user_id__4': '1', 'choice_id__4': 26, 'question_id__4': 5, 'custom_input__4': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 51, 48, 134453), 'user_id__5': '2', 'choice_id__5': 1, 'question_id__5': 1, 'custom_input__5': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 51, 48, 134463), 'user_id__6': '2', 'choice_id__6': 9, 'question_id__6': 2, 'custom_input__6': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 51, 48, 134473), 'user_id__7': '2', 'choice_id__7': 16, 'question_id__7': 3, 'custom_input__7': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 51, 48, 134483), 'user_id__8': '2', 'choice_id__8': 20, 'question_id__8': 4, 'custom_input__8': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 51, 48, 134494), 'user_id__9': '2', 'choice_id__9': 25, 'question_id__9': 5, 'custom_input__9': None}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'user_id__12': '1', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__14': '바쁨', 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감'}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'embed_index__0': None, 'couple_id__0': '1', 'image_url__0': None, 'deleted_at__0': None, 'is_delivered__0': 1, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'has_image__0': 0, 'user_id__1': '2', 'embed_index__1': None, 'couple_id__1': '1', 'image_url__1': None, 'deleted_at__1': None, 'is_delivered__1': 1, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'has_image__1': 0, 'user_id__2': '1', 'embed_index__2': None, 'couple_id__2': '1', 'image_url__2': None, 'deleted_at__2': None, 'is_delivered__2': 1, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'has_image__2': 0, 'user_id__3': '2', 'embed_index__3': None, 'couple_id__3': '1', 'image_url__3': None, 'deleted_at__3': None, 'is_delivered__3': 1, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'has_image__3': 0, 'user_id__4': '2', 'embed_index__4': None, 'couple_id__4': '1', 'image_url__4': None, 'deleted_at__4': None, 'is_delivered__4': 1, 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'has_image__4': 0, 'user_id__5': '1', 'embed_index__5': None, 'couple_id__5': '1', 'image_url__5': None, 'deleted_at__5': None ... 170 parameters truncated ... 'deleted_at__24': None, 'is_delivered__24': 1, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'has_image__24': 0, 'user_id__25': '2', 'embed_index__25': None, 'couple_id__25': '1', 'image_url__25': None, 'deleted_at__25': None, 'is_delivered__25': 1, 'content__25': '나도야~ 🥰', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'has_image__25': 0, 'user_id__26': '1', 'embed_index__26': None, 'couple_id__26': '1', 'image_url__26': None, 'deleted_at__26': None, 'is_delivered__26': 1, 'content__26': '일주일 진짜 빠르다', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'has_image__26': 0, 'user_id__27': '2', 'embed_index__27': None, 'couple_id__27': '1', 'image_url__27': None, 'deleted_at__27': None, 'is_delivered__27': 1, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'has_image__27': 0, 'user_id__28': '1', 'embed_index__28': None, 'couple_id__28': '1', 'image_url__28': None, 'deleted_at__28': None, 'is_delivered__28': 1, 'content__28': '너 있어서 든든했어', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'has_image__28': 0, 'user_id__29': '2', 'embed_index__29': None, 'couple_id__29': '1', 'image_url__29': None, 'deleted_at__29': None, 'is_delivered__29': 1, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'has_image__29': 0}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 15:51:48][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00035s] {'user_id_1': '1'}
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:51:51][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:51:51][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:51][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:51:51][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:51:51][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id': '1', 'summary': '지민 prioritizes communication as a key component in their relationships, valuing open dialogue and clear expression. During conflicts, they prefer to  ... (318 characters truncated) ... strong and consistent. Ultimately, 지민 seeks relationships characterized by a profound and meaningful bond, where both partners feel deeply connected.', 'created_at': datetime.datetime(2025, 7, 14, 6, 51, 51, 104368), 'updated_at': datetime.datetime(2025, 7, 14, 6, 51, 51, 104371)}
[2025-07-14 15:51:51][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:51][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:51:51][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:51][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:51:51][INFO][sqlalchemy.engine.Engine] [cached since 2.45s ago] {'user_id_1': '2'}
[2025-07-14 15:51:51][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:51][INFO][sqlalchemy.engine.Engine] [cached since 2.449s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:51:53][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] [cached since 2.719s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] [cached since 2.719s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of their relationships, prioritizing a strong foundation of confidence and reliability. In times of conflict, they ... (272 characters truncated) ...  Ideal relationships for 수아 are characterized by balanced independence, where both partners maintain their individuality while supporting each other.', 'created_at': datetime.datetime(2025, 7, 14, 6, 51, 53, 823325), 'updated_at': datetime.datetime(2025, 7, 14, 6, 51, 53, 823330)}
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:53][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:51:53][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:51:53][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00035s] {}
[2025-07-14 15:51:53][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:51:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:51:54][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('잘 잤어? 오늘도 힘내자! 😊\n응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.\n나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~\n좋아! 우리 저녁엔 통화하자 :)', 62)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 99520), 'modified_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 99520)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-02 04:00:00 분석 저장 완료
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.271s ago] {}
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.2666s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:51:54][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('어제 약속했는데 통화 못했네 😕\n미안… 회의 끝나고 뻗어버렸어 ㅠ\n기다렸는데 연락 없어서 속상했어\n진짜 미안해. 오늘은 꼭 먼저 연락할게!', 58)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.009264s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.008833s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 108524), 'modified_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 108524)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-03 04:00:00 분석 저장 완료
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.2833s ago] {}
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.2804s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:51:54][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('좋은 아침 🌞 오늘은 기분 좀 어때?\n괜찮아! 나도 어제 너무 예민했나봐~\n그럴 수 있지~ 나도 더 신경 쓸게\n우리 오늘 저녁에 산책 어때?\n완전 좋지! 기다릴게 ❤️', 64)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.02412s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.02377s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 123419), 'modified_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 123419)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-04 04:00:00 분석 저장 완료
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.2954s ago] {}
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.2925s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:51:54][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('점심 뭐 먹었어? 난 제육덮밥 ㅎㅎ\n헉 나도 고기 땡겨서 삼겹살 먹었는데 😆\n맛잘알 역시~\n우리 입맛 잘 맞아 그치? ㅋㅋ', 54)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.03547s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.03514s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 134764), 'modified_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 134764)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-05 04:00:00 분석 저장 완료
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.3064s ago] {}
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.3022s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:51:54][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('오늘 카톡 답 너무 느렸던 거 알아?\n미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐\n그래도 너무 무신경하게 느껴졌어\n앞으론 짧게라도 꼭 답할게!\n알겠어… 나도 예민했나봐', 65)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.04437s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.04394s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 143635), 'modified_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 143635)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-06 04:00:00 분석 저장 완료
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.3169s ago] {}
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.3138s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:51:54][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('오늘 영화 예매했어~ 7시 타임!\n오오 고마워! 오늘은 너한테 집중할게 ❤️\n너랑 시간 보내는 거 제일 좋아\n나도야~ 🥰', 46)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.05725s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.05689s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 156519), 'modified_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 156519)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-07 04:00:00 분석 저장 완료
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.3275s ago] {}
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.3232s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:51:54][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': ('일주일 진짜 빠르다\n그러게~ 우리 이번 주도 잘 버텼다\n너 있어서 든든했어\n다음 주도 잘 지내보자! 사랑해 😘', 44)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.06512s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 8, 0, 0), 'param_1': 1}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] [cached since 0.06467s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 8, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 164354), 'modified_at': datetime.datetime(2025, 7, 14, 6, 51, 54, 164354)}
[2025-07-14 15:51:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-08 04:00:00 분석 저장 완료
[2025-07-14 15:51:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:51:54][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:52:54][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:52:54][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:52:54][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:52:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00102s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 52, 55, 374159), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 52, 55, 374163), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 52, 55, 379223)}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 52, 54, 842536), 'choice_id__0': 2, 'user_id__0': '1', 'question_id__0': 1, 'custom_input__0': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 52, 54, 842571), 'choice_id__1': 8, 'user_id__1': '1', 'question_id__1': 2, 'custom_input__1': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 52, 54, 842586), 'choice_id__2': 13, 'user_id__2': '1', 'question_id__2': 3, 'custom_input__2': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 52, 54, 842599), 'choice_id__3': 21, 'user_id__3': '1', 'question_id__3': 4, 'custom_input__3': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 52, 54, 842612), 'choice_id__4': 26, 'user_id__4': '1', 'question_id__4': 5, 'custom_input__4': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 52, 54, 842622), 'choice_id__5': 1, 'user_id__5': '2', 'question_id__5': 1, 'custom_input__5': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 52, 54, 842634), 'choice_id__6': 9, 'user_id__6': '2', 'question_id__6': 2, 'custom_input__6': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 52, 54, 842645), 'choice_id__7': 16, 'user_id__7': '2', 'question_id__7': 3, 'custom_input__7': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 52, 54, 842655), 'choice_id__8': 20, 'user_id__8': '2', 'question_id__8': 4, 'custom_input__8': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 52, 54, 842667), 'choice_id__9': 25, 'user_id__9': '2', 'question_id__9': 5, 'custom_input__9': None}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'emotion__12': '애정', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__14': '2', 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2'}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'couple_id__0': '1', 'deleted_at__0': None, 'is_delivered__0': 1, 'has_image__0': 0, 'user_id__0': '1', 'image_url__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'embed_index__0': None, 'couple_id__1': '1', 'deleted_at__1': None, 'is_delivered__1': 1, 'has_image__1': 0, 'user_id__1': '2', 'image_url__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'embed_index__1': None, 'couple_id__2': '1', 'deleted_at__2': None, 'is_delivered__2': 1, 'has_image__2': 0, 'user_id__2': '1', 'image_url__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'embed_index__2': None, 'couple_id__3': '1', 'deleted_at__3': None, 'is_delivered__3': 1, 'has_image__3': 0, 'user_id__3': '2', 'image_url__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'embed_index__3': None, 'couple_id__4': '1', 'deleted_at__4': None, 'is_delivered__4': 1, 'has_image__4': 0, 'user_id__4': '2', 'image_url__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'embed_index__4': None, 'couple_id__5': '1', 'deleted_at__5': None, 'is_delivered__5': 1, 'has_image__5': 0, 'user_id__5': '1' ... 170 parameters truncated ... 'user_id__24': '1', 'image_url__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'embed_index__24': None, 'couple_id__25': '1', 'deleted_at__25': None, 'is_delivered__25': 1, 'has_image__25': 0, 'user_id__25': '2', 'image_url__25': None, 'content__25': '나도야~ 🥰', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'embed_index__25': None, 'couple_id__26': '1', 'deleted_at__26': None, 'is_delivered__26': 1, 'has_image__26': 0, 'user_id__26': '1', 'image_url__26': None, 'content__26': '일주일 진짜 빠르다', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'embed_index__26': None, 'couple_id__27': '1', 'deleted_at__27': None, 'is_delivered__27': 1, 'has_image__27': 0, 'user_id__27': '2', 'image_url__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'embed_index__27': None, 'couple_id__28': '1', 'deleted_at__28': None, 'is_delivered__28': 1, 'has_image__28': 0, 'user_id__28': '1', 'image_url__28': None, 'content__28': '너 있어서 든든했어', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'embed_index__28': None, 'couple_id__29': '1', 'deleted_at__29': None, 'is_delivered__29': 1, 'has_image__29': 0, 'user_id__29': '2', 'image_url__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'embed_index__29': None}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 15:52:55][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1'}
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:52:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:52:57][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:52:57][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00073s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:52:57][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:52:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00057s] {'user_id': '1', 'summary': '지민 values communication as the cornerstone of their relationships, emphasizing open and honest dialogue with their partner. When conflicts arise, 지민  ... (321 characters truncated) ... n. Overall, 지민 strives for a deep and meaningful connection with their partner, ensuring that both emotional intimacy and understanding are nurtured.', 'created_at': datetime.datetime(2025, 7, 14, 6, 52, 57, 532489), 'updated_at': datetime.datetime(2025, 7, 14, 6, 52, 57, 532497)}
[2025-07-14 15:52:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:57][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:52:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:57][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:52:57][INFO][sqlalchemy.engine.Engine] [cached since 2.107s ago] {'user_id_1': '2'}
[2025-07-14 15:52:57][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:52:57][INFO][sqlalchemy.engine.Engine] [cached since 2.107s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:52:59][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 2.141s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 2.14s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships and prefers to address conflicts by allowing time to resolve issues naturally. She expresses a ... (286 characters truncated) ... re both partners enjoy personal space while remaining connected. Overall, 수아 seeks a harmonious blend of closeness and autonomy in her relationships.', 'created_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 671872), 'updated_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 671887)}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:59][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:52:59][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:52:59][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] {}
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00035s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:52:59][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '잘 잤어? 오늘도 힘내자! 😊\n응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.\n나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~\n좋아! 우리 저녁엔 통화하자 :)'}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 952145), 'modified_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 952145)}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-02 04:00:00 분석 저장 완료
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.2687s ago] {}
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.2642s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:52:59][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '어제 약속했는데 통화 못했네 😕\n미안… 회의 끝나고 뻗어버렸어 ㅠ\n기다렸는데 연락 없어서 속상했어\n진짜 미안해. 오늘은 꼭 먼저 연락할게!'}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.009879s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.009498s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 961698), 'modified_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 961698)}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-03 04:00:00 분석 저장 완료
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.2818s ago] {}
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.2771s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:52:59][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '좋은 아침 🌞 오늘은 기분 좀 어때?\n괜찮아! 나도 어제 너무 예민했나봐~\n그럴 수 있지~ 나도 더 신경 쓸게\n우리 오늘 저녁에 산책 어때?\n완전 좋지! 기다릴게 ❤️'}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.02356s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.02316s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 975442), 'modified_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 975442)}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-04 04:00:00 분석 저장 완료
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.2925s ago] {}
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.2898s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:52:59][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '점심 뭐 먹었어? 난 제육덮밥 ㅎㅎ\n헉 나도 고기 땡겨서 삼겹살 먹었는데 😆\n맛잘알 역시~\n우리 입맛 잘 맞아 그치? ㅋㅋ'}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.03616s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.03653s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 988804), 'modified_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 988804)}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-05 04:00:00 분석 저장 완료
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.3055s ago] {}
[2025-07-14 15:52:59][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.3011s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:52:59][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '오늘 카톡 답 너무 느렸던 거 알아?\n미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐\n그래도 너무 무신경하게 느껴졌어\n앞으론 짧게라도 꼭 답할게!\n알겠어… 나도 예민했나봐'}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.04651s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] [cached since 0.04602s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 998332), 'modified_at': datetime.datetime(2025, 7, 14, 6, 52, 59, 998332)}
[2025-07-14 15:52:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:53:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-06 04:00:00 분석 저장 완료
[2025-07-14 15:53:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] [cached since 0.3164s ago] {}
[2025-07-14 15:53:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] [cached since 0.3117s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:53:00][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '오늘 영화 예매했어~ 7시 타임!\n오오 고마워! 오늘은 너한테 집중할게 ❤️\n너랑 시간 보내는 거 제일 좋아\n나도야~ 🥰'}
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] [cached since 0.05615s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] [cached since 0.05554s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 53, 0, 7862), 'modified_at': datetime.datetime(2025, 7, 14, 6, 53, 0, 7862)}
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:53:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-07 04:00:00 분석 저장 완료
[2025-07-14 15:53:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] [cached since 0.3245s ago] {}
[2025-07-14 15:53:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] [cached since 0.3213s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:53:00][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '일주일 진짜 빠르다\n그러게~ 우리 이번 주도 잘 버텼다\n너 있어서 든든했어\n다음 주도 잘 지내보자! 사랑해 😘'}
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] [cached since 0.06708s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 8, 0, 0), 'param_1': 1}
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] [cached since 0.06642s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 8, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 53, 0, 18766), 'modified_at': datetime.datetime(2025, 7, 14, 6, 53, 0, 18766)}
[2025-07-14 15:53:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:53:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-08 04:00:00 분석 저장 완료
[2025-07-14 15:53:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:53:00][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:54:23][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:54:23][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:54:23][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00030s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00026s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00038s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 54, 23, 806697), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 54, 23, 806702), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 54, 23, 812549)}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00030s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'choice_id__0': 2, 'custom_input__0': None, 'user_id__0': '1', 'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 54, 23, 282250), 'question_id__0': 1, 'choice_id__1': 8, 'custom_input__1': None, 'user_id__1': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 54, 23, 282285), 'question_id__1': 2, 'choice_id__2': 13, 'custom_input__2': None, 'user_id__2': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 54, 23, 282299), 'question_id__2': 3, 'choice_id__3': 21, 'custom_input__3': None, 'user_id__3': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 54, 23, 282311), 'question_id__3': 4, 'choice_id__4': 26, 'custom_input__4': None, 'user_id__4': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 54, 23, 282324), 'question_id__4': 5, 'choice_id__5': 1, 'custom_input__5': None, 'user_id__5': '2', 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 54, 23, 282333), 'question_id__5': 1, 'choice_id__6': 9, 'custom_input__6': None, 'user_id__6': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 54, 23, 282342), 'question_id__6': 2, 'choice_id__7': 16, 'custom_input__7': None, 'user_id__7': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 54, 23, 282352), 'question_id__7': 3, 'choice_id__8': 20, 'custom_input__8': None, 'user_id__8': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 54, 23, 282362), 'question_id__8': 4, 'choice_id__9': 25, 'custom_input__9': None, 'user_id__9': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 54, 23, 282373), 'question_id__9': 5}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__2': '1', 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__4': '1', 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__6': '1', 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__7': '1', 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__9': '1', 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__11': '1', 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1', 'emotion__12': '애정' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__15': '2', 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__17': '2', 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__19': '2', 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__21': '2', 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__23': '2', 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__25': '2', 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'has_image__0': 0, 'is_delivered__0': 1, 'embed_index__0': None, 'user_id__0': '1', 'image_url__0': None, 'deleted_at__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'couple_id__0': '1', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'has_image__1': 0, 'is_delivered__1': 1, 'embed_index__1': None, 'user_id__1': '2', 'image_url__1': None, 'deleted_at__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'couple_id__1': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'has_image__2': 0, 'is_delivered__2': 1, 'embed_index__2': None, 'user_id__2': '1', 'image_url__2': None, 'deleted_at__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'couple_id__2': '1', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'has_image__3': 0, 'is_delivered__3': 1, 'embed_index__3': None, 'user_id__3': '2', 'image_url__3': None, 'deleted_at__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'couple_id__3': '1', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'has_image__4': 0, 'is_delivered__4': 1, 'embed_index__4': None, 'user_id__4': '2', 'image_url__4': None, 'deleted_at__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'couple_id__4': '1', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'has_image__5': 0, 'is_delivered__5': 1, 'embed_index__5': None, 'user_id__5': '1' ... 170 parameters truncated ... 'user_id__24': '1', 'image_url__24': None, 'deleted_at__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'couple_id__24': '1', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'has_image__25': 0, 'is_delivered__25': 1, 'embed_index__25': None, 'user_id__25': '2', 'image_url__25': None, 'deleted_at__25': None, 'content__25': '나도야~ 🥰', 'couple_id__25': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'has_image__26': 0, 'is_delivered__26': 1, 'embed_index__26': None, 'user_id__26': '1', 'image_url__26': None, 'deleted_at__26': None, 'content__26': '일주일 진짜 빠르다', 'couple_id__26': '1', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'has_image__27': 0, 'is_delivered__27': 1, 'embed_index__27': None, 'user_id__27': '2', 'image_url__27': None, 'deleted_at__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'couple_id__27': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'has_image__28': 0, 'is_delivered__28': 1, 'embed_index__28': None, 'user_id__28': '1', 'image_url__28': None, 'deleted_at__28': None, 'content__28': '너 있어서 든든했어', 'couple_id__28': '1', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'has_image__29': 0, 'is_delivered__29': 1, 'embed_index__29': None, 'user_id__29': '2', 'image_url__29': None, 'deleted_at__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'couple_id__29': '1'}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 15:54:23][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1'}
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:54:26][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:54:26][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:26][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:54:26][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:54:26][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id': '1', 'summary': "지민 places a high value on communication, prioritizing open dialogue and mutual understanding in relationships. When conflicts arise, they prefer to r ... (246 characters truncated) ...  strong bond and connection. Overall, 지민 seeks a deep and meaningful relationship where both partners are attuned to each other's needs and emotions.", 'created_at': datetime.datetime(2025, 7, 14, 6, 54, 26, 894651), 'updated_at': datetime.datetime(2025, 7, 14, 6, 54, 26, 894654)}
[2025-07-14 15:54:26][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:26][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:54:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:26][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:54:26][INFO][sqlalchemy.engine.Engine] [cached since 3.037s ago] {'user_id_1': '2'}
[2025-07-14 15:54:26][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:26][INFO][sqlalchemy.engine.Engine] [cached since 3.037s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:54:29][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 2.586s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 2.586s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of their relationships, ensuring a solid foundation. When conflicts arise, they prefer to wait it out, allowing si ... (244 characters truncated) ... l space. Their ideal relationship embraces balanced independence, appreciating a partnership that respects individuality while maintaining closeness.', 'created_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 480630), 'updated_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 480633)}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:29][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:54:29][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:54:29][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:54:29][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '1 :잘 잤어? 오늘도 힘내자! 😊 [2025-07-01 17:00:00]\n2 :응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해. [2025-07-01 17:40:00]\n1 :나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~ [2025-07-01 18:20:00]\n2 :좋아! 우리 저녁엔 통화하자 :) [2025-07-01 19:00:00]'}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 771679), 'modified_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 771679)}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-02 04:00:00 분석 저장 완료
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.2916s ago] {}
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.2888s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:54:29][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '2 :어제 약속했는데 통화 못했네 😕 [2025-07-02 17:00:00]\n1 :미안… 회의 끝나고 뻗어버렸어 ㅠ [2025-07-02 17:40:00]\n2 :기다렸는데 연락 없어서 속상했어 [2025-07-02 18:20:00]\n1 :진짜 미안해. 오늘은 꼭 먼저 연락할게! [2025-07-02 19:00:00]'}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.01592s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.0152s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 786961), 'modified_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 786961)}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-03 04:00:00 분석 저장 완료
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.3067s ago] {}
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.3053s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:54:29][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '1 :좋은 아침 🌞 오늘은 기분 좀 어때? [2025-07-03 17:00:00]\n2 :괜찮아! 나도 어제 너무 예민했나봐~ [2025-07-03 17:40:00]\n1 :그럴 수 있지~ 나도 더 신경 쓸게 [2025-07-03 18:20:00]\n2 :우리 오늘 저녁에 산책 어때? [2025-07-03 19:00:00]\n1 :완전 좋지! 기다릴게 ❤️ [2025-07-03 19:40:00]'}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.0321s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.03144s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 803255), 'modified_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 803255)}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-04 04:00:00 분석 저장 완료
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.3188s ago] {}
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.316s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:54:29][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '1 :점심 뭐 먹었어? 난 제육덮밥 ㅎㅎ [2025-07-04 17:00:00]\n2 :헉 나도 고기 땡겨서 삼겹살 먹었는데 😆 [2025-07-04 17:40:00]\n1 :맛잘알 역시~ [2025-07-04 18:20:00]\n2 :우리 입맛 잘 맞아 그치? ㅋㅋ [2025-07-04 19:00:00]'}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.04205s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.04125s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 813113), 'modified_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 813113)}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-05 04:00:00 분석 저장 완료
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.3299s ago] {}
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.3269s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:54:29][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '2 :오늘 카톡 답 너무 느렸던 거 알아? [2025-07-05 17:00:00]\n1 :미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐 [2025-07-05 17:40:00]\n2 :그래도 너무 무신경하게 느껴졌어 [2025-07-05 18:20:00]\n1 :앞으론 짧게라도 꼭 답할게! [2025-07-05 19:00:00]\n2 :알겠어… 나도 예민했나봐 [2025-07-05 19:40:00]'}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.05354s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.05294s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 824680), 'modified_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 824680)}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-06 04:00:00 분석 저장 완료
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.3402s ago] {}
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.3382s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:54:29][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '1 :오늘 영화 예매했어~ 7시 타임! [2025-07-06 17:00:00]\n2 :오오 고마워! 오늘은 너한테 집중할게 ❤️ [2025-07-06 17:40:00]\n1 :너랑 시간 보내는 거 제일 좋아 [2025-07-06 18:20:00]\n2 :나도야~ 🥰 [2025-07-06 19:00:00]'}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.06432s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.06367s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 835458), 'modified_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 835458)}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-07 04:00:00 분석 저장 완료
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.3502s ago] {}
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.3473s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:54:29][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '1 :일주일 진짜 빠르다 [2025-07-07 17:00:00]\n2 :그러게~ 우리 이번 주도 잘 버텼다 [2025-07-07 17:40:00]\n1 :너 있어서 든든했어 [2025-07-07 18:20:00]\n2 :다음 주도 잘 지내보자! 사랑해 😘 [2025-07-07 19:00:00]'}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.07258s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 8, 0, 0), 'param_1': 1}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] [cached since 0.07177s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 8, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 843603), 'modified_at': datetime.datetime(2025, 7, 14, 6, 54, 29, 843603)}
[2025-07-14 15:54:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-08 04:00:00 분석 저장 완료
[2025-07-14 15:54:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:54:29][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 15:56:59][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 15:56:59][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 15:56:59][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00042s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00153s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00085s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00028s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 56, 59, 829674), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 56, 59, 829678), 'birth': None, 'gender': 'female'}]
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 6, 56, 59, 836551)}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00101s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00063s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 6, 56, 59, 260772), 'user_id__0': '1', 'choice_id__0': 2, 'question_id__0': 1, 'custom_input__0': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 6, 56, 59, 260800), 'user_id__1': '1', 'choice_id__1': 8, 'question_id__1': 2, 'custom_input__1': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 6, 56, 59, 260813), 'user_id__2': '1', 'choice_id__2': 13, 'question_id__2': 3, 'custom_input__2': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 6, 56, 59, 260828), 'user_id__3': '1', 'choice_id__3': 21, 'question_id__3': 4, 'custom_input__3': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 6, 56, 59, 260840), 'user_id__4': '1', 'choice_id__4': 26, 'question_id__4': 5, 'custom_input__4': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 6, 56, 59, 260850), 'user_id__5': '2', 'choice_id__5': 1, 'question_id__5': 1, 'custom_input__5': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 6, 56, 59, 260859), 'user_id__6': '2', 'choice_id__6': 9, 'question_id__6': 2, 'custom_input__6': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 6, 56, 59, 260869), 'user_id__7': '2', 'choice_id__7': 16, 'question_id__7': 3, 'custom_input__7': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 6, 56, 59, 260879), 'user_id__8': '2', 'choice_id__8': 20, 'question_id__8': 4, 'custom_input__8': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 6, 56, 59, 260890), 'user_id__9': '2', 'choice_id__9': 25, 'question_id__9': 5, 'custom_input__9': None}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__12': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'emotion__14': '바쁨', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'deleted_at__0': None, 'embed_index__0': None, 'image_url__0': None, 'couple_id__0': '1', 'user_id__0': '1', 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'is_delivered__0': 1, 'has_image__0': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'deleted_at__1': None, 'embed_index__1': None, 'image_url__1': None, 'couple_id__1': '1', 'user_id__1': '2', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'is_delivered__1': 1, 'has_image__1': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'deleted_at__2': None, 'embed_index__2': None, 'image_url__2': None, 'couple_id__2': '1', 'user_id__2': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'is_delivered__2': 1, 'has_image__2': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'deleted_at__3': None, 'embed_index__3': None, 'image_url__3': None, 'couple_id__3': '1', 'user_id__3': '2', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'is_delivered__3': 1, 'has_image__3': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'deleted_at__4': None, 'embed_index__4': None, 'image_url__4': None, 'couple_id__4': '1', 'user_id__4': '2', 'content__4': '어제 약속했는데 통화 못했네 😕', 'is_delivered__4': 1, 'has_image__4': 0, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'deleted_at__5': None, 'embed_index__5': None, 'image_url__5': None, 'couple_id__5': '1' ... 170 parameters truncated ... 'couple_id__24': '1', 'user_id__24': '1', 'content__24': '너랑 시간 보내는 거 제일 좋아', 'is_delivered__24': 1, 'has_image__24': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'deleted_at__25': None, 'embed_index__25': None, 'image_url__25': None, 'couple_id__25': '1', 'user_id__25': '2', 'content__25': '나도야~ 🥰', 'is_delivered__25': 1, 'has_image__25': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'deleted_at__26': None, 'embed_index__26': None, 'image_url__26': None, 'couple_id__26': '1', 'user_id__26': '1', 'content__26': '일주일 진짜 빠르다', 'is_delivered__26': 1, 'has_image__26': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'deleted_at__27': None, 'embed_index__27': None, 'image_url__27': None, 'couple_id__27': '1', 'user_id__27': '2', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'is_delivered__27': 1, 'has_image__27': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'deleted_at__28': None, 'embed_index__28': None, 'image_url__28': None, 'couple_id__28': '1', 'user_id__28': '1', 'content__28': '너 있어서 든든했어', 'is_delivered__28': 1, 'has_image__28': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'deleted_at__29': None, 'embed_index__29': None, 'image_url__29': None, 'couple_id__29': '1', 'user_id__29': '2', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'is_delivered__29': 1, 'has_image__29': 0}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 15:56:59][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1'}
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:56:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:57:01][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:57:01][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:57:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 15:57:01][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:57:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id': '1', 'summary': '지민 values communication as a cornerstone of their relationships, prioritizing open and honest dialogue. When conflicts arise, they prefer to take a m ... (180 characters truncated) ... contact with loved ones, ensuring a strong and consistent connection. Ultimately, 지민 aims for relationships characterized by a deep, meaningful bond.', 'created_at': datetime.datetime(2025, 7, 14, 6, 57, 1, 911069), 'updated_at': datetime.datetime(2025, 7, 14, 6, 57, 1, 911072)}
[2025-07-14 15:57:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:57:01][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 15:57:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:01][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 15:57:01][INFO][sqlalchemy.engine.Engine] [cached since 2.015s ago] {'user_id_1': '2'}
[2025-07-14 15:57:01][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:57:01][INFO][sqlalchemy.engine.Engine] [cached since 2.014s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:57:05][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 3.092s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 3.092s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships and prefers to handle conflicts by waiting them out, suggesting a patient and thoughtful appro ... (359 characters truncated) ... ace alongside connection. Overall, her relationship tendencies emphasize stability, mutual respect, and a harmonious blend of closeness and autonomy.', 'created_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 3049), 'updated_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 3052)}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:57:05][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 15:57:05][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 15:57:05][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 15:57:05][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '1 :잘 잤어? 오늘도 힘내자! 😊 [2025-07-01 17:00:00]\n2 :응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해. [2025-07-01 17:40:00]\n1 :나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~ [2025-07-01 18:20:00]\n2 :좋아! 우리 저녁엔 통화하자 :) [2025-07-01 19:00:00]'}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 270582), 'modified_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 270582)}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-02 04:00:00 분석 저장 완료
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.2652s ago] {}
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.2626s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 15:57:05][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '2 :어제 약속했는데 통화 못했네 😕 [2025-07-02 17:00:00]\n1 :미안… 회의 끝나고 뻗어버렸어 ㅠ [2025-07-02 17:40:00]\n2 :기다렸는데 연락 없어서 속상했어 [2025-07-02 18:20:00]\n1 :진짜 미안해. 오늘은 꼭 먼저 연락할게! [2025-07-02 19:00:00]'}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.01094s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.01038s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 281050), 'modified_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 281050)}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-03 04:00:00 분석 저장 완료
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.2784s ago] {}
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.2759s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 15:57:05][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '1 :좋은 아침 🌞 오늘은 기분 좀 어때? [2025-07-03 17:00:00]\n2 :괜찮아! 나도 어제 너무 예민했나봐~ [2025-07-03 17:40:00]\n1 :그럴 수 있지~ 나도 더 신경 쓸게 [2025-07-03 18:20:00]\n2 :우리 오늘 저녁에 산책 어때? [2025-07-03 19:00:00]\n1 :완전 좋지! 기다릴게 ❤️ [2025-07-03 19:40:00]'}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.0245s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.02401s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 294685), 'modified_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 294685)}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-04 04:00:00 분석 저장 완료
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.2885s ago] {}
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.2871s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 15:57:05][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '1 :점심 뭐 먹었어? 난 제육덮밥 ㅎㅎ [2025-07-04 17:00:00]\n2 :헉 나도 고기 땡겨서 삼겹살 먹었는데 😆 [2025-07-04 17:40:00]\n1 :맛잘알 역시~ [2025-07-04 18:20:00]\n2 :우리 입맛 잘 맞아 그치? ㅋㅋ [2025-07-04 19:00:00]'}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.03558s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.03578s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 306438), 'modified_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 306438)}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-05 04:00:00 분석 저장 완료
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.3016s ago] {}
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.299s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 15:57:05][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '2 :오늘 카톡 답 너무 느렸던 거 알아? [2025-07-05 17:00:00]\n1 :미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐 [2025-07-05 17:40:00]\n2 :그래도 너무 무신경하게 느껴졌어 [2025-07-05 18:20:00]\n1 :앞으론 짧게라도 꼭 답할게! [2025-07-05 19:00:00]\n2 :알겠어… 나도 예민했나봐 [2025-07-05 19:40:00]'}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.04628s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.04572s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 316460), 'modified_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 316460)}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-06 04:00:00 분석 저장 완료
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.3101s ago] {}
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.3074s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 15:57:05][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '1 :오늘 영화 예매했어~ 7시 타임! [2025-07-06 17:00:00]\n2 :오오 고마워! 오늘은 너한테 집중할게 ❤️ [2025-07-06 17:40:00]\n1 :너랑 시간 보내는 거 제일 좋아 [2025-07-06 18:20:00]\n2 :나도야~ 🥰 [2025-07-06 19:00:00]'}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.05492s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.0545s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 325165), 'modified_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 325165)}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-07 04:00:00 분석 저장 완료
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.3185s ago] {}
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.3171s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 15:57:05][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: 'Input to ChatPromptTemplate is missing variables {\'\\n  "user_stats"\'}.  Expected: [\'\\n  "user_stats"\', \'messages\'] Received: [\'messages\']\nNote: if you intended {\n  "user_stats"} to be part of the string and not a variable, please escape it with double curly braces like: \'{{\n  "user_stats"}}\'.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT ', 입력: {'messages': '1 :일주일 진짜 빠르다 [2025-07-07 17:00:00]\n2 :그러게~ 우리 이번 주도 잘 버텼다 [2025-07-07 17:40:00]\n1 :너 있어서 든든했어 [2025-07-07 18:20:00]\n2 :다음 주도 잘 지내보자! 사랑해 😘 [2025-07-07 19:00:00]'}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.06575s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 8, 0, 0), 'param_1': 1}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] [cached since 0.0652s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 8, 0, 0), 'result': '{"success": false, "error": "\'Input to ChatPromptTemplate is missing variables {\\\\\'\\\\\\\\n  \\"user_stats\\"\\\\\'}.  Expected: [\\\\\'\\\\\\\\ ... (246 characters truncated) ... ser_stats\\"}}\\\\\'.\\\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \'", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 335899), 'modified_at': datetime.datetime(2025, 7, 14, 6, 57, 5, 335899)}
[2025-07-14 15:57:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-08 04:00:00 분석 저장 완료
[2025-07-14 15:57:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 15:57:05][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 16:00:34][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:00:34][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:00:34][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:00:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00028s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00089s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 0, 35, 343916), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 0, 35, 343920), 'birth': None, 'gender': 'female'}]
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 0, 35, 349340)}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'choice_id__0': 2, 'user_id__0': '1', 'submitted_at__0': datetime.datetime(2025, 7, 14, 7, 0, 34, 852632), 'question_id__0': 1, 'custom_input__0': None, 'choice_id__1': 8, 'user_id__1': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 7, 0, 34, 852660), 'question_id__1': 2, 'custom_input__1': None, 'choice_id__2': 13, 'user_id__2': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 7, 0, 34, 852673), 'question_id__2': 3, 'custom_input__2': None, 'choice_id__3': 21, 'user_id__3': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 7, 0, 34, 852685), 'question_id__3': 4, 'custom_input__3': None, 'choice_id__4': 26, 'user_id__4': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 7, 0, 34, 852696), 'question_id__4': 5, 'custom_input__4': None, 'choice_id__5': 1, 'user_id__5': '2', 'submitted_at__5': datetime.datetime(2025, 7, 14, 7, 0, 34, 852705), 'question_id__5': 1, 'custom_input__5': None, 'choice_id__6': 9, 'user_id__6': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 7, 0, 34, 852717), 'question_id__6': 2, 'custom_input__6': None, 'choice_id__7': 16, 'user_id__7': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 7, 0, 34, 852727), 'question_id__7': 3, 'custom_input__7': None, 'choice_id__8': 20, 'user_id__8': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 7, 0, 34, 852737), 'question_id__8': 4, 'custom_input__8': None, 'choice_id__9': 25, 'user_id__9': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 7, 0, 34, 852747), 'question_id__9': 5, 'custom_input__9': None}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'user_id__0': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'user_id__1': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'user_id__2': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'user_id__3': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'user_id__4': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'user_id__5': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'user_id__6': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'user_id__7': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'user_id__8': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'user_id__9': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'user_id__10': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'user_id__11': '1', 'memo__12': '너에 대한 애정이 넘쳤어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'emotion__14': '바쁨', 'user_id__14': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'user_id__15': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'user_id__16': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'user_id__17': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'user_id__18': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'user_id__19': '2', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'user_id__20': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'user_id__21': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'user_id__22': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'user_id__23': '2', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'user_id__24': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'user_id__25': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'user_id__26': '2'}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'deleted_at__0': None, 'embed_index__0': None, 'couple_id__0': '1', 'image_url__0': None, 'has_image__0': 0, 'is_delivered__0': 1, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'user_id__1': '2', 'deleted_at__1': None, 'embed_index__1': None, 'couple_id__1': '1', 'image_url__1': None, 'has_image__1': 0, 'is_delivered__1': 1, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'user_id__2': '1', 'deleted_at__2': None, 'embed_index__2': None, 'couple_id__2': '1', 'image_url__2': None, 'has_image__2': 0, 'is_delivered__2': 1, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'user_id__3': '2', 'deleted_at__3': None, 'embed_index__3': None, 'couple_id__3': '1', 'image_url__3': None, 'has_image__3': 0, 'is_delivered__3': 1, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'user_id__4': '2', 'deleted_at__4': None, 'embed_index__4': None, 'couple_id__4': '1', 'image_url__4': None, 'has_image__4': 0, 'is_delivered__4': 1, 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'user_id__5': '1', 'deleted_at__5': None, 'embed_index__5': None, 'couple_id__5': '1', 'image_url__5': None ... 170 parameters truncated ... 'image_url__24': None, 'has_image__24': 0, 'is_delivered__24': 1, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'user_id__25': '2', 'deleted_at__25': None, 'embed_index__25': None, 'couple_id__25': '1', 'image_url__25': None, 'has_image__25': 0, 'is_delivered__25': 1, 'content__25': '나도야~ 🥰', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'user_id__26': '1', 'deleted_at__26': None, 'embed_index__26': None, 'couple_id__26': '1', 'image_url__26': None, 'has_image__26': 0, 'is_delivered__26': 1, 'content__26': '일주일 진짜 빠르다', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'user_id__27': '2', 'deleted_at__27': None, 'embed_index__27': None, 'couple_id__27': '1', 'image_url__27': None, 'has_image__27': 0, 'is_delivered__27': 1, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'user_id__28': '1', 'deleted_at__28': None, 'embed_index__28': None, 'couple_id__28': '1', 'image_url__28': None, 'has_image__28': 0, 'is_delivered__28': 1, 'content__28': '너 있어서 든든했어', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'user_id__29': '2', 'deleted_at__29': None, 'embed_index__29': None, 'couple_id__29': '1', 'image_url__29': None, 'has_image__29': 0, 'is_delivered__29': 1, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0)}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 16:00:35][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1'}
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:00:35][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:00:37][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:00:37][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:00:37][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:00:37][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:00:37][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id': '1', 'summary': '지민 values clear and open communication in their relationships, emphasizing the importance of talking things through. When conflicts arise, they prefe ... (265 characters truncated) ... nteractions to stay connected. Ultimately, they seek a deep and meaningful connection, where mutual understanding and emotional intimacy are central.', 'created_at': datetime.datetime(2025, 7, 14, 7, 0, 37, 237032), 'updated_at': datetime.datetime(2025, 7, 14, 7, 0, 37, 237035)}
[2025-07-14 16:00:37][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:37][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 16:00:37][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:37][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:00:37][INFO][sqlalchemy.engine.Engine] [cached since 1.845s ago] {'user_id_1': '2'}
[2025-07-14 16:00:37][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:00:37][INFO][sqlalchemy.engine.Engine] [cached since 1.844s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:00:39][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] [cached since 2.611s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] [cached since 2.61s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, preferring partners who are reliable and honest. In times of conflict, she tends to adopt a w ... (322 characters truncated) ... ce. Ultimately, 수아 seeks a balanced relationship where both partners enjoy a healthy degree of independence while remaining supportive of each other.', 'created_at': datetime.datetime(2025, 7, 14, 7, 0, 39, 847268), 'updated_at': datetime.datetime(2025, 7, 14, 7, 0, 39, 847271)}
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:39][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 16:00:39][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 16:00:39][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {}
[2025-07-14 16:00:39][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:00:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 16:00:45][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:00:45][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '1 :잘 잤어? 오늘도 힘내자! 😊 [2025-07-01 17:00:00]\n2 :응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해. [2025-07-01 17:40:00]\n1 :나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~ [2025-07-01 18:20:00]\n2 :좋아! 우리 저녁엔 통화하자 :) [2025-07-01 19:00:00]'}
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (592 characters truncated) ...    }\\n  },\\n  \\"요약\\": \\"user_1이 하루 일과에 대한 배려와 격려를 표현했으며, user_2는 저녁 통화를 제안하는 등 적극적인 모습을 보였다. 두 사람 모두 바쁜 하루를 보냈지만 서로를 챙기는 모습을 보였다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 0, 45, 384137), 'modified_at': datetime.datetime(2025, 7, 14, 7, 0, 45, 384137)}
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-02 04:00:00 분석 저장 완료
[2025-07-14 16:00:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] [cached since 5.533s ago] {}
[2025-07-14 16:00:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:00:45][INFO][sqlalchemy.engine.Engine] [cached since 5.532s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 16:00:54][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:00:54][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '2 :어제 약속했는데 통화 못했네 😕 [2025-07-02 17:00:00]\n1 :미안… 회의 끝나고 뻗어버렸어 ㅠ [2025-07-02 17:40:00]\n2 :기다렸는데 연락 없어서 속상했어 [2025-07-02 18:20:00]\n1 :진짜 미안해. 오늘은 꼭 먼저 연락할게! [2025-07-02 19:00:00]'}
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] [cached since 7.535s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] [cached since 7.535s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (629 characters truncated) ... \"요약\\": \\"user_1은 약속을 지키지 못한 것에 대해 미안함을 표현하며 적극적으로 행동을 취하려 했고, user_2는 이에 대한 서운함을 드러냈다. 전반적으로 감정 표현보다는 약속을 지키지 못한 상황에서의 갈등이 주를 이루었다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 0, 54, 612820), 'modified_at': datetime.datetime(2025, 7, 14, 7, 0, 54, 612820)}
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:00:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-03 04:00:00 분석 저장 완료
[2025-07-14 16:00:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] [cached since 13.07s ago] {}
[2025-07-14 16:00:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:00:54][INFO][sqlalchemy.engine.Engine] [cached since 13.07s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 16:01:01][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:01:01][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '1 :좋은 아침 🌞 오늘은 기분 좀 어때? [2025-07-03 17:00:00]\n2 :괜찮아! 나도 어제 너무 예민했나봐~ [2025-07-03 17:40:00]\n1 :그럴 수 있지~ 나도 더 신경 쓸게 [2025-07-03 18:20:00]\n2 :우리 오늘 저녁에 산책 어때? [2025-07-03 19:00:00]\n1 :완전 좋지! 기다릴게 ❤️ [2025-07-03 19:40:00]'}
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] [cached since 13.96s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] [cached since 13.96s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (628 characters truncated) ... \\"]\\n    }\\n  },\\n  \\"요약\\": \\"user_1은 배려와 애정 표현을 통해 하루를 시작하는 데 주력했으며, user_2는 산책 제안을 통해 적극적인 태도를 보였다. 감정적으로는 큰 갈등 없이 하루를 마무리했다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 1, 1, 42561), 'modified_at': datetime.datetime(2025, 7, 14, 7, 1, 1, 42561)}
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:01:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-04 04:00:00 분석 저장 완료
[2025-07-14 16:01:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] [cached since 19.5s ago] {}
[2025-07-14 16:01:01][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:01:01][INFO][sqlalchemy.engine.Engine] [cached since 19.5s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 16:01:13][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:01:13][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '1 :점심 뭐 먹었어? 난 제육덮밥 ㅎㅎ [2025-07-04 17:00:00]\n2 :헉 나도 고기 땡겨서 삼겹살 먹었는데 😆 [2025-07-04 17:40:00]\n1 :맛잘알 역시~ [2025-07-04 18:20:00]\n2 :우리 입맛 잘 맞아 그치? ㅋㅋ [2025-07-04 19:00:00]'}
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] [cached since 26.25s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] [cached since 26.25s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (573 characters truncated) ... 를 나누었고, 애정표현이나 갈등은 없었습니다.\\"\\n}\\n```\\n\\n주어진 대화는 주로 음식에 관련된 내용이며, 애정 표현이나 갈등 요소는 없습니다. 따라서 모든 항목의 횟수와 샘플은 0으로 나타납니다. 대화는 일상적이고 가벼운 분위기로 이루어졌습니다."}', 'created_at': datetime.datetime(2025, 7, 14, 7, 1, 13, 331296), 'modified_at': datetime.datetime(2025, 7, 14, 7, 1, 13, 331296)}
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:01:13][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-05 04:00:00 분석 저장 완료
[2025-07-14 16:01:13][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] [cached since 31.8s ago] {}
[2025-07-14 16:01:13][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:01:13][INFO][sqlalchemy.engine.Engine] [cached since 31.79s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 16:01:20][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:01:20][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '2 :오늘 카톡 답 너무 느렸던 거 알아? [2025-07-05 17:00:00]\n1 :미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐 [2025-07-05 17:40:00]\n2 :그래도 너무 무신경하게 느껴졌어 [2025-07-05 18:20:00]\n1 :앞으론 짧게라도 꼭 답할게! [2025-07-05 19:00:00]\n2 :알겠어… 나도 예민했나봐 [2025-07-05 19:40:00]'}
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] [cached since 33.18s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] [cached since 33.18s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (621 characters truncated) ... n    }\\n  },\\n  \\"요약\\": \\"user_1이 대화에서 배려하는 태도를 보였으나, user_2는 느린 답장에 대한 불만을 표현했다. 주로 갈등 상황이 대화의 중심이었으며, user_1이 이를 해결하려는 노력을 보였다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 1, 20, 259247), 'modified_at': datetime.datetime(2025, 7, 14, 7, 1, 20, 259247)}
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:01:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-06 04:00:00 분석 저장 완료
[2025-07-14 16:01:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] [cached since 38.72s ago] {}
[2025-07-14 16:01:20][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:01:20][INFO][sqlalchemy.engine.Engine] [cached since 38.71s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 16:01:23][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:01:23][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '1 :오늘 영화 예매했어~ 7시 타임! [2025-07-06 17:00:00]\n2 :오오 고마워! 오늘은 너한테 집중할게 ❤️ [2025-07-06 17:40:00]\n1 :너랑 시간 보내는 거 제일 좋아 [2025-07-06 18:20:00]\n2 :나도야~ 🥰 [2025-07-06 19:00:00]'}
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] [cached since 36.86s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] [cached since 36.86s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (650 characters truncated) ...   \\"요약\\": \\"user_1은 주로 애정 표현과 함께 데이트 계획을 주도했고, user_2는 이에 긍정적으로 반응하며 애정을 보였다. 두 사람 모두 배려나 갈등 없이 하루를 보냈다. 전반적으로 행복하고 긍정적인 분위기의 대화였다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 1, 23, 942130), 'modified_at': datetime.datetime(2025, 7, 14, 7, 1, 23, 942130)}
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:01:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-07 04:00:00 분석 저장 완료
[2025-07-14 16:01:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] [cached since 42.4s ago] {}
[2025-07-14 16:01:23][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:01:23][INFO][sqlalchemy.engine.Engine] [cached since 42.4s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 16:01:29][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:01:29][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '1 :일주일 진짜 빠르다 [2025-07-07 17:00:00]\n2 :그러게~ 우리 이번 주도 잘 버텼다 [2025-07-07 17:40:00]\n1 :너 있어서 든든했어 [2025-07-07 18:20:00]\n2 :다음 주도 잘 지내보자! 사랑해 😘 [2025-07-07 19:00:00]'}
[2025-07-14 16:01:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:01:29][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:01:29][INFO][sqlalchemy.engine.Engine] [cached since 41.12s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 8, 0, 0), 'param_1': 1}
[2025-07-14 16:01:29][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:01:29][INFO][sqlalchemy.engine.Engine] [cached since 41.12s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 8, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (583 characters truncated) ... \"요약\\": \\"user_1은 애정 표현을 통해 관계의 안정감을 느꼈고, user_2는 애정과 격려를 통해 긍정적인 관계를 유지하려는 모습을 보였다. 전체적으로 두 사람은 서로의 존재에 대해 고마움을 표현하며 긍정적인 대화를 나누었다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 1, 29, 887763), 'modified_at': datetime.datetime(2025, 7, 14, 7, 1, 29, 887763)}
[2025-07-14 16:01:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:01:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-08 04:00:00 분석 저장 완료
[2025-07-14 16:01:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 16:01:29][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 16:07:48][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:07:49][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:07:49][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00039s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00052s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00080s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00033s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 7, 49, 648259), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 7, 49, 648263), 'birth': None, 'gender': 'female'}]
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 7, 49, 656784)}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00035s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 7, 7, 49, 125544), 'custom_input__0': None, 'choice_id__0': 2, 'user_id__0': '1', 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 7, 7, 49, 125572), 'custom_input__1': None, 'choice_id__1': 8, 'user_id__1': '1', 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 7, 7, 49, 125586), 'custom_input__2': None, 'choice_id__2': 13, 'user_id__2': '1', 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 7, 7, 49, 125598), 'custom_input__3': None, 'choice_id__3': 21, 'user_id__3': '1', 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 7, 7, 49, 125610), 'custom_input__4': None, 'choice_id__4': 26, 'user_id__4': '1', 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 7, 7, 49, 125620), 'custom_input__5': None, 'choice_id__5': 1, 'user_id__5': '2', 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 7, 7, 49, 125629), 'custom_input__6': None, 'choice_id__6': 9, 'user_id__6': '2', 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 7, 7, 49, 125639), 'custom_input__7': None, 'choice_id__7': 16, 'user_id__7': '2', 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 7, 7, 49, 125649), 'custom_input__8': None, 'choice_id__8': 20, 'user_id__8': '2', 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 7, 7, 49, 125661), 'custom_input__9': None, 'choice_id__9': 25, 'user_id__9': '2'}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'emotion__0': '고마움', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__1': '기대감', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'emotion__2': '미안함', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__3': '죄책감', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'emotion__4': '사랑', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__5': '다정함', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'emotion__6': '친밀감', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'emotion__7': '억울함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__8': '서운함', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'emotion__9': '행복', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__10': '감사', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'emotion__11': '신뢰', 'memo__12': '너에 대한 애정이 넘쳤어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'user_id__14': '2', 'emotion__14': '바쁨', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'emotion__15': '서운함', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__16': '실망감', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'emotion__17': '이해', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__18': '다정함', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'emotion__19': '호감', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__20': '편안함', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'emotion__21': '기대감', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__22': '불만', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'emotion__23': '기쁨', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__24': '감동', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'emotion__25': '사랑', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'emotion__26': '안정감'}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'embed_index__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'is_delivered__0': 1, 'couple_id__0': '1', 'deleted_at__0': None, 'has_image__0': 0, 'image_url__0': None, 'user_id__0': '1', 'embed_index__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'is_delivered__1': 1, 'couple_id__1': '1', 'deleted_at__1': None, 'has_image__1': 0, 'image_url__1': None, 'user_id__1': '2', 'embed_index__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'is_delivered__2': 1, 'couple_id__2': '1', 'deleted_at__2': None, 'has_image__2': 0, 'image_url__2': None, 'user_id__2': '1', 'embed_index__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'is_delivered__3': 1, 'couple_id__3': '1', 'deleted_at__3': None, 'has_image__3': 0, 'image_url__3': None, 'user_id__3': '2', 'embed_index__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'is_delivered__4': 1, 'couple_id__4': '1', 'deleted_at__4': None, 'has_image__4': 0, 'image_url__4': None, 'user_id__4': '2', 'embed_index__5': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'is_delivered__5': 1, 'couple_id__5': '1' ... 170 parameters truncated ... 'couple_id__24': '1', 'deleted_at__24': None, 'has_image__24': 0, 'image_url__24': None, 'user_id__24': '1', 'embed_index__25': None, 'content__25': '나도야~ 🥰', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'is_delivered__25': 1, 'couple_id__25': '1', 'deleted_at__25': None, 'has_image__25': 0, 'image_url__25': None, 'user_id__25': '2', 'embed_index__26': None, 'content__26': '일주일 진짜 빠르다', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'is_delivered__26': 1, 'couple_id__26': '1', 'deleted_at__26': None, 'has_image__26': 0, 'image_url__26': None, 'user_id__26': '1', 'embed_index__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'is_delivered__27': 1, 'couple_id__27': '1', 'deleted_at__27': None, 'has_image__27': 0, 'image_url__27': None, 'user_id__27': '2', 'embed_index__28': None, 'content__28': '너 있어서 든든했어', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'is_delivered__28': 1, 'couple_id__28': '1', 'deleted_at__28': None, 'has_image__28': 0, 'image_url__28': None, 'user_id__28': '1', 'embed_index__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'is_delivered__29': 1, 'couple_id__29': '1', 'deleted_at__29': None, 'has_image__29': 0, 'image_url__29': None, 'user_id__29': '2'}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 16:07:49][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1'}
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:07:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:07:51][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:07:51][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:07:51][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:07:51][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:07:51][INFO][sqlalchemy.engine.Engine] [generated in 0.00030s] {'user_id': '1', 'summary': '지민 values open communication in relationships, preferring to address issues calmly before engaging in discussion. Their affection is primarily expres ... (173 characters truncated) ... er. Ultimately, 지민 seeks a deep and meaningful relationship, prioritizing genuine understanding and emotional closeness with their significant other.', 'created_at': datetime.datetime(2025, 7, 14, 7, 7, 51, 925379), 'updated_at': datetime.datetime(2025, 7, 14, 7, 7, 51, 925385)}
[2025-07-14 16:07:51][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:51][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 16:07:51][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:51][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:07:51][INFO][sqlalchemy.engine.Engine] [cached since 2.225s ago] {'user_id_1': '2'}
[2025-07-14 16:07:51][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:07:51][INFO][sqlalchemy.engine.Engine] [cached since 2.224s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:07:54][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] [cached since 2.158s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] [cached since 2.157s ago] {'user_id': '2', 'summary': '수아 values trust as a cornerstone of her relationships, emphasizing the importance of reliability and honesty. She believes in resolving conflicts by  ... (325 characters truncated) ... ing. Ultimately, she seeks a partnership defined by balanced independence, where both individuals maintain their individuality while being connected.', 'created_at': datetime.datetime(2025, 7, 14, 7, 7, 54, 82519), 'updated_at': datetime.datetime(2025, 7, 14, 7, 7, 54, 82522)}
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:07:54][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 16:07:54][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 16:07:54][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 16:07:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:07:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 16:08:00][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:08:00][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '1 :잘 잤어? 오늘도 힘내자! 😊 [2025-07-01 17:00:00]\n2 :응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해. [2025-07-01 17:40:00]\n1 :나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~ [2025-07-01 18:20:00]\n2 :좋아! 우리 저녁엔 통화하자 :) [2025-07-01 19:00:00]'}
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (615 characters truncated) ... }\\n  },\\n  \\"요약\\": \\"user_1은 주로 배려와 격려의 메시지를 전하며, 서로의 일정을 배려하면서도 긍정적인 하루를 보냈다. user_2는 바쁜 일정을 공유하고 저녁에 통화를 제안하며 적극적인 의사소통을 보여주었다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 8, 0, 920004), 'modified_at': datetime.datetime(2025, 7, 14, 7, 8, 0, 920004)}
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-02 04:00:00 분석 저장 완료
[2025-07-14 16:08:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] [cached since 6.836s ago] {}
[2025-07-14 16:08:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:08:00][INFO][sqlalchemy.engine.Engine] [cached since 6.834s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 16:08:08][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:08:08][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '2 :어제 약속했는데 통화 못했네 😕 [2025-07-02 17:00:00]\n1 :미안… 회의 끝나고 뻗어버렸어 ㅠ [2025-07-02 17:40:00]\n2 :기다렸는데 연락 없어서 속상했어 [2025-07-02 18:20:00]\n1 :진짜 미안해. 오늘은 꼭 먼저 연락할게! [2025-07-02 19:00:00]'}
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] [cached since 7.435s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] [cached since 7.434s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (684 characters truncated) ... 약속을 지키지 못해 user_2에게 미안함을 표했다. user_2는 연락이 없었던 것에 대해 서운함을 표현했다. user_1은 다음엔 먼저 연락하겠다고 약속하며 배려의 의사를 나타냈다. 대화는 주로 user_1의 사과와 배려로 마무리되었다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 8, 8, 354522), 'modified_at': datetime.datetime(2025, 7, 14, 7, 8, 8, 354522)}
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-03 04:00:00 분석 저장 완료
[2025-07-14 16:08:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] [cached since 14.27s ago] {}
[2025-07-14 16:08:08][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:08:08][INFO][sqlalchemy.engine.Engine] [cached since 14.27s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 16:08:13][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:08:13][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '1 :좋은 아침 🌞 오늘은 기분 좀 어때? [2025-07-03 17:00:00]\n2 :괜찮아! 나도 어제 너무 예민했나봐~ [2025-07-03 17:40:00]\n1 :그럴 수 있지~ 나도 더 신경 쓸게 [2025-07-03 18:20:00]\n2 :우리 오늘 저녁에 산책 어때? [2025-07-03 19:00:00]\n1 :완전 좋지! 기다릴게 ❤️ [2025-07-03 19:40:00]'}
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] [cached since 12.9s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] [cached since 12.9s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (613 characters truncated) ...  }\\n  },\\n  \\"요약\\": \\"user_1과 user_2는 서로의 감정에 대해 배려하며 친밀한 대화를 나누었다. user_1이 감정 표현을 주도하는 반면, user_2는 적극적으로 데이트를 제안하며 긍정적인 하루를 보냈다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 8, 13, 819040), 'modified_at': datetime.datetime(2025, 7, 14, 7, 8, 13, 819040)}
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:13][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-04 04:00:00 분석 저장 완료
[2025-07-14 16:08:13][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] [cached since 19.73s ago] {}
[2025-07-14 16:08:13][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:08:13][INFO][sqlalchemy.engine.Engine] [cached since 19.73s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 16:08:19][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:08:19][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '1 :점심 뭐 먹었어? 난 제육덮밥 ㅎㅎ [2025-07-04 17:00:00]\n2 :헉 나도 고기 땡겨서 삼겹살 먹었는데 😆 [2025-07-04 17:40:00]\n1 :맛잘알 역시~ [2025-07-04 18:20:00]\n2 :우리 입맛 잘 맞아 그치? ㅋㅋ [2025-07-04 19:00:00]'}
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] [cached since 17.37s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] [cached since 17.37s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (538 characters truncated) ... "요약\\": \\"오늘의 대화는 주로 식사 관련 일상적인 이야기를 나누며 서로의 입맛이 잘 맞는다는 점을 공유하는 시간이었습니다. 전체적으로 감정 표현이나 적극적인 행동, 갈등은 보이지 않았으며, 편안하고 가벼운 대화가 주를 이루었습니다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 8, 19, 915201), 'modified_at': datetime.datetime(2025, 7, 14, 7, 8, 19, 915201)}
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-05 04:00:00 분석 저장 완료
[2025-07-14 16:08:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] [cached since 24.21s ago] {}
[2025-07-14 16:08:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:08:19][INFO][sqlalchemy.engine.Engine] [cached since 24.21s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 16:08:25][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:08:25][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '2 :오늘 카톡 답 너무 느렸던 거 알아? [2025-07-05 17:00:00]\n1 :미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐 [2025-07-05 17:40:00]\n2 :그래도 너무 무신경하게 느껴졌어 [2025-07-05 18:20:00]\n1 :앞으론 짧게라도 꼭 답할게! [2025-07-05 19:00:00]\n2 :알겠어… 나도 예민했나봐 [2025-07-05 19:40:00]'}
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] [cached since 23.39s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] [cached since 23.39s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (660 characters truncated) ... \n    }\\n  },\\n  \\"요약\\": \\"user_1은 사과와 배려를 통해 갈등을 해결하려 했고, user_2는 감정 표현에서 다소 부정적인 모습을 보였다. user_1이 상황을 조율하려는 모습을 보이며, 대화를 마무리했다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 8, 25, 935339), 'modified_at': datetime.datetime(2025, 7, 14, 7, 8, 25, 935339)}
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:25][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-06 04:00:00 분석 저장 완료
[2025-07-14 16:08:25][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] [cached since 30.23s ago] {}
[2025-07-14 16:08:25][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:08:25][INFO][sqlalchemy.engine.Engine] [cached since 30.23s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 16:08:35][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:08:35][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '1 :오늘 영화 예매했어~ 7시 타임! [2025-07-06 17:00:00]\n2 :오오 고마워! 오늘은 너한테 집중할게 ❤️ [2025-07-06 17:40:00]\n1 :너랑 시간 보내는 거 제일 좋아 [2025-07-06 18:20:00]\n2 :나도야~ 🥰 [2025-07-06 19:00:00]'}
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] [cached since 32.51s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] [cached since 32.51s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (649 characters truncated) ... \\": \\"user_1과 user_2 모두 서로에 대한 애정 표현이 두드러지는 하루였다. user_1은 영화 예매를 통해 적극적인 행동을 보였으며, user_2는 이에 대해 감사와 애정을 표현했다. 전반적으로 긍정적이고 화목한 하루였다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 8, 35, 53870), 'modified_at': datetime.datetime(2025, 7, 14, 7, 8, 35, 53870)}
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:35][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-07 04:00:00 분석 저장 완료
[2025-07-14 16:08:35][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] [cached since 39.35s ago] {}
[2025-07-14 16:08:35][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:08:35][INFO][sqlalchemy.engine.Engine] [cached since 39.35s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 16:08:38][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:08:38][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Expecting value: line 1 column 1 (char 0), 입력: {'messages': '1 :일주일 진짜 빠르다 [2025-07-07 17:00:00]\n2 :그러게~ 우리 이번 주도 잘 버텼다 [2025-07-07 17:40:00]\n1 :너 있어서 든든했어 [2025-07-07 18:20:00]\n2 :다음 주도 잘 지내보자! 사랑해 😘 [2025-07-07 19:00:00]'}
[2025-07-14 16:08:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:38][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:08:38][INFO][sqlalchemy.engine.Engine] [cached since 36.41s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 8, 0, 0), 'param_1': 1}
[2025-07-14 16:08:38][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:08:38][INFO][sqlalchemy.engine.Engine] [cached since 36.41s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 8, 0, 0), 'result': '{"success": false, "error": "Expecting value: line 1 column 1 (char 0)", "raw": "```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\ ... (554 characters truncated) ... 플\\": []\\n    }\\n  },\\n  \\"요약\\": \\"user_1은 애정 표현을 통해 user_2에게 고마움을 전했고, user_2는 애정과 함께 다음 주에 대한 격려를 했다. 두 사람 모두 하루를 긍정적으로 마무리했다.\\"\\n}\\n```"}', 'created_at': datetime.datetime(2025, 7, 14, 7, 8, 38, 949164), 'modified_at': datetime.datetime(2025, 7, 14, 7, 8, 38, 949164)}
[2025-07-14 16:08:38][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:38][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-08 04:00:00 분석 저장 완료
[2025-07-14 16:08:38][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 16:08:38][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 16:08:57][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:08:57][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:08:57][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 8, 57, 934544), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 8, 57, 934548), 'birth': None, 'gender': 'female'}]
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 8, 57, 939811)}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 7, 8, 57, 364844), 'custom_input__0': None, 'question_id__0': 1, 'user_id__0': '1', 'choice_id__0': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 7, 8, 57, 364872), 'custom_input__1': None, 'question_id__1': 2, 'user_id__1': '1', 'choice_id__1': 8, 'submitted_at__2': datetime.datetime(2025, 7, 14, 7, 8, 57, 364885), 'custom_input__2': None, 'question_id__2': 3, 'user_id__2': '1', 'choice_id__2': 13, 'submitted_at__3': datetime.datetime(2025, 7, 14, 7, 8, 57, 364897), 'custom_input__3': None, 'question_id__3': 4, 'user_id__3': '1', 'choice_id__3': 21, 'submitted_at__4': datetime.datetime(2025, 7, 14, 7, 8, 57, 364912), 'custom_input__4': None, 'question_id__4': 5, 'user_id__4': '1', 'choice_id__4': 26, 'submitted_at__5': datetime.datetime(2025, 7, 14, 7, 8, 57, 364922), 'custom_input__5': None, 'question_id__5': 1, 'user_id__5': '2', 'choice_id__5': 1, 'submitted_at__6': datetime.datetime(2025, 7, 14, 7, 8, 57, 364931), 'custom_input__6': None, 'question_id__6': 2, 'user_id__6': '2', 'choice_id__6': 9, 'submitted_at__7': datetime.datetime(2025, 7, 14, 7, 8, 57, 364940), 'custom_input__7': None, 'question_id__7': 3, 'user_id__7': '2', 'choice_id__7': 16, 'submitted_at__8': datetime.datetime(2025, 7, 14, 7, 8, 57, 364951), 'custom_input__8': None, 'question_id__8': 4, 'user_id__8': '2', 'choice_id__8': 20, 'submitted_at__9': datetime.datetime(2025, 7, 14, 7, 8, 57, 364962), 'custom_input__9': None, 'question_id__9': 5, 'user_id__9': '2', 'choice_id__9': 25}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__12': '너에 대한 애정이 넘쳤어.', 'user_id__12': '1' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__14': '바쁨', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감'}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s (insertmanyvalues) 1/1 (ordered)] {'has_image__0': 0, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'deleted_at__0': None, 'couple_id__0': '1', 'user_id__0': '1', 'is_delivered__0': 1, 'image_url__0': None, 'embed_index__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'has_image__1': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'deleted_at__1': None, 'couple_id__1': '1', 'user_id__1': '2', 'is_delivered__1': 1, 'image_url__1': None, 'embed_index__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'has_image__2': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'deleted_at__2': None, 'couple_id__2': '1', 'user_id__2': '1', 'is_delivered__2': 1, 'image_url__2': None, 'embed_index__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'has_image__3': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'deleted_at__3': None, 'couple_id__3': '1', 'user_id__3': '2', 'is_delivered__3': 1, 'image_url__3': None, 'embed_index__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'has_image__4': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'deleted_at__4': None, 'couple_id__4': '1', 'user_id__4': '2', 'is_delivered__4': 1, 'image_url__4': None, 'embed_index__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'has_image__5': 0, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'deleted_at__5': None, 'couple_id__5': '1', 'user_id__5': '1' ... 170 parameters truncated ... 'user_id__24': '1', 'is_delivered__24': 1, 'image_url__24': None, 'embed_index__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'has_image__25': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'deleted_at__25': None, 'couple_id__25': '1', 'user_id__25': '2', 'is_delivered__25': 1, 'image_url__25': None, 'embed_index__25': None, 'content__25': '나도야~ 🥰', 'has_image__26': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'deleted_at__26': None, 'couple_id__26': '1', 'user_id__26': '1', 'is_delivered__26': 1, 'image_url__26': None, 'embed_index__26': None, 'content__26': '일주일 진짜 빠르다', 'has_image__27': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'deleted_at__27': None, 'couple_id__27': '1', 'user_id__27': '2', 'is_delivered__27': 1, 'image_url__27': None, 'embed_index__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'has_image__28': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'deleted_at__28': None, 'couple_id__28': '1', 'user_id__28': '1', 'is_delivered__28': 1, 'image_url__28': None, 'embed_index__28': None, 'content__28': '너 있어서 든든했어', 'has_image__29': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'deleted_at__29': None, 'couple_id__29': '1', 'user_id__29': '2', 'is_delivered__29': 1, 'image_url__29': None, 'embed_index__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘'}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 16:08:57][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1'}
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:08:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:09:00][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:09:00][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00040s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:09:00][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00035s] {'user_id': '1', 'summary': '지민 values communication as a cornerstone of their relationships, favoring open dialogue to strengthen connections. When conflicts arise, they prefer  ... (261 characters truncated) ... ng bonds with regular interaction. Ultimately, they seek deep, meaningful connections where mutual understanding and emotional depth are prioritized.', 'created_at': datetime.datetime(2025, 7, 14, 7, 9, 0, 844203), 'updated_at': datetime.datetime(2025, 7, 14, 7, 9, 0, 844210)}
[2025-07-14 16:09:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:09:00][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 16:09:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:00][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:09:00][INFO][sqlalchemy.engine.Engine] [cached since 2.86s ago] {'user_id_1': '2'}
[2025-07-14 16:09:00][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:09:00][INFO][sqlalchemy.engine.Engine] [cached since 2.861s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:09:04][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] [cached since 3.309s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] [cached since 3.307s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, indicating a preference for honesty and reliability. When conflicts arise, she typically opts ... (341 characters truncated) ... e seeks a relationship characterized by balanced independence, where both partners maintain their individuality while being supportive of each other.', 'created_at': datetime.datetime(2025, 7, 14, 7, 9, 4, 151127), 'updated_at': datetime.datetime(2025, 7, 14, 7, 9, 4, 151130)}
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:09:04][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 16:09:04][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 16:09:04][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {}
[2025-07-14 16:09:04][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:09:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 16:09:09][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00044s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["이따 끝나고 연락하자~"], "적극_횟수": 0, "적극_샘플": [], " ... (181 characters truncated) ... 수": 0, "격려_샘플": [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 격려와 배려의 표현을 주로 했고, user_2는 바쁜 일정 속에서도 배려와 적극적인 대화를 이어갔다. 서로 일정을 공유하며 저녁에 통화하기로 계획했다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 9, 9, 619994), 'modified_at': datetime.datetime(2025, 7, 14, 7, 9, 9, 619994)}
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:09:09][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-02 04:00:00 분석 저장 완료
[2025-07-14 16:09:09][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] [cached since 5.466s ago] {}
[2025-07-14 16:09:09][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:09:09][INFO][sqlalchemy.engine.Engine] [cached since 5.464s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 16:09:17][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] [cached since 8.219s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] [cached since 8.217s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["진짜 미안해. 오늘은 꼭 먼저 연락할게!"], "적극_횟수": 1, "적극_ ... (219 characters truncated) ...  2, "갈등_샘플": ["어제 약속했는데 통화 못했네 😕", "기다렸는데 연락 없어서 속상했어"]}}, "요약": "user_1은 미안함을 표현하며 상황을 개선하려는 의지를 보였고, user_2는 서운함을 드러냈다. 전체적으로 갈등과 서운함이 주된 감정이었다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 9, 17, 837803), 'modified_at': datetime.datetime(2025, 7, 14, 7, 9, 17, 837803)}
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:09:17][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-03 04:00:00 분석 저장 완료
[2025-07-14 16:09:17][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] [cached since 13.69s ago] {}
[2025-07-14 16:09:17][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:09:17][INFO][sqlalchemy.engine.Engine] [cached since 13.68s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 16:09:26][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] [cached since 15.3s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] [cached since 15.3s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["완전 좋지! 기다릴게 ❤️"], "배려_횟수": 1, "배려_샘플": ["그럴 수 있지~ 나도 더 신경 쓸게"], "적극 ... (216 characters truncated) ... 무 예민했나봐~"], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 애정표현과 배려의 메시지를 보냈고, user_2는 적극적으로 산책을 제안하면서 관계를 회복하려는 모습을 보였다. 두 사람은 서로의 감정을 이해하며 하루를 마무리했다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 9, 26, 560801), 'modified_at': datetime.datetime(2025, 7, 14, 7, 9, 26, 560801)}
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:09:26][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-04 04:00:00 분석 저장 완료
[2025-07-14 16:09:26][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] [cached since 20.77s ago] {}
[2025-07-14 16:09:26][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:09:26][INFO][sqlalchemy.engine.Engine] [cached since 20.77s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 16:09:33][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] [cached since 22.23s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] [cached since 22.23s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려_횟수": 0, "격려 ... (133 characters truncated) ... : 0, "격려_샘플": [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "해당 대화에서는 애정표현이나 배려, 적극적 행동, 격려, 갈등 등의 요소를 찾을 수 없습니다. 주로 일상적인 대화와 서로의 식사 메뉴에 대한 이야기로 이루어져 있습니다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 9, 33, 488390), 'modified_at': datetime.datetime(2025, 7, 14, 7, 9, 33, 488390)}
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:09:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-05 04:00:00 분석 저장 완료
[2025-07-14 16:09:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] [cached since 27.7s ago] {}
[2025-07-14 16:09:33][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:09:33][INFO][sqlalchemy.engine.Engine] [cached since 27.7s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 16:09:39][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] [cached since 28.08s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] [cached since 28.08s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["앞으론 짧게라도 꼭 답할게!"], "적극_횟수": 0, "적극_샘플": [] ... (264 characters truncated) ...  "요약": "user_1과 user_2 사이에 약간의 갈등이 있었지만 user_1이 배려를 표시하며 상황을 해결하려고 했다. user_2는 처음에 불만을 표현했지만 이후에는 자신이 예민했음을 인정했다. 전반적으로 두 사람은 대화를 통해 오해를 풀려고 노력했다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 9, 39, 334830), 'modified_at': datetime.datetime(2025, 7, 14, 7, 9, 39, 334830)}
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:09:39][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-06 04:00:00 분석 저장 완료
[2025-07-14 16:09:39][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] [cached since 33.54s ago] {}
[2025-07-14 16:09:39][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:09:39][INFO][sqlalchemy.engine.Engine] [cached since 33.54s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 16:09:45][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] [cached since 33.78s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] [cached since 33.78s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["너랑 시간 보내는 거 제일 좋아"], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 1, "적극_샘플":  ... (211 characters truncated) ... [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1이 영화 예매를 통해 적극적인 모습을 보였고, user_2는 배려와 애정 표현을 통해 긍정적인 감정을 나눴다. 두 사람 모두 서로에 대한 애정과 감사의 마음을 표현하며 하루를 보냈다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 9, 45, 35030), 'modified_at': datetime.datetime(2025, 7, 14, 7, 9, 45, 35030)}
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:09:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-07 04:00:00 분석 저장 완료
[2025-07-14 16:09:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] [cached since 39.25s ago] {}
[2025-07-14 16:09:45][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:09:45][INFO][sqlalchemy.engine.Engine] [cached since 39.24s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 16:09:51][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:09:51][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:09:51][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:09:51][INFO][sqlalchemy.engine.Engine] [cached since 40.4s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 8, 0, 0), 'param_1': 1}
[2025-07-14 16:09:51][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:09:51][INFO][sqlalchemy.engine.Engine] [cached since 40.4s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 8, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["너 있어서 든든했어"], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려 ... (166 characters truncated) ... ["다음 주도 잘 지내보자!"], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 애정 표현을 통해 관계의 든든함을 강조했으며, user_2는 애정과 함께 다음 주를 잘 보내자는 격려를 했다. 대화는 주로 긍정적인 감정으로 이루어졌다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 9, 51, 656821), 'modified_at': datetime.datetime(2025, 7, 14, 7, 9, 51, 656821)}
[2025-07-14 16:09:51][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:09:51][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-08 04:00:00 분석 저장 완료
[2025-07-14 16:09:51][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 16:09:51][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 16:24:15][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:24:15][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:24:15][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:24:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00082s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00025s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00098s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00107s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00038s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 24, 16, 438503), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 24, 16, 438507), 'birth': None, 'gender': 'female'}]
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 24, 16, 444222)}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'choice_id__0': 2, 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 7, 24, 15, 794982), 'custom_input__0': None, 'user_id__1': '1', 'choice_id__1': 8, 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 7, 24, 15, 795011), 'custom_input__1': None, 'user_id__2': '1', 'choice_id__2': 13, 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 7, 24, 15, 795024), 'custom_input__2': None, 'user_id__3': '1', 'choice_id__3': 21, 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 7, 24, 15, 795036), 'custom_input__3': None, 'user_id__4': '1', 'choice_id__4': 26, 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 7, 24, 15, 795048), 'custom_input__4': None, 'user_id__5': '2', 'choice_id__5': 1, 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 7, 24, 15, 795057), 'custom_input__5': None, 'user_id__6': '2', 'choice_id__6': 9, 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 7, 24, 15, 795066), 'custom_input__6': None, 'user_id__7': '2', 'choice_id__7': 16, 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 7, 24, 15, 795076), 'custom_input__7': None, 'user_id__8': '2', 'choice_id__8': 20, 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 7, 24, 15, 795086), 'custom_input__8': None, 'user_id__9': '2', 'choice_id__9': 25, 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 7, 24, 15, 795097), 'custom_input__9': None}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__12': '애정', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'user_id__14': '2', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s (insertmanyvalues) 1/1 (ordered)] {'deleted_at__0': None, 'user_id__0': '1', 'embed_index__0': None, 'couple_id__0': '1', 'has_image__0': 0, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'image_url__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'is_delivered__0': 1, 'deleted_at__1': None, 'user_id__1': '2', 'embed_index__1': None, 'couple_id__1': '1', 'has_image__1': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'image_url__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'is_delivered__1': 1, 'deleted_at__2': None, 'user_id__2': '1', 'embed_index__2': None, 'couple_id__2': '1', 'has_image__2': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'image_url__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'is_delivered__2': 1, 'deleted_at__3': None, 'user_id__3': '2', 'embed_index__3': None, 'couple_id__3': '1', 'has_image__3': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'image_url__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'is_delivered__3': 1, 'deleted_at__4': None, 'user_id__4': '2', 'embed_index__4': None, 'couple_id__4': '1', 'has_image__4': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'image_url__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'is_delivered__4': 1, 'deleted_at__5': None, 'user_id__5': '1', 'embed_index__5': None, 'couple_id__5': '1', 'has_image__5': 0 ... 170 parameters truncated ... 'has_image__24': 0, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'image_url__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'is_delivered__24': 1, 'deleted_at__25': None, 'user_id__25': '2', 'embed_index__25': None, 'couple_id__25': '1', 'has_image__25': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'image_url__25': None, 'content__25': '나도야~ 🥰', 'is_delivered__25': 1, 'deleted_at__26': None, 'user_id__26': '1', 'embed_index__26': None, 'couple_id__26': '1', 'has_image__26': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'image_url__26': None, 'content__26': '일주일 진짜 빠르다', 'is_delivered__26': 1, 'deleted_at__27': None, 'user_id__27': '2', 'embed_index__27': None, 'couple_id__27': '1', 'has_image__27': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'image_url__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'is_delivered__27': 1, 'deleted_at__28': None, 'user_id__28': '1', 'embed_index__28': None, 'couple_id__28': '1', 'has_image__28': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'image_url__28': None, 'content__28': '너 있어서 든든했어', 'is_delivered__28': 1, 'deleted_at__29': None, 'user_id__29': '2', 'embed_index__29': None, 'couple_id__29': '1', 'has_image__29': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'image_url__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'is_delivered__29': 1}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 16:24:16][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'user_id_1': '1'}
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:24:18][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:24:18][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:24:18][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:24:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id': '1', 'summary': '지민 values clear and open communication in relationships, prioritizing honest and meaningful conversations. When conflicts arise, they prefer to take  ... (230 characters truncated) ... emphasizing regular interaction to maintain closeness. Ultimately, they seek a deep, intimate connection that goes beyond surface-level interactions.', 'created_at': datetime.datetime(2025, 7, 14, 7, 24, 18, 842049), 'updated_at': datetime.datetime(2025, 7, 14, 7, 24, 18, 842053)}
[2025-07-14 16:24:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:18][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 16:24:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:18][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:24:18][INFO][sqlalchemy.engine.Engine] [cached since 2.327s ago] {'user_id_1': '2'}
[2025-07-14 16:24:18][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:18][INFO][sqlalchemy.engine.Engine] [cached since 2.327s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:24:21][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] [cached since 2.912s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] [cached since 2.912s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, preferring to build strong bonds based on reliability and honesty. In times of conflict, she  ... (344 characters truncated) ... l space. Ultimately, 수아 seeks a relationship where both partners enjoy independence while nurturing a supportive and mutually fulfilling partnership.', 'created_at': datetime.datetime(2025, 7, 14, 7, 24, 21, 753455), 'updated_at': datetime.datetime(2025, 7, 14, 7, 24, 21, 753458)}
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:21][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 16:24:21][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 16:24:21][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 16:24:21][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:24:21][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 16:24:25][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 1, 0, 0), 'param_1': 1}
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 1, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["잘 잤어? 오늘도 힘내자! 😊"], "적극_횟수": 1, "적극_샘플": [ ... (206 characters truncated) ... 샘플": ["응 고마워~"], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1이 주로 배려와 격려의 메시지를 주도했고, user_2는 적극적으로 저녁 통화 약속을 잡았다. 두 사람 모두 바쁜 일정 중에서도 서로를 챙기려는 모습이 보였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 24, 25, 717787), 'modified_at': datetime.datetime(2025, 7, 14, 7, 24, 25, 717787)}
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:25][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-01 분석 저장 완료
[2025-07-14 16:24:25][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] [cached since 3.962s ago] {}
[2025-07-14 16:24:25][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:24:25][INFO][sqlalchemy.engine.Engine] [cached since 3.959s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 16:24:29][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] [cached since 3.353s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] [cached since 3.353s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 1, "적극_샘플": ["오늘은 꼭 먼저 연락할게!"], ... (192 characters truncated) ... 수": 1, "갈등_샘플": ["기다렸는데 연락 없어서 속상했어"]}}, "요약": "user_1이 주로 사과와 다음 행동을 다짐하며 적극적인 모습을 보였고, user_2는 서운함을 표현했습니다. 두 사람은 어제 통화 약속을 놓친 것에 대해 대화를 나누었습니다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 24, 29, 71034), 'modified_at': datetime.datetime(2025, 7, 14, 7, 24, 29, 71034)}
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-02 분석 저장 완료
[2025-07-14 16:24:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] [cached since 7.317s ago] {}
[2025-07-14 16:24:29][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:24:29][INFO][sqlalchemy.engine.Engine] [cached since 7.316s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 16:24:32][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] [cached since 7.205s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] [cached since 7.204s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["기다릴게 ❤️"], "배려_횟수": 2, "배려_샘플": ["오늘은 기분 좀 어때?", "나도 더 신경 쓸게"], "적극 ... (213 characters truncated) ... , "격려_샘플": [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 배려와 애정표현을 통해 감정적인 지지를 보였으며, user_2는 산책을 제안하며 적극적인 모습을 보였다. 두 사람 사이에는 갈등 없이 평화로운 대화가 이어졌다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 24, 32, 922374), 'modified_at': datetime.datetime(2025, 7, 14, 7, 24, 32, 922374)}
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:32][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-03 분석 저장 완료
[2025-07-14 16:24:32][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] [cached since 11.17s ago] {}
[2025-07-14 16:24:32][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:24:32][INFO][sqlalchemy.engine.Engine] [cached since 11.17s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 16:24:36][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:24:36][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Invalid json output: ```json
{
  "user_stats": {
    "user_1": {
      "애정표현_횟수": 0,
      "애정표현_샘플": [],
      "배려_횟수": 0,
      "배려_샘플": [],
      "적극_횟수": 0,
      "적극_샘플": [],
      "격려_횟수": 0,
      "격려_샘플": [],
      "갈등_횟수": 0,
      "갈등_샘플": [],
    },
    "user_2": {
      "애정표현_횟수": 0,
      "애정표현_샘플": [],
      "배려_횟수": 0,
      "배려_샘플": [],
      "적극_횟수": 0,
      "적극_샘플": [],
      "격려_횟수": 0,
      "격려_샘플": [],
      "갈등_횟수": 0,
      "갈등_샘플": [],
    }
  },
  "요약": "오늘의 대화는 주로 일상적인 식사 이야기에 집중되었으며, 특별한 감정 표현이나 갈등은 없었습니다. 두 사람 모두 서로의 식사 취향에 대해 긍정적인 반응을 보였습니다."
}
```

이번 대화는 일상적인 식사 관련 주제였고, 특별한 감정적 반응이나 적극적인 행동은 드러나지 않았습니다. 서로의 음식 취향에 대해 긍정적인 반응을 주고받았지만, 애정 표현이나 갈등 등의 뚜렷한 감정적 교류는 없었습니다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE , 입력: {'messages': '1 :점심 뭐 먹었어? 난 제육덮밥 ㅎㅎ [2025-07-04 17:00:00]\n2 :헉 나도 고기 땡겨서 삼겹살 먹었는데 😆 [2025-07-04 17:40:00]\n1 :맛잘알 역시~ [2025-07-04 18:20:00]\n2 :우리 입맛 잘 맞아 그치? ㅋㅋ [2025-07-04 19:00:00]'}
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] [cached since 11.03s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] [cached since 11.03s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": false, "error": "Invalid json output: ```json\\n{\\n  \\"user_stats\\": {\\n    \\"user_1\\": {\\n      \\"애정표현_횟수\\": 0,\\n      \\"애정표현 ... (729 characters truncated) ... 등 등의 뚜렷한 감정적 교류는 없었습니다.\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE ", "raw": null}', 'created_at': datetime.datetime(2025, 7, 14, 7, 24, 36, 752114), 'modified_at': datetime.datetime(2025, 7, 14, 7, 24, 36, 752114)}
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:36][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-04 분석 저장 완료
[2025-07-14 16:24:36][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] [cached since 14.99s ago] {}
[2025-07-14 16:24:36][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:24:36][INFO][sqlalchemy.engine.Engine] [cached since 14.99s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 16:24:40][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] [cached since 14.84s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] [cached since 14.84s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["앞으론 짧게라도 꼭 답할게!"], "적극_횟수": 0, "적극_샘플": [] ... (207 characters truncated) ... "갈등_샘플": ["오늘 카톡 답 너무 느렸던 거 알아?", "그래도 너무 무신경하게 느껴졌어"]}}, "요약": "user_1은 배려의 말을 통해 상황을 해결하려 했고, user_2는 불만을 표현했다. 두 사람은 대화 끝에 서로 이해하고자 하는 모습을 보였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 24, 40, 555495), 'modified_at': datetime.datetime(2025, 7, 14, 7, 24, 40, 555495)}
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:40][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-05 분석 저장 완료
[2025-07-14 16:24:40][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] [cached since 18.8s ago] {}
[2025-07-14 16:24:40][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:24:40][INFO][sqlalchemy.engine.Engine] [cached since 18.8s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 16:24:47][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] [cached since 19.67s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] [cached since 19.67s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"1": {"애정표현_횟수": 2, "애정표현_샘플": ["너랑 시간 보내는 거 제일 좋아", "오늘 영화 예매했어~ 7시 타임!"], "배려_횟수": 0, "배려_샘플": [], "적극_ ... (246 characters truncated) ... 0, "갈등_샘플": []}}, "요약": "user_1과 user_2 모두 애정 표현을 많이 한 하루였다. 서로의 존재와 시간을 소중히 여기는 모습을 보였으며, 특별한 갈등이나 부정적 감정은 없었다. user_1이 영화 예매를 통해 적극적인 행동을 보여주었다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 24, 47, 98932), 'modified_at': datetime.datetime(2025, 7, 14, 7, 24, 47, 98932)}
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-06 분석 저장 완료
[2025-07-14 16:24:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] [cached since 23.63s ago] {}
[2025-07-14 16:24:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:24:47][INFO][sqlalchemy.engine.Engine] [cached since 23.63s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 16:24:50][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:24:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:24:50][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:24:50][INFO][sqlalchemy.engine.Engine] [cached since 23.18s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 16:24:50][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:24:50][INFO][sqlalchemy.engine.Engine] [cached since 23.18s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["너 있어서 든든했어"], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려 ... (187 characters truncated) ... 등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1과 user_2 모두 애정표현을 주고받으며 긍정적인 대화를 나눴다. user_2는 다음 주를 위한 격려의 메시지를 전했다. 전반적으로 두 사람 모두 긍정적인 감정 교류를 하며 하루를 마무리했다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 24, 50, 609440), 'modified_at': datetime.datetime(2025, 7, 14, 7, 24, 50, 609440)}
[2025-07-14 16:24:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:24:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-07 분석 저장 완료
[2025-07-14 16:24:50][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 16:24:50][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 16:28:33][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:28:33][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:28:33][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00029s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00052s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:28:33][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [no key 0.00031s] {}
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 28, 34, 73887), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 28, 34, 73891), 'birth': None, 'gender': 'female'}]
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 28, 34, 77614)}
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'choice_id__0': 2, 'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 7, 28, 33, 468158), 'user_id__0': '1', 'question_id__0': 1, 'choice_id__1': 8, 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 7, 28, 33, 468188), 'user_id__1': '1', 'question_id__1': 2, 'choice_id__2': 13, 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 7, 28, 33, 468201), 'user_id__2': '1', 'question_id__2': 3, 'choice_id__3': 21, 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 7, 28, 33, 468213), 'user_id__3': '1', 'question_id__3': 4, 'choice_id__4': 26, 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 7, 28, 33, 468224), 'user_id__4': '1', 'question_id__4': 5, 'choice_id__5': 1, 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 7, 28, 33, 468234), 'user_id__5': '2', 'question_id__5': 1, 'choice_id__6': 9, 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 7, 28, 33, 468245), 'user_id__6': '2', 'question_id__6': 2, 'choice_id__7': 16, 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 7, 28, 33, 468275), 'user_id__7': '2', 'question_id__7': 3, 'choice_id__8': 20, 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 7, 28, 33, 468288), 'user_id__8': '2', 'question_id__8': 4, 'choice_id__9': 25, 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 7, 28, 33, 468300), 'user_id__9': '2', 'question_id__9': 5}
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'emotion__0': '고마움', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__1': '기대감', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'emotion__2': '미안함', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__3': '죄책감', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'emotion__4': '사랑', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__5': '다정함', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'emotion__6': '친밀감', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'emotion__7': '억울함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__8': '서운함', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'emotion__9': '행복', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__10': '감사', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'emotion__11': '신뢰', 'memo__12': '너에 대한 애정이 넘쳤어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'user_id__14': '2', 'emotion__14': '바쁨', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'emotion__15': '서운함', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__16': '실망감', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'emotion__17': '이해', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__18': '다정함', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'emotion__19': '호감', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__20': '편안함', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'emotion__21': '기대감', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__22': '불만', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'emotion__23': '기쁨', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__24': '감동', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'emotion__25': '사랑', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'emotion__26': '안정감'}
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'image_url__0': None, 'user_id__0': '1', 'deleted_at__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'couple_id__0': '1', 'is_delivered__0': 1, 'embed_index__0': None, 'has_image__0': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'image_url__1': None, 'user_id__1': '2', 'deleted_at__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'couple_id__1': '1', 'is_delivered__1': 1, 'embed_index__1': None, 'has_image__1': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'image_url__2': None, 'user_id__2': '1', 'deleted_at__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'couple_id__2': '1', 'is_delivered__2': 1, 'embed_index__2': None, 'has_image__2': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'image_url__3': None, 'user_id__3': '2', 'deleted_at__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'couple_id__3': '1', 'is_delivered__3': 1, 'embed_index__3': None, 'has_image__3': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'image_url__4': None, 'user_id__4': '2', 'deleted_at__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'couple_id__4': '1', 'is_delivered__4': 1, 'embed_index__4': None, 'has_image__4': 0, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'image_url__5': None, 'user_id__5': '1', 'deleted_at__5': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ' ... 170 parameters truncated ... 'content__24': '너랑 시간 보내는 거 제일 좋아', 'couple_id__24': '1', 'is_delivered__24': 1, 'embed_index__24': None, 'has_image__24': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'image_url__25': None, 'user_id__25': '2', 'deleted_at__25': None, 'content__25': '나도야~ 🥰', 'couple_id__25': '1', 'is_delivered__25': 1, 'embed_index__25': None, 'has_image__25': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'image_url__26': None, 'user_id__26': '1', 'deleted_at__26': None, 'content__26': '일주일 진짜 빠르다', 'couple_id__26': '1', 'is_delivered__26': 1, 'embed_index__26': None, 'has_image__26': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'image_url__27': None, 'user_id__27': '2', 'deleted_at__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'couple_id__27': '1', 'is_delivered__27': 1, 'embed_index__27': None, 'has_image__27': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'image_url__28': None, 'user_id__28': '1', 'deleted_at__28': None, 'content__28': '너 있어서 든든했어', 'couple_id__28': '1', 'is_delivered__28': 1, 'embed_index__28': None, 'has_image__28': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'image_url__29': None, 'user_id__29': '2', 'deleted_at__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'couple_id__29': '1', 'is_delivered__29': 1, 'embed_index__29': None, 'has_image__29': 0}
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 16:28:34][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1'}
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:28:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:28:38][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:28:38][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:28:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00087s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:28:38][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:28:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00074s] {'user_id': '1', 'summary': '지민 highly values communication in relationships, prioritizing open and honest dialogue. When conflicts arise, 지민 prefers to cool off before addressin ... (175 characters truncated) ... tact with their partner, as it helps foster a close bond. Ultimately, they seek a relationship characterized by a deep connection with their partner.', 'created_at': datetime.datetime(2025, 7, 14, 7, 28, 38, 54847), 'updated_at': datetime.datetime(2025, 7, 14, 7, 28, 38, 54855)}
[2025-07-14 16:28:38][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:38][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 16:28:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:38][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:28:38][INFO][sqlalchemy.engine.Engine] [cached since 3.937s ago] {'user_id_1': '2'}
[2025-07-14 16:28:38][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:28:38][INFO][sqlalchemy.engine.Engine] [cached since 3.938s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:28:40][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] [cached since 2.296s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] [cached since 2.294s ago] {'user_id': '2', 'summary': '수아 values trust as a cornerstone of her relationships, prioritizing honesty and reliability. When conflicts arise, she prefers to give them time to s ... (210 characters truncated) ... munication without overwhelming her partner. Ideally, she seeks a relationship where both partners enjoy a healthy mix of closeness and independence.', 'created_at': datetime.datetime(2025, 7, 14, 7, 28, 40, 348193), 'updated_at': datetime.datetime(2025, 7, 14, 7, 28, 40, 348197)}
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:40][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 16:28:40][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 16:28:40][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 16:28:40][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:28:40][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 16:28:46][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 1, 0, 0), 'param_1': 1}
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 1, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["이따 끝나고 연락하자~"], "적극_횟수": 0, "적극_샘플": [], " ... (185 characters truncated) ... 플": ["응 고마워~"], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 상대방을 배려하는 메시지를 보냈고, user_2는 저녁에 통화를 제안하며 적극적인 모습을 보였다. 둘 다 바쁜 하루를 보냈지만 서로를 격려하는 모습을 보였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 28, 46, 547733), 'modified_at': datetime.datetime(2025, 7, 14, 7, 28, 46, 547733)}
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:46][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-01 분석 저장 완료
[2025-07-14 16:28:46][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] [cached since 4.487s ago] {}
[2025-07-14 16:28:46][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:28:46][INFO][sqlalchemy.engine.Engine] [cached since 4.485s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 16:28:51][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] [cached since 5.31s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] [cached since 5.31s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": [], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 1, "적극_샘플": ["오늘은 꼭 먼저 연락할게!"], ... (223 characters truncated) ... 했네 😕", "기다렸는데 연락 없어서 속상했어"]}}, "요약": "user_1은 회의로 인해 약속을 지키지 못해 미안함을 표현했으며, 다음번에는 먼저 연락하겠다는 적극적인 태도를 보였다. user_2는 약속을 지키지 못한 상황에 대해 서운함과 갈등을 드러냈다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 28, 51, 857656), 'modified_at': datetime.datetime(2025, 7, 14, 7, 28, 51, 857656)}
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:51][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-02 분석 저장 완료
[2025-07-14 16:28:51][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] [cached since 9.804s ago] {}
[2025-07-14 16:28:51][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:28:51][INFO][sqlalchemy.engine.Engine] [cached since 9.801s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 16:28:56][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] [cached since 9.82s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] [cached since 9.82s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["완전 좋지! 기다릴게 ❤️"], "배려_횟수": 2, "배려_샘플": ["오늘은 기분 좀 어때?", "나도 더 신경 쓸게 ... (213 characters truncated) ... _횟수": 0, "격려_샘플": [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1이 배려심 있는 태도로 대화를 이끌었으며, user_2는 산책을 제안하며 적극성을 보였다. 두 사람 모두 감정 표현에 있어서 긍정적인 모습을 유지했다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 28, 56, 367282), 'modified_at': datetime.datetime(2025, 7, 14, 7, 28, 56, 367282)}
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:28:56][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-03 분석 저장 완료
[2025-07-14 16:28:56][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] [cached since 14.31s ago] {}
[2025-07-14 16:28:56][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:28:56][INFO][sqlalchemy.engine.Engine] [cached since 14.31s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 16:29:00][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] [cached since 13.55s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] [cached since 13.55s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려_횟수": 0, "격려 ... (144 characters truncated) ... ": [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "오늘의 대화에서는 애정표현, 배려, 적극적 행동, 격려, 갈등 등 주요 감정 요소가 드러나지 않았다. 주로 일상적인 식사에 대한 대화를 나누며 서로의 입맛을 칭찬하는 가벼운 대화가 오갔다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 29, 0, 100919), 'modified_at': datetime.datetime(2025, 7, 14, 7, 29, 0, 100919)}
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-04 분석 저장 완료
[2025-07-14 16:29:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] [cached since 18.04s ago] {}
[2025-07-14 16:29:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:29:00][INFO][sqlalchemy.engine.Engine] [cached since 18.04s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 16:29:05][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] [cached since 18.65s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] [cached since 18.65s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["앞으론 짧게라도 꼭 답할게!"], "적극_횟수": 0, "적극_샘플": [] ... (233 characters truncated) ... 거 알아?", "그래도 너무 무신경하게 느껴졌어"]}}, "요약": "user_2가 주로 갈등을 제기하며 불만을 표현했고, user_1은 상황을 해명하고 배려하려는 모습을 보였다. 하루 전반적으로는 갈등 상황이 있었지만, 서로의 입장을 이해하려는 모습도 보였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 29, 5, 202550), 'modified_at': datetime.datetime(2025, 7, 14, 7, 29, 5, 202550)}
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-05 분석 저장 완료
[2025-07-14 16:29:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] [cached since 23.14s ago] {}
[2025-07-14 16:29:05][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:29:05][INFO][sqlalchemy.engine.Engine] [cached since 23.14s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 16:29:26][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] [cached since 38.7s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] [cached since 38.7s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 2, "애정표현_샘플": ["너랑 시간 보내는 거 제일 좋아", "오늘 영화 예매했어~ 7시 타임!"], "배려_횟수": 0, "배려_샘플": [], ... (250 characters truncated) ... _횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 영화 예매를 통해 적극적인 행동을 보였고, 주로 애정 표현을 주도했다. user_2도 애정 표현을 하며 긍정적인 반응을 보였다. 두 사람 모두 갈등이나 부정적 감정 없이 행복한 하루를 보냈다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 29, 26, 985568), 'modified_at': datetime.datetime(2025, 7, 14, 7, 29, 26, 985568)}
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:26][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-06 분석 저장 완료
[2025-07-14 16:29:26][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] [cached since 43.18s ago] {}
[2025-07-14 16:29:26][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:29:26][INFO][sqlalchemy.engine.Engine] [cached since 43.18s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 16:29:30][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:29:30][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:30][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:30][INFO][sqlalchemy.engine.Engine] [cached since 42.3s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 16:29:30][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:29:30][INFO][sqlalchemy.engine.Engine] [cached since 42.3s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["너 있어서 든든했어"], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려 ... (176 characters truncated) ... 지내보자!"], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 애정 표현을 통해 서로의 관계를 확인했고, user_2는 사랑의 표현과 함께 다음 주에 대한 긍정적인 격려를 보였다. 두 사람 모두 긍정적이고 사랑스러운 대화를 나누었다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 29, 30, 587648), 'modified_at': datetime.datetime(2025, 7, 14, 7, 29, 30, 587648)}
[2025-07-14 16:29:30][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:30][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-07 분석 저장 완료
[2025-07-14 16:29:30][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 16:29:30][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 16:29:32][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:29:32][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:29:32][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00041s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00041s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00102s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00026s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [no key 0.00083s] {}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 29, 32, 675906), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 29, 32, 675912), 'birth': None, 'gender': 'female'}]
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 29, 32, 683743)}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00031s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 7, 29, 32, 157921), 'user_id__0': '1', 'custom_input__0': None, 'choice_id__0': 2, 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 7, 29, 32, 157949), 'user_id__1': '1', 'custom_input__1': None, 'choice_id__1': 8, 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 7, 29, 32, 157963), 'user_id__2': '1', 'custom_input__2': None, 'choice_id__2': 13, 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 7, 29, 32, 157975), 'user_id__3': '1', 'custom_input__3': None, 'choice_id__3': 21, 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 7, 29, 32, 157987), 'user_id__4': '1', 'custom_input__4': None, 'choice_id__4': 26, 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 7, 29, 32, 157996), 'user_id__5': '2', 'custom_input__5': None, 'choice_id__5': 1, 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 7, 29, 32, 158005), 'user_id__6': '2', 'custom_input__6': None, 'choice_id__6': 9, 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 7, 29, 32, 158014), 'user_id__7': '2', 'custom_input__7': None, 'choice_id__7': 16, 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 7, 29, 32, 158024), 'user_id__8': '2', 'custom_input__8': None, 'choice_id__8': 20, 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 7, 29, 32, 158035), 'user_id__9': '2', 'custom_input__9': None, 'choice_id__9': 25}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__14': '바쁨', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감'}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'has_image__0': 0, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'is_delivered__0': 1, 'embed_index__0': None, 'couple_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'deleted_at__0': None, 'image_url__0': None, 'user_id__0': '1', 'has_image__1': 0, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'is_delivered__1': 1, 'embed_index__1': None, 'couple_id__1': '1', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'deleted_at__1': None, 'image_url__1': None, 'user_id__1': '2', 'has_image__2': 0, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'is_delivered__2': 1, 'embed_index__2': None, 'couple_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'deleted_at__2': None, 'image_url__2': None, 'user_id__2': '1', 'has_image__3': 0, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'is_delivered__3': 1, 'embed_index__3': None, 'couple_id__3': '1', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'deleted_at__3': None, 'image_url__3': None, 'user_id__3': '2', 'has_image__4': 0, 'content__4': '어제 약속했는데 통화 못했네 😕', 'is_delivered__4': 1, 'embed_index__4': None, 'couple_id__4': '1', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'deleted_at__4': None, 'image_url__4': None, 'user_id__4': '2', 'has_image__5': 0, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'is_delivered__5': 1, 'embed_index__5': None, 'couple_id__5': '1' ... 170 parameters truncated ... 'couple_id__24': '1', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'deleted_at__24': None, 'image_url__24': None, 'user_id__24': '1', 'has_image__25': 0, 'content__25': '나도야~ 🥰', 'is_delivered__25': 1, 'embed_index__25': None, 'couple_id__25': '1', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'deleted_at__25': None, 'image_url__25': None, 'user_id__25': '2', 'has_image__26': 0, 'content__26': '일주일 진짜 빠르다', 'is_delivered__26': 1, 'embed_index__26': None, 'couple_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'deleted_at__26': None, 'image_url__26': None, 'user_id__26': '1', 'has_image__27': 0, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'is_delivered__27': 1, 'embed_index__27': None, 'couple_id__27': '1', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'deleted_at__27': None, 'image_url__27': None, 'user_id__27': '2', 'has_image__28': 0, 'content__28': '너 있어서 든든했어', 'is_delivered__28': 1, 'embed_index__28': None, 'couple_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'deleted_at__28': None, 'image_url__28': None, 'user_id__28': '1', 'has_image__29': 0, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'is_delivered__29': 1, 'embed_index__29': None, 'couple_id__29': '1', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'deleted_at__29': None, 'image_url__29': None, 'user_id__29': '2'}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 16:29:32][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1'}
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:29:34][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:29:34][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:29:34][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:29:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id': '1', 'summary': '지민 values open and effective communication in relationships, often preferring to discuss issues after cooling down to ensure productive conversations ... (330 characters truncated) ... and closeness with their partner. Overall, 지민 prioritizes a thoughtful and communicative approach to maintaining strong and meaningful relationships.', 'created_at': datetime.datetime(2025, 7, 14, 7, 29, 34, 846949), 'updated_at': datetime.datetime(2025, 7, 14, 7, 29, 34, 846952)}
[2025-07-14 16:29:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:34][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 16:29:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:34][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:29:34][INFO][sqlalchemy.engine.Engine] [cached since 2.12s ago] {'user_id_1': '2'}
[2025-07-14 16:29:34][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:34][INFO][sqlalchemy.engine.Engine] [cached since 2.119s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:29:37][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] [cached since 2.439s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] [cached since 2.438s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of her relationships, prioritizing a strong foundation of reliability. In times of conflict, she prefers to wait t ... (286 characters truncated) ... deally, she seeks a relationship characterized by balanced independence, where both partners have space to grow individually while staying connected.', 'created_at': datetime.datetime(2025, 7, 14, 7, 29, 37, 285084), 'updated_at': datetime.datetime(2025, 7, 14, 7, 29, 37, 285087)}
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:37][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 16:29:37][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 16:29:37][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 16:29:37][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:29:37][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 16:29:42][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 1, 0, 0), 'param_1': 1}
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 1, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["이따 끝나고 연락하자~"], "적극_횟수": 1, "적극_샘플": ["이따  ... (199 characters truncated) ... 플": ["응 고마워~"], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 주로 배려와 격려의 메시지를 보냈고, user_2는 일정이 바쁜 가운데 긍정적으로 응대했다. 두 사람 모두 적극적으로 저녁 통화를 계획하며 하루를 마무리했다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 29, 42, 182832), 'modified_at': datetime.datetime(2025, 7, 14, 7, 29, 42, 182832)}
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:42][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-01 분석 저장 완료
[2025-07-14 16:29:42][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] [cached since 4.898s ago] {}
[2025-07-14 16:29:42][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:29:42][INFO][sqlalchemy.engine.Engine] [cached since 4.896s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 16:29:47][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] [cached since 4.995s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] [cached since 4.994s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["진짜 미안해. 오늘은 꼭 먼저 연락할게!"], "적극_횟수": 1, "적극_ ... (281 characters truncated) ... ": "user_2가 약속하지 못한 것에 대해 서운함을 표현했고, user_1은 사과와 함께 배려를 보였다. user_1은 적극적으로 다음에는 먼저 연락하겠다는 약속을 했다. 전반적으로 갈등 상황이 있었지만, user_1의 사과와 배려로 해결의 실마리를 찾았다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 29, 47, 177527), 'modified_at': datetime.datetime(2025, 7, 14, 7, 29, 47, 177527)}
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-02 분석 저장 완료
[2025-07-14 16:29:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] [cached since 9.893s ago] {}
[2025-07-14 16:29:47][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:29:47][INFO][sqlalchemy.engine.Engine] [cached since 9.891s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 16:29:53][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] [cached since 9.318s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] [cached since 9.317s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["기다릴게 ❤️"], "배려_횟수": 1, "배려_샘플": ["나도 더 신경 쓸게"], "적극_횟수": 0, "적극_샘플" ... (217 characters truncated) ... 제 너무 예민했나봐~"]}}, "요약": "user_1은 배려와 애정 표현을 하며 상대방에게 신경을 썼고, user_2는 산책을 제안하며 적극적인 모습을 보였다. 대체로 긍정적인 대화가 이어졌지만, user_2는 어제 자신의 행동에 대해 약간의 후회를 표현했다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 29, 53, 547664), 'modified_at': datetime.datetime(2025, 7, 14, 7, 29, 53, 547664)}
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:29:53][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-03 분석 저장 완료
[2025-07-14 16:29:53][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] [cached since 14.21s ago] {}
[2025-07-14 16:29:53][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:29:53][INFO][sqlalchemy.engine.Engine] [cached since 14.21s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 16:30:00][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] [cached since 16.14s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] [cached since 16.14s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["맛잘알 역시~"], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려_횟수 ... (167 characters truncated) ... 격려_샘플": [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1과 user_2 모두 애정표현을 통해 서로의 유대감을 확인했다. 특별한 배려나 격려, 갈등 요소는 나타나지 않았고, 일상적인 대화를 나누며 즐거운 시간을 보낸 하루였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 30, 0, 372859), 'modified_at': datetime.datetime(2025, 7, 14, 7, 30, 0, 372859)}
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-04 분석 저장 완료
[2025-07-14 16:30:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] [cached since 21.04s ago] {}
[2025-07-14 16:30:00][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:30:00][INFO][sqlalchemy.engine.Engine] [cached since 21.04s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 16:30:05][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] [cached since 21.78s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] [cached since 21.78s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["앞으론 짧게라도 꼭 답할게!"], "적극_횟수": 0, "적극_샘플": [] ... (205 characters truncated) ... , "갈등_샘플": ["오늘 카톡 답 너무 느렸던 거 알아?", "그래도 너무 무신경하게 느껴졌어"]}}, "요약": "user_1은 사과와 배려의 표현을 했고, user_2는 불만을 표현하면서 갈등이 발생했다. 둘 다 상황을 이해하고 개선하려는 의지를 보였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 30, 6, 7547), 'modified_at': datetime.datetime(2025, 7, 14, 7, 30, 6, 7547)}
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:06][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-05 분석 저장 완료
[2025-07-14 16:30:06][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] [cached since 26.67s ago] {}
[2025-07-14 16:30:06][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:30:06][INFO][sqlalchemy.engine.Engine] [cached since 26.67s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 16:30:14][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] [cached since 30.04s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] [cached since 30.04s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 2, "애정표현_샘플": ["너랑 시간 보내는 거 제일 좋아", "오늘 영화 예매했어~ 7시 타임!"], "배려_횟수": 0, "배려_샘플": [], ... (231 characters truncated) ... 플": [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 영화를 예매하며 적극적으로 데이트를 주도했고, user_2는 감정 표현을 통해 애정을 드러냈다. 두 사람은 서로에 대한 애정 표현이 많았고, 긍정적인 대화가 주를 이루었다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 30, 14, 272278), 'modified_at': datetime.datetime(2025, 7, 14, 7, 30, 14, 272278)}
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-06 분석 저장 완료
[2025-07-14 16:30:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] [cached since 34.94s ago] {}
[2025-07-14 16:30:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:30:14][INFO][sqlalchemy.engine.Engine] [cached since 34.94s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 16:30:19][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:30:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:19][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:30:19][INFO][sqlalchemy.engine.Engine] [cached since 35.53s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 16:30:19][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:30:19][INFO][sqlalchemy.engine.Engine] [cached since 35.53s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["너 있어서 든든했어"], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려 ... (173 characters truncated) ...  잘 지내보자!"], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 애정 표현으로 상대방에게 든든함을 전했고, user_2는 사랑과 격려의 메시지를 통해 긍정적인 분위기를 이어갔다. 하루는 주말을 앞두고 서로를 격려하며 마무리되었다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 30, 19, 764181), 'modified_at': datetime.datetime(2025, 7, 14, 7, 30, 19, 764181)}
[2025-07-14 16:30:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-07 분석 저장 완료
[2025-07-14 16:30:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 16:30:19][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 16:30:47][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:30:47][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:30:47][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 16:30:47][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00087s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00027s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 30, 48, 428810), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 30, 48, 428814), 'birth': None, 'gender': 'female'}]
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 30, 48, 438463)}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'choice_id__0': 2, 'custom_input__0': None, 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 7, 30, 47, 830525), 'user_id__1': '1', 'choice_id__1': 8, 'custom_input__1': None, 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 7, 30, 47, 830553), 'user_id__2': '1', 'choice_id__2': 13, 'custom_input__2': None, 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 7, 30, 47, 830566), 'user_id__3': '1', 'choice_id__3': 21, 'custom_input__3': None, 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 7, 30, 47, 830578), 'user_id__4': '1', 'choice_id__4': 26, 'custom_input__4': None, 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 7, 30, 47, 830589), 'user_id__5': '2', 'choice_id__5': 1, 'custom_input__5': None, 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 7, 30, 47, 830599), 'user_id__6': '2', 'choice_id__6': 9, 'custom_input__6': None, 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 7, 30, 47, 830607), 'user_id__7': '2', 'choice_id__7': 16, 'custom_input__7': None, 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 7, 30, 47, 830617), 'user_id__8': '2', 'choice_id__8': 20, 'custom_input__8': None, 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 7, 30, 47, 830627), 'user_id__9': '2', 'choice_id__9': 25, 'custom_input__9': None, 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 7, 30, 47, 830640)}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'embed_index__0': None, 'image_url__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'is_delivered__0': 1, 'deleted_at__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'couple_id__0': '1', 'has_image__0': 0, 'user_id__1': '2', 'embed_index__1': None, 'image_url__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'is_delivered__1': 1, 'deleted_at__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'couple_id__1': '1', 'has_image__1': 0, 'user_id__2': '1', 'embed_index__2': None, 'image_url__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'is_delivered__2': 1, 'deleted_at__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'couple_id__2': '1', 'has_image__2': 0, 'user_id__3': '2', 'embed_index__3': None, 'image_url__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'is_delivered__3': 1, 'deleted_at__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'couple_id__3': '1', 'has_image__3': 0, 'user_id__4': '2', 'embed_index__4': None, 'image_url__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'is_delivered__4': 1, 'deleted_at__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'couple_id__4': '1', 'has_image__4': 0, 'user_id__5': '1', 'embed_index__5': None, 'image_url__5': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'is_delivered__5': 1 ... 170 parameters truncated ... 'is_delivered__24': 1, 'deleted_at__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'couple_id__24': '1', 'has_image__24': 0, 'user_id__25': '2', 'embed_index__25': None, 'image_url__25': None, 'content__25': '나도야~ 🥰', 'is_delivered__25': 1, 'deleted_at__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'couple_id__25': '1', 'has_image__25': 0, 'user_id__26': '1', 'embed_index__26': None, 'image_url__26': None, 'content__26': '일주일 진짜 빠르다', 'is_delivered__26': 1, 'deleted_at__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'couple_id__26': '1', 'has_image__26': 0, 'user_id__27': '2', 'embed_index__27': None, 'image_url__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'is_delivered__27': 1, 'deleted_at__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'couple_id__27': '1', 'has_image__27': 0, 'user_id__28': '1', 'embed_index__28': None, 'image_url__28': None, 'content__28': '너 있어서 든든했어', 'is_delivered__28': 1, 'deleted_at__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'couple_id__28': '1', 'has_image__28': 0, 'user_id__29': '2', 'embed_index__29': None, 'image_url__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'is_delivered__29': 1, 'deleted_at__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'couple_id__29': '1', 'has_image__29': 0}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 16:30:48][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1'}
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:30:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:30:50][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:30:50][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:30:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00059s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:30:50][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:30:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00047s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, suggesting a preference for open and honest dialogue. When conflicts arise, they tend to remain calm ... (193 characters truncated) ...  with partners, which underscores their desire for closeness. Ultimately, they seek a deep connection, emphasizing meaningful interactions and bonds.', 'created_at': datetime.datetime(2025, 7, 14, 7, 30, 50, 824733), 'updated_at': datetime.datetime(2025, 7, 14, 7, 30, 50, 824740)}
[2025-07-14 16:30:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:50][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 16:30:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:50][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:30:50][INFO][sqlalchemy.engine.Engine] [cached since 2.345s ago] {'user_id_1': '2'}
[2025-07-14 16:30:50][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:30:50][INFO][sqlalchemy.engine.Engine] [cached since 2.345s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:30:52][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] [cached since 1.985s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] [cached since 1.983s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of her relationships, ensuring that both partners feel secure and reliable. When conflicts arise, she prefers to t ... (315 characters truncated) ... personal space. Overall, 수아 seeks a relationship that allows for a healthy degree of independence while fostering a deep connection with her partner.', 'created_at': datetime.datetime(2025, 7, 14, 7, 30, 52, 807570), 'updated_at': datetime.datetime(2025, 7, 14, 7, 30, 52, 807578)}
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:52][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 16:30:52][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 16:30:52][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00035s] {}
[2025-07-14 16:30:52][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:30:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00070s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 16:30:56][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 1, 0, 0), 'param_1': 1}
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 1, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["오늘도 힘내자! 😊"], "적극_횟수": 1, "적극_샘플": ["이따 끝나 ... (174 characters truncated) ... ": 1, "격려_샘플": ["고마워~"], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 배려와 적극적인 의사소통을 했고, user_2는 격려와 적극적인 대화를 나눴다. 전반적으로 두 사람은 긍정적인 대화를 이어가는 모습을 보였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 30, 56, 464237), 'modified_at': datetime.datetime(2025, 7, 14, 7, 30, 56, 464237)}
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:30:56][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-01 분석 저장 완료
[2025-07-14 16:30:56][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] [cached since 3.649s ago] {}
[2025-07-14 16:30:56][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:30:56][INFO][sqlalchemy.engine.Engine] [cached since 3.642s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 16:31:02][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] [cached since 4.079s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] [cached since 4.08s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 1, "적극_샘플": ["오늘은 꼭 먼저 연락할게!"], ... (214 characters truncated) ... 속했는데 통화 못했네 😕", "기다렸는데 연락 없어서 속상했어"]}}, "요약": "user_2가 user_1의 연락 부재에 대한 서운함을 표현했고, user_1은 사과와 함께 앞으로의 개선 의지를 보였다. 감정이나 배려보다는 해결을 위한 대화가 주를 이루었다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 31, 2, 148856), 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 2, 148856)}
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:02][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-02 분석 저장 완료
[2025-07-14 16:31:02][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] [cached since 7.733s ago] {}
[2025-07-14 16:31:02][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:31:02][INFO][sqlalchemy.engine.Engine] [cached since 7.728s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 16:31:07][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] [cached since 9.012s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] [cached since 9.013s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["기다릴게 ❤️"], "배려_횟수": 1, "배려_샘플": ["나도 더 신경 쓸게"], "적극_횟수": 0, "적극_샘플" ... (227 characters truncated) ... ~"]}}, "요약": "user_1은 상대방을 배려하며 애정 표현을 하였고, user_2는 산책 제안을 하며 적극적인 모습을 보였습니다. 감정적으로는 user_2가 다소 예민했던 점을 스스로 인정했습니다. 전반적으로 두 사람 모두 긍정적인 대화를 나누었습니다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 31, 7, 82076), 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 7, 82076)}
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:07][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-03 분석 저장 완료
[2025-07-14 16:31:07][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] [cached since 12.67s ago] {}
[2025-07-14 16:31:07][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:31:07][INFO][sqlalchemy.engine.Engine] [cached since 12.67s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 16:31:10][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] [cached since 12.88s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] [cached since 12.88s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려_횟수": 0, "격려 ... (120 characters truncated) ... : [], "격려_횟수": 0, "격려_샘플": [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "두 사용자는 일상적인 대화를 나누며 식사에 대해 공유하였다. 대화는 가벼운 농담 섞인 대화로 이루어졌으며, 특별한 감정이나 갈등은 보이지 않았다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 31, 10, 953172), 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 10, 953172)}
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:10][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-04 분석 저장 완료
[2025-07-14 16:31:10][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] [cached since 16.53s ago] {}
[2025-07-14 16:31:10][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:31:10][INFO][sqlalchemy.engine.Engine] [cached since 16.53s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 16:31:16][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] [cached since 18.03s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] [cached since 18.03s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["앞으론 짧게라도 꼭 답할게!"], "적극_횟수": 0, "적극_샘플": [] ... (218 characters truncated) ... 오늘 카톡 답 너무 느렸던 거 알아?", "그래도 너무 무신경하게 느껴졌어"]}}, "요약": "user_2가 주로 불만을 표현하며 갈등이 시작되었고, user_1이 사과하며 상황을 개선하려 노력했다. 전반적으로 갈등이 있었지만, 서로 이해하려는 모습이 보였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 31, 16, 102813), 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 16, 102813)}
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:16][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-05 분석 저장 완료
[2025-07-14 16:31:16][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] [cached since 21.68s ago] {}
[2025-07-14 16:31:16][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:31:16][INFO][sqlalchemy.engine.Engine] [cached since 21.68s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 16:31:19][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] [cached since 21.53s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] [cached since 21.53s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["너랑 시간 보내는 거 제일 좋아"], "배려_횟수": 1, "배려_샘플": ["오늘 영화 예매했어~ 7시 타임!"], " ... (225 characters truncated) ... , "갈등_샘플": []}}, "요약": "user_1은 애정 표현과 배려를 통해 관계를 유지하려 했고, user_2도 애정 표현과 배려를 보였다. 두 사람 모두 긍정적인 하루를 보냈으며, 특별한 갈등이나 부정적인 감정 없이 서로에 대한 애정과 배려가 돋보였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 31, 19, 602715), 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 19, 602715)}
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-06 분석 저장 완료
[2025-07-14 16:31:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] [cached since 25.18s ago] {}
[2025-07-14 16:31:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:31:19][INFO][sqlalchemy.engine.Engine] [cached since 25.18s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 16:31:24][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:31:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:24][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:24][INFO][sqlalchemy.engine.Engine] [cached since 26.01s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 16:31:24][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:31:24][INFO][sqlalchemy.engine.Engine] [cached since 26.01s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["너 있어서 든든했어"], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려 ... (171 characters truncated) ... 주도 잘 지내보자!"], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 애정 표현을 통해 감정을 드러냈고, user_2는 사랑의 표현과 함께 다음 주를 위한 격려를 보냈다. 두 사람은 서로의 존재에 감사하며 긍정적인 대화를 나누었다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 31, 24, 80362), 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 24, 80362)}
[2025-07-14 16:31:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:24][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-07 분석 저장 완료
[2025-07-14 16:31:24][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 16:31:24][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 16:31:45][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:31:45][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:31:45][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00068s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 45, 788079), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 45, 788083), 'birth': None, 'gender': 'female'}]
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 45, 795142)}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 7, 31, 45, 293969), 'question_id__0': 1, 'choice_id__0': 2, 'custom_input__0': None, 'user_id__0': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 7, 31, 45, 293995), 'question_id__1': 2, 'choice_id__1': 8, 'custom_input__1': None, 'user_id__1': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 7, 31, 45, 294011), 'question_id__2': 3, 'choice_id__2': 13, 'custom_input__2': None, 'user_id__2': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 7, 31, 45, 294023), 'question_id__3': 4, 'choice_id__3': 21, 'custom_input__3': None, 'user_id__3': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 7, 31, 45, 294038), 'question_id__4': 5, 'choice_id__4': 26, 'custom_input__4': None, 'user_id__4': '1', 'submitted_at__5': datetime.datetime(2025, 7, 14, 7, 31, 45, 294048), 'question_id__5': 1, 'choice_id__5': 1, 'custom_input__5': None, 'user_id__5': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 7, 31, 45, 294057), 'question_id__6': 2, 'choice_id__6': 9, 'custom_input__6': None, 'user_id__6': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 7, 31, 45, 294067), 'question_id__7': 3, 'choice_id__7': 16, 'custom_input__7': None, 'user_id__7': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 7, 31, 45, 294077), 'question_id__8': 4, 'choice_id__8': 20, 'custom_input__8': None, 'user_id__8': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 7, 31, 45, 294088), 'question_id__9': 5, 'choice_id__9': 25, 'custom_input__9': None, 'user_id__9': '2'}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'memo__12': '너에 대한 애정이 넘쳤어.', 'emotion__12': '애정' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__14': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2'}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'image_url__0': None, 'embed_index__0': None, 'has_image__0': 0, 'couple_id__0': '1', 'is_delivered__0': 1, 'deleted_at__0': None, 'user_id__0': '1', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'image_url__1': None, 'embed_index__1': None, 'has_image__1': 0, 'couple_id__1': '1', 'is_delivered__1': 1, 'deleted_at__1': None, 'user_id__1': '2', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'image_url__2': None, 'embed_index__2': None, 'has_image__2': 0, 'couple_id__2': '1', 'is_delivered__2': 1, 'deleted_at__2': None, 'user_id__2': '1', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'image_url__3': None, 'embed_index__3': None, 'has_image__3': 0, 'couple_id__3': '1', 'is_delivered__3': 1, 'deleted_at__3': None, 'user_id__3': '2', 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'image_url__4': None, 'embed_index__4': None, 'has_image__4': 0, 'couple_id__4': '1', 'is_delivered__4': 1, 'deleted_at__4': None, 'user_id__4': '2', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'image_url__5': None, 'embed_index__5': None, 'has_image__5': 0 ... 170 parameters truncated ... 'has_image__24': 0, 'couple_id__24': '1', 'is_delivered__24': 1, 'deleted_at__24': None, 'user_id__24': '1', 'content__25': '나도야~ 🥰', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'image_url__25': None, 'embed_index__25': None, 'has_image__25': 0, 'couple_id__25': '1', 'is_delivered__25': 1, 'deleted_at__25': None, 'user_id__25': '2', 'content__26': '일주일 진짜 빠르다', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'image_url__26': None, 'embed_index__26': None, 'has_image__26': 0, 'couple_id__26': '1', 'is_delivered__26': 1, 'deleted_at__26': None, 'user_id__26': '1', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'image_url__27': None, 'embed_index__27': None, 'has_image__27': 0, 'couple_id__27': '1', 'is_delivered__27': 1, 'deleted_at__27': None, 'user_id__27': '2', 'content__28': '너 있어서 든든했어', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'image_url__28': None, 'embed_index__28': None, 'has_image__28': 0, 'couple_id__28': '1', 'is_delivered__28': 1, 'deleted_at__28': None, 'user_id__28': '1', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'image_url__29': None, 'embed_index__29': None, 'has_image__29': 0, 'couple_id__29': '1', 'is_delivered__29': 1, 'deleted_at__29': None, 'user_id__29': '2'}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 16:31:45][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1'}
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:31:47][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:31:47][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 16:31:47][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:31:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, often expressing affection through words. When conflicts arise, they prefer to cool off before discu ... (121 characters truncated) ... ense of closeness through regular interaction. For 지민, an ideal relationship is one where a deep connection is prioritized and nurtured continuously.', 'created_at': datetime.datetime(2025, 7, 14, 7, 31, 47, 788351), 'updated_at': datetime.datetime(2025, 7, 14, 7, 31, 47, 788354)}
[2025-07-14 16:31:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:47][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 16:31:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:47][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 16:31:47][INFO][sqlalchemy.engine.Engine] [cached since 1.944s ago] {'user_id_1': '2'}
[2025-07-14 16:31:47][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:47][INFO][sqlalchemy.engine.Engine] [cached since 1.944s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:31:49][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] [cached since 2.028s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] [cached since 2.028s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, prioritizing honesty and reliability. In times of conflict, she prefers to wait and give situ ... (294 characters truncated) ... . Ideally, 수아 seeks a relationship that balances independence with closeness, allowing both partners to grow individually while nurturing their bond.', 'created_at': datetime.datetime(2025, 7, 14, 7, 31, 49, 815815), 'updated_at': datetime.datetime(2025, 7, 14, 7, 31, 49, 815822)}
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:49][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 16:31:49][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 16:31:49][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:31:49][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 1 커플 분석 시작 (2025-07-02 04:00:00)
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:31:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00034s] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 1, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 2, 4, 0)}
[2025-07-14 16:31:54][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 1, 0, 0), 'param_1': 1}
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 1, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["이따 끝나고 연락하자~"], "배려_횟수": 1, "배려_샘플": ["오늘도 힘내자! 😊"], "적극_횟수": 0, "적 ... (209 characters truncated) ... ], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 주로 격려와 배려를 표현하며 하루를 시작했고, user_2는 적극적으로 대화를 이어갔습니다. 둘 다 바쁜 하루를 보낼 예정이었으나 저녁에 통화를 약속하며 서로의 일정을 배려했습니다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 31, 54, 360395), 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 54, 360395)}
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 1의 2025-07-01 분석 저장 완료
[2025-07-14 16:31:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-02 04:00:00)] 전체 분석 완료
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] [cached since 4.541s ago] {}
[2025-07-14 16:31:54][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 1 커플 분석 시작 (2025-07-03 04:00:00)
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:31:54][INFO][sqlalchemy.engine.Engine] [cached since 4.537s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 2, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 3, 4, 0)}
[2025-07-14 16:31:57][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] [cached since 3.615s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 2, 0, 0), 'param_1': 1}
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] [cached since 3.614s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 2, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 1, "적극_샘플": ["오늘은 꼭 먼저 연락할게!"], ... (249 characters truncated) ... ]}}, "요약": "user_1은 약속을 지키지 못한 것에 대한 미안함을 표현하며, 다음에는 먼저 연락하겠다는 적극성을 보였다. user_2는 연락이 없어 서운한 감정을 드러냈다. 전반적으로 user_1의 사과와 user_2의 서운함 표출이 두드러진 하루였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 31, 57, 974836), 'modified_at': datetime.datetime(2025, 7, 14, 7, 31, 57, 974836)}
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:31:57][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 1의 2025-07-02 분석 저장 완료
[2025-07-14 16:31:57][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-03 04:00:00)] 전체 분석 완료
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] [cached since 8.16s ago] {}
[2025-07-14 16:31:57][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 1 커플 분석 시작 (2025-07-04 04:00:00)
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:31:57][INFO][sqlalchemy.engine.Engine] [cached since 8.155s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 3, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 4, 4, 0)}
[2025-07-14 16:32:02][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] [cached since 8.147s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 3, 0, 0), 'param_1': 1}
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] [cached since 8.146s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 3, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["완전 좋지! 기다릴게 ❤️"], "배려_횟수": 2, "배려_샘플": ["오늘은 기분 좀 어때?", "나도 더 신경 쓸게 ... (238 characters truncated) ... _횟수": 1, "갈등_샘플": ["나도 어제 너무 예민했나봐~"]}}, "요약": "user_1은 배려와 애정 표현을 통해 관계를 따듯하게 유지하려 했으며, user_2는 산책 제안을 통해 적극적인 모습을 보였다. 전반적으로 관계를 개선하려는 노력이 돋보였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 32, 2, 507042), 'modified_at': datetime.datetime(2025, 7, 14, 7, 32, 2, 507042)}
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:32:02][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 1의 2025-07-03 분석 저장 완료
[2025-07-14 16:32:02][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-04 04:00:00)] 전체 분석 완료
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] [cached since 12.69s ago] {}
[2025-07-14 16:32:02][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 1 커플 분석 시작 (2025-07-05 04:00:00)
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:32:02][INFO][sqlalchemy.engine.Engine] [cached since 12.69s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 4, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 5, 4, 0)}
[2025-07-14 16:32:07][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] [cached since 13.07s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 4, 0, 0), 'param_1': 1}
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] [cached since 13.07s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 4, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려_횟수": 0, "격려 ... (106 characters truncated) ... 수": 0, "적극_샘플": [], "격려_횟수": 0, "격려_샘플": [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "주로 음식에 대한 대화를 나누며 서로의 입맛에 대한 공감을 표현했다. 특별한 감정 표현이나 갈등이 없었던 것으로 보인다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 32, 7, 434068), 'modified_at': datetime.datetime(2025, 7, 14, 7, 32, 7, 434068)}
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:32:07][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 1의 2025-07-04 분석 저장 완료
[2025-07-14 16:32:07][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-05 04:00:00)] 전체 분석 완료
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] [cached since 17.62s ago] {}
[2025-07-14 16:32:07][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 1 커플 분석 시작 (2025-07-06 04:00:00)
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:32:07][INFO][sqlalchemy.engine.Engine] [cached since 17.62s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 5, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 6, 4, 0)}
[2025-07-14 16:32:14][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] [cached since 18.48s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 5, 0, 0), 'param_1': 1}
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] [cached since 18.48s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 5, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 0, "애정표현_샘플": [], "배려_횟수": 1, "배려_샘플": ["앞으론 짧게라도 꼭 답할게!"], "적극_횟수": 1, "적극_샘플": [" ... (272 characters truncated) ... 느껴졌어"]}}, "요약": "user_2가 주로 갈등을 제기했고, user_1이 이를 수용하고 개선하기 위해 노력했습니다. user_1은 배려와 적극적인 태도를 보이며 관계를 개선하려 했습니다. 전체적으로 감정 표현보다는 개선을 위한 대화가 주를 이루었습니다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 32, 14, 621820), 'modified_at': datetime.datetime(2025, 7, 14, 7, 32, 14, 621820)}
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:32:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 1의 2025-07-05 분석 저장 완료
[2025-07-14 16:32:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-06 04:00:00)] 전체 분석 완료
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] [cached since 23.02s ago] {}
[2025-07-14 16:32:14][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 1 커플 분석 시작 (2025-07-07 04:00:00)
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:32:14][INFO][sqlalchemy.engine.Engine] [cached since 23.02s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 6, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 7, 4, 0)}
[2025-07-14 16:32:19][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] [cached since 23.05s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 6, 0, 0), 'param_1': 1}
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] [cached since 23.05s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 6, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 2, "애정표현_샘플": ["너랑 시간 보내는 거 제일 좋아", "오늘 영화 예매했어~ 7시 타임!"], "배려_횟수": 0, "배려_샘플": [], ... (208 characters truncated) ... : [], "격려_횟수": 0, "격려_샘플": [], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1은 애정표현과 적극적인 준비를 주도했고, user_2도 애정표현에 함께 참여했다. 두 사람 모두 긍정적인 감정을 나누며 하루를 보냈다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 32, 19, 191192), 'modified_at': datetime.datetime(2025, 7, 14, 7, 32, 19, 191192)}
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:32:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 1의 2025-07-06 분석 저장 완료
[2025-07-14 16:32:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-07 04:00:00)] 전체 분석 완료
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] [cached since 27.6s ago] {}
[2025-07-14 16:32:19][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 1 커플 분석 시작 (2025-07-08 04:00:00)
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] SELECT messages.chat_id AS messages_chat_id, messages.user_id AS messages_user_id, messages.couple_id AS messages_couple_id, messages.content AS messages_content, messages.image_url AS messages_image_url, messages.has_image AS messages_has_image, messages.created_at AS messages_created_at, messages.deleted_at AS messages_deleted_at, messages.is_delivered AS messages_is_delivered, messages.embed_index AS messages_embed_index 
FROM messages 
WHERE messages.couple_id = %(couple_id_1)s AND messages.created_at >= %(created_at_1)s AND messages.created_at < %(created_at_2)s ORDER BY messages.created_at
[2025-07-14 16:32:19][INFO][sqlalchemy.engine.Engine] [cached since 27.59s ago] {'couple_id_1': '1', 'created_at_1': datetime.datetime(2025, 7, 7, 4, 0), 'created_at_2': datetime.datetime(2025, 7, 8, 4, 0)}
[2025-07-14 16:32:22][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date = %(date_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 25.94s ago] {'couple_id_1': '1', 'date_1': datetime.datetime(2025, 7, 7, 0, 0), 'param_1': 1}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_daily_analysis_results (couple_id, date, result, created_at, modified_at) VALUES (%(couple_id)s, %(date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 25.94s ago] {'couple_id': '1', 'date': datetime.datetime(2025, 7, 7, 0, 0), 'result': '{"success": true, "result": {"user_stats": {"user_1": {"애정표현_횟수": 1, "애정표현_샘플": ["너 있어서 든든했어"], "배려_횟수": 0, "배려_샘플": [], "적극_횟수": 0, "적극_샘플": [], "격려 ... (173 characters truncated) ...  잘 지내보자!"], "갈등_횟수": 0, "갈등_샘플": []}}, "요약": "user_1과 user_2는 서로에게 애정 표현을 하며 하루를 마무리했다. user_2는 다음 주에 대한 긍정적인 메시지로 격려했다. 전반적으로 긍정적인 대화로 가득 찬 하루였다."}}', 'created_at': datetime.datetime(2025, 7, 14, 7, 32, 22, 81953), 'modified_at': datetime.datetime(2025, 7, 14, 7, 32, 22, 81953)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:32:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 1의 2025-07-07 분석 저장 완료
[2025-07-14 16:32:22][INFO][jobs.daily_analysis] [커플 일간분석 (테스트: 2025-07-08 04:00:00)] 전체 분석 완료
[2025-07-14 16:32:22][INFO][root] 유저 couple chat 분석 완료
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 30.49s ago] {}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.002361s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.006865s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 8), 'created_at_2': datetime.date(2025, 7, 15)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.006205s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 8), 'created_at_2': datetime.date(2025, 7, 15)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.008137s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 8), 'created_at_2': datetime.date(2025, 7, 15)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.01259s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 15), 'created_at_2': datetime.date(2025, 7, 22)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.01197s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 15), 'created_at_2': datetime.date(2025, 7, 22)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.01418s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 15), 'created_at_2': datetime.date(2025, 7, 22)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.01866s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 22), 'created_at_2': datetime.date(2025, 7, 29)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.01795s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 22), 'created_at_2': datetime.date(2025, 7, 29)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.01989s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 22), 'created_at_2': datetime.date(2025, 7, 29)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.02442s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 29), 'created_at_2': datetime.date(2025, 8, 5)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.02415s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 29), 'created_at_2': datetime.date(2025, 8, 5)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.02626s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 29), 'created_at_2': datetime.date(2025, 8, 5)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.03098s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 8, 5), 'created_at_2': datetime.date(2025, 8, 12)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.03045s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 8, 5), 'created_at_2': datetime.date(2025, 8, 12)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.0324s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 8, 5), 'created_at_2': datetime.date(2025, 8, 12)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.03693s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 8, 12), 'created_at_2': datetime.date(2025, 8, 19)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.03649s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 8, 12), 'created_at_2': datetime.date(2025, 8, 19)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] [cached since 0.03835s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 8, 12), 'created_at_2': datetime.date(2025, 8, 19)}
[2025-07-14 16:32:22][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:32:22][INFO][root] 주간 분석 완료
[2025-07-14 16:37:15][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:37:15][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:37:15][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.002282s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.00907s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 8), 'created_at_2': datetime.date(2025, 7, 15)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.005573s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 8), 'created_at_2': datetime.date(2025, 7, 15)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.007325s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 8), 'created_at_2': datetime.date(2025, 7, 15)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.01444s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 15), 'created_at_2': datetime.date(2025, 7, 22)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.01129s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 15), 'created_at_2': datetime.date(2025, 7, 22)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.01343s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 15), 'created_at_2': datetime.date(2025, 7, 22)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.02072s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 22), 'created_at_2': datetime.date(2025, 7, 29)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.01767s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 22), 'created_at_2': datetime.date(2025, 7, 29)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.01968s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 22), 'created_at_2': datetime.date(2025, 7, 29)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.02669s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 29), 'created_at_2': datetime.date(2025, 8, 5)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.02356s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 29), 'created_at_2': datetime.date(2025, 8, 5)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.02545s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 29), 'created_at_2': datetime.date(2025, 8, 5)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.03243s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 8, 5), 'created_at_2': datetime.date(2025, 8, 12)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.02957s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 8, 5), 'created_at_2': datetime.date(2025, 8, 12)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.03185s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 8, 5), 'created_at_2': datetime.date(2025, 8, 12)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.03904s ago] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 8, 12), 'created_at_2': datetime.date(2025, 8, 19)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.03575s ago] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 8, 12), 'created_at_2': datetime.date(2025, 8, 19)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] [cached since 0.03754s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 8, 12), 'created_at_2': datetime.date(2025, 8, 19)}
[2025-07-14 16:37:15][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:15][INFO][root] 주간 분석 완료
[2025-07-14 16:37:36][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:37:36][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:37:36][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] [cached since 0.002377s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:37:36][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:37:36][INFO][root] 주간 분석 완료
[2025-07-14 16:38:50][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:38:50][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:38:50][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] [cached since 0.002459s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:38:50][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:38:50][INFO][root] 주간 분석 완료
[2025-07-14 16:40:00][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:40:00][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:40:00][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] [cached since 0.002121s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:40:00][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:40:00][INFO][root] 주간 분석 완료
[2025-07-14 16:41:04][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:41:04][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:41:04][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT couple_chat_summaries.id AS couple_chat_summaries_id, couple_chat_summaries.couple_id AS couple_chat_summaries_couple_id, couple_chat_summaries.summary AS couple_chat_summaries_summary, couple_chat_summaries.emb_id AS couple_chat_summaries_emb_id, couple_chat_summaries.created_at AS couple_chat_summaries_created_at 
FROM couple_chat_summaries 
WHERE couple_chat_summaries.couple_id = %(couple_id_1)s AND couple_chat_summaries.created_at >= %(created_at_1)s AND couple_chat_summaries.created_at < %(created_at_2)s ORDER BY couple_chat_summaries.created_at
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] [cached since 0.002246s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:41:04][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:41:04][INFO][root] 주간 분석 완료
[2025-07-14 16:41:48][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:41:48][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:41:48][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:41:48][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:41:48][ERROR][root] 주간 분석 실패: type object 'CoupleChatSummary' has no attribute 'date'
[2025-07-14 16:44:08][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:44:08][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:44:08][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] {}
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:44:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_weekly_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	week_start_date DATETIME NOT NULL, 
	week_end_date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:44:09][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:44:09][ERROR][root] 주간 분석 실패: type object 'CoupleChatSummary' has no attribute 'date'
[2025-07-14 16:44:38][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:44:38][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:44:38][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date >= %(date_1)s AND couple_daily_analysis_results.date < %(date_2)s ORDER BY couple_daily_analysis_results.created_at
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'couple_id_1': '1', 'date_1': datetime.date(2025, 7, 1), 'date_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] [cached since 0.00246s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:44:38][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:44:38][INFO][root] 주간 분석 완료
[2025-07-14 16:47:12][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:47:13][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:47:13][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date >= %(date_1)s AND couple_daily_analysis_results.date < %(date_2)s ORDER BY couple_daily_analysis_results.created_at
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'couple_id_1': '1', 'date_1': datetime.date(2025, 7, 1), 'date_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] [cached since 0.00272s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:47:13][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:47:13][INFO][root] 주간 분석 완료
[2025-07-14 16:51:33][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:51:33][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:51:33][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00043s] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date >= %(date_1)s AND couple_daily_analysis_results.date < %(date_2)s ORDER BY couple_daily_analysis_results.created_at
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id_1': '1', 'date_1': datetime.date(2025, 7, 1), 'date_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] [cached since 0.002414s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:51:34][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:51:34][ERROR][services.ai.analyzer_langchain] [aggregate_weekly_stats] 집계 에러: 'user_stats' | daily_stats=[{'success': True, 'result': {'user_stats': {'user_1': {'애정표현_횟수': 1, '애정표현_샘플': ['이따 끝나고 연락하자~'], '배려_횟수': 1, '배려_샘플': ['오늘도 힘내자! 😊'], '적극_횟수': 0, '적극_샘플': [], '격려_횟수': 1, '격려_샘플': ['오늘도 힘내자! 😊'], '갈등_횟수': 0, '갈등_샘플': []}, 'user_2': {'애정표현_횟수': 0, '애정표현_샘플': [], '배려_횟수': 0, '배려_샘플': [], '적극_횟수': 2, '적극_샘플': ['좋아!', '우리 저녁엔 통화하자 :)'], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 0, '갈등_샘플': []}}, '요약': 'user_1은 주로 격려와 배려를 표현하며 하루를 시작했고, user_2는 적극적으로 대화를 이어갔습니다. 둘 다 바쁜 하루를 보낼 예정이었으나 저녁에 통화를 약속하며 서로의 일정을 배려했습니다.'}}, {'success': True, 'result': {'user_stats': {'user_1': {'애정표현_횟수': 0, '애정표현_샘플': [], '배려_횟수': 0, '배려_샘플': [], '적극_횟수': 1, '적극_샘플': ['오늘은 꼭 먼저 연락할게!'], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 1, '갈등_샘플': ['미안… 회의 끝나고 뻗어버렸어 ㅠ']}, 'user_2': {'애정표현_횟수': 0, '애정표현_샘플': [], '배려_횟수': 0, '배려_샘플': [], '적극_횟수': 0, '적극_샘플': [], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 2, '갈등_샘플': ['어제 약속했는데 통화 못했네 😕', '기다렸는데 연락 없어서 속상했어']}}, '요약': 'user_1은 약속을 지키지 못한 것에 대한 미안함을 표현하며, 다음에는 먼저 연락하겠다는 적극성을 보였다. user_2는 연락이 없어 서운한 감정을 드러냈다. 전반적으로 user_1의 사과와 user_2의 서운함 표출이 두드러진 하루였다.'}}, {'success': True, 'result': {'user_stats': {'user_1': {'애정표현_횟수': 1, '애정표현_샘플': ['완전 좋지! 기다릴게 ❤️'], '배려_횟수': 2, '배려_샘플': ['오늘은 기분 좀 어때?', '나도 더 신경 쓸게'], '적극_횟수': 0, '적극_샘플': [], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 0, '갈등_샘플': []}, 'user_2': {'애정표현_횟수': 0, '애정표현_샘플': [], '배려_횟수': 1, '배려_샘플': ['괜찮아! 나도 어제 너무 예민했나봐~'], '적극_횟수': 1, '적극_샘플': ['우리 오늘 저녁에 산책 어때?'], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 1, '갈등_샘플': ['나도 어제 너무 예민했나봐~']}}, '요약': 'user_1은 배려와 애정 표현을 통해 관계를 따듯하게 유지하려 했으며, user_2는 산책 제안을 통해 적극적인 모습을 보였다. 전반적으로 관계를 개선하려는 노력이 돋보였다.'}}, {'success': True, 'result': {'user_stats': {'user_1': {'애정표현_횟수': 0, '애정표현_샘플': [], '배려_횟수': 0, '배려_샘플': [], '적극_횟수': 0, '적극_샘플': [], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 0, '갈등_샘플': []}, 'user_2': {'애정표현_횟수': 0, '애정표현_샘플': [], '배려_횟수': 0, '배려_샘플': [], '적극_횟수': 0, '적극_샘플': [], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 0, '갈등_샘플': []}}, '요약': '주로 음식에 대한 대화를 나누며 서로의 입맛에 대한 공감을 표현했다. 특별한 감정 표현이나 갈등이 없었던 것으로 보인다.'}}, {'success': True, 'result': {'user_stats': {'user_1': {'애정표현_횟수': 0, '애정표현_샘플': [], '배려_횟수': 1, '배려_샘플': ['앞으론 짧게라도 꼭 답할게!'], '적극_횟수': 1, '적극_샘플': ['앞으론 짧게라도 꼭 답할게!'], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 1, '갈등_샘플': ['미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐']}, 'user_2': {'애정표현_횟수': 0, '애정표현_샘플': [], '배려_횟수': 0, '배려_샘플': [], '적극_횟수': 0, '적극_샘플': [], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 2, '갈등_샘플': ['오늘 카톡 답 너무 느렸던 거 알아?', '그래도 너무 무신경하게 느껴졌어']}}, '요약': 'user_2가 주로 갈등을 제기했고, user_1이 이를 수용하고 개선하기 위해 노력했습니다. user_1은 배려와 적극적인 태도를 보이며 관계를 개선하려 했습니다. 전체적으로 감정 표현보다는 개선을 위한 대화가 주를 이루었습니다.'}}, {'success': True, 'result': {'user_stats': {'user_1': {'애정표현_횟수': 2, '애정표현_샘플': ['너랑 시간 보내는 거 제일 좋아', '오늘 영화 예매했어~ 7시 타임!'], '배려_횟수': 0, '배려_샘플': [], '적극_횟수': 1, '적극_샘플': ['오늘 영화 예매했어~ 7시 타임!'], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 0, '갈등_샘플': []}, 'user_2': {'애정표현_횟수': 2, '애정표현_샘플': ['오늘은 너한테 집중할게 ❤️', '나도야~ 🥰'], '배려_횟수': 0, '배려_샘플': [], '적극_횟수': 0, '적극_샘플': [], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 0, '갈등_샘플': []}}, '요약': 'user_1은 애정표현과 적극적인 준비를 주도했고, user_2도 애정표현에 함께 참여했다. 두 사람 모두 긍정적인 감정을 나누며 하루를 보냈다.'}}, {'success': True, 'result': {'user_stats': {'user_1': {'애정표현_횟수': 1, '애정표현_샘플': ['너 있어서 든든했어'], '배려_횟수': 0, '배려_샘플': [], '적극_횟수': 0, '적극_샘플': [], '격려_횟수': 0, '격려_샘플': [], '갈등_횟수': 0, '갈등_샘플': []}, 'user_2': {'애정표현_횟수': 1, '애정표현_샘플': ['사랑해 😘'], '배려_횟수': 0, '배려_샘플': [], '적극_횟수': 0, '적극_샘플': [], '격려_횟수': 1, '격려_샘플': ['다음 주도 잘 지내보자!'], '갈등_횟수': 0, '갈등_샘플': []}}, '요약': 'user_1과 user_2는 서로에게 애정 표현을 하며 하루를 마무리했다. user_2는 다음 주에 대한 긍정적인 메시지로 격려했다. 전반적으로 긍정적인 대화로 가득 찬 하루였다.'}}]
[2025-07-14 16:51:45][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:51:45][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Invalid json output: 이번 주 커플의 대화 분석을 진행하는 데 필요한 통계 데이터에 오류가 발생하여 구체적인 감정별 통계 분석을 제공하기 어렵습니다. 그러나 일반적인 커플의 대화에서 주목할 수 있는 요소들을 바탕으로 분석을 진행해보겠습니다.

1. **전반적 분위기**: 감정 통계가 제공되지 않았기 때문에 구체적인 분위기를 파악하기는 어려우나, 대화에서 애정표현과 배려가 자주 나타난다면 긍정적일 가능성이 높습니다.

2. **긍정 이슈**: 만약 대화에서 상대방을 격려하거나 지원하는 문장이 많았다면, 이번 주에 서로에게 긍정적인 영향을 미쳤을 것입니다.

3. **부정 이슈**: 갈등이 언급되었거나 부정적인 표현이 많았다면, 주의가 필요할 수 있습니다.

4. **성장 변화**: 적극적으로 대화를 이끌고 서로의 의견을 존중하는 모습이 있었다면, 관계가 긍정적으로 성장하고 있음을 나타냅니다.

5. **위험 변화**: 반대로, 대화에서 갈등이 반복되거나 해결되지 않은 문제가 계속 언급된다면, 관계의 위기 가능성을 시사합니다.

데이터 오류로 인해 구체적인 분석이 이루어지지 못했지만, 이러한 일반적인 요소들을 통해 커플의 주간 대화 분위기를 파악할 수 있습니다. 데이터가 수정되면 보다 명확한 분석이 가능할 것입니다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE , 입력: {'couple_weekly': '{"error": "주간 통계 집계 에러", "detail": "\'user_stats\'"}'}
[2025-07-14 16:51:45][WARNING][services.ai.weekly_analysis_pipeline] [WeeklyAnalysis] 커플_주간분석 실패: Invalid json output: 이번 주 커플의 대화 분석을 진행하는 데 필요한 통계 데이터에 오류가 발생하여 구체적인 감정별 통계 분석을 제공하기 어렵습니다. 그러나 일반적인 커플의 대화에서 주목할 수 있는 요소들을 바탕으로 분석을 진행해보겠습니다.

1. **전반적 분위기**: 감정 통계가 제공되지 않았기 때문에 구체적인 분위기를 파악하기는 어려우나, 대화에서 애정표현과 배려가 자주 나타난다면 긍정적일 가능성이 높습니다.

2. **긍정 이슈**: 만약 대화에서 상대방을 격려하거나 지원하는 문장이 많았다면, 이번 주에 서로에게 긍정적인 영향을 미쳤을 것입니다.

3. **부정 이슈**: 갈등이 언급되었거나 부정적인 표현이 많았다면, 주의가 필요할 수 있습니다.

4. **성장 변화**: 적극적으로 대화를 이끌고 서로의 의견을 존중하는 모습이 있었다면, 관계가 긍정적으로 성장하고 있음을 나타냅니다.

5. **위험 변화**: 반대로, 대화에서 갈등이 반복되거나 해결되지 않은 문제가 계속 언급된다면, 관계의 위기 가능성을 시사합니다.

데이터 오류로 인해 구체적인 분석이 이루어지지 못했지만, 이러한 일반적인 요소들을 통해 커플의 주간 대화 분위기를 파악할 수 있습니다. 데이터가 수정되면 보다 명확한 분석이 가능할 것입니다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE  | 입력={"error": "주간 통계 집계 에러", "detail": "'user_stats'"} | LLM응답 일부=null
[2025-07-14 16:51:49][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:51:57][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:52:00][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:52:03][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:52:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:52:03][INFO][sqlalchemy.engine.Engine] INSERT INTO weekly_solutions (user_id, content, created_at) VALUES (%(user_id__0)s, %(content__0)s, %(created_at__0)s), (%(user_id__1)s, %(content__1)s, %(created_at__1)s) RETURNING weekly_solutions.id, weekly_solutions.id AS id__1
[2025-07-14 16:52:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'content__0': '이번 주 사용자는 다양한 감정을 경험했으며, 주된 감정은 불안과 스트레스였습니다. 상담 주제로는 직장 내 인간관계와 개인적 성장에 대한 고민이 두드러졌습니다. 긍정적인 발화는 주로 새로운 도전과 성취에 대한 기대감이었으며, 부정적인 발화는 실패에 대한 두려움과 자존감 ... (75 characters truncated) ...  사용자는 새로운 변화에 대한 도전 의지를 보여주었으나, 동시에 실패에 대한 두려움을 극복할 필요가 있습니다. 성장 신호로는 자기 성찰과 긍정적인 변화를 위한 구체적인 계획 수립이 관찰되었습니다. 위험 신호로는 갑작스러운 감정 기복과 부정적인 자기 대화가 있었습니다.', 'created_at__0': datetime.datetime(2025, 7, 14, 7, 52, 3, 364027), 'user_id__1': '2', 'content__1': "이번 주 사용자의 대표 감정은 주로 불안과 스트레스였습니다. 주요 상담 주제는 직장 내 갈등과 대인관계에서의 어려움이었습니다. 긍정 발화는 10회로, '어제보다 조금 나아진 것 같다'와 같은 표현이 있었으며, 부정 발화는 25회로, '모든 게 너무 힘들다'와 같은 심 ... (13 characters truncated) ... 다. 중요 신호로는 '퇴사를 심각하게 고려 중'이라는 말이 있었으며, 이는 즉각적인 주의가 필요합니다. 사용자는 상담을 통해 자신의 감정을 더 잘 이해하게 되었고, 대처 방법에 대한 조언을 얻었지만, 여전히 높은 스트레스 상황에 놓여 있어 지속적인 지지가 필요합니다.", 'created_at__1': datetime.datetime(2025, 7, 14, 7, 52, 3, 364027)}
[2025-07-14 16:52:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:52:03][INFO][root] 주간 분석 완료
[2025-07-14 16:53:08][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:53:08][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:53:08][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date >= %(date_1)s AND couple_daily_analysis_results.date < %(date_2)s ORDER BY couple_daily_analysis_results.created_at
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': '1', 'date_1': datetime.date(2025, 7, 1), 'date_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] [cached since 0.00242s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:53:08][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:53:17][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:53:17][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Invalid json output: 이번 주 커플의 전반적인 분위기는 양측의 애정 표현이 고르게 분포되어 있으며, 주 후반으로 갈수록 긍정적인 상호작용이 증가하고 있다. 특히, 주말에 두 사람 모두 애정 표현이 증가하며 관계가 더욱 가까워지는 모습을 보인다. 그러나, 초반부에는 일정한 갈등이 존재했으며, 특히 User 2의 갈등 횟수가 상대적으로 높았다. 이는 주로 연락이 제대로 이루어지지 않거나 약속이 지켜지지 않음에서 기인했다.

긍정적인 이슈로는 서로를 배려하고 격려하는 대화가 포함되어 있으며, 이는 두 사람 모두 관계를 유지하고자 하는 의지를 나타낸다. 반면, 부정적인 이슈는 커뮤니케이션 미스와 관련된 갈등으로, 이를 통해 두 사람의 관계에서의 위험 요소를 엿볼 수 있다.

성장 측면에서는 주 후반으로 갈수록 서로에게 집중하고 애정 표현을 늘리는 등 긍정적인 변화가 뚜렷하며, 이는 관계의 안정성을 높이는 데 기여할 것이다. 그러나, 위험 요소로는 여전히 존재하는 커뮤니케이션 문제를 해결해야 할 필요성이 있다. 이를 통해 두 사람은 더욱 건강하고 안정적인 관계로 발전할 수 있을 것이다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE , 입력: {'couple_weekly': '{"user_stats": {"user_1": {"애정표현_횟수": [1, 0, 1, 0, 0, 2, 1], "애정표현_전체샘플": [["이따 끝나고 연락하자~"], [], ["완전 좋지! 기다릴게 ❤️"], [], [], ["너랑 시간 보내는 거 제일 좋아", "오늘 영화 예매했어~ 7시 타임!"], ["너 있어서 든든했어"]], "배려_횟수": [1, 0, 2, 0, 1, 0, 0], "배려_전체샘플": [["오늘도 힘내자! 😊"], [], ["오늘은 기분 좀 어때?", "나도 더 신경 쓸게"], [], ["앞으론 짧게라도 꼭 답할게!"], [], []], "적극_횟수": [0, 1, 0, 0, 1, 1, 0], "적극_전체샘플": [[], ["오늘은 꼭 먼저 연락할게!"], [], [], ["앞으론 짧게라도 꼭 답할게!"], ["오늘 영화 예매했어~ 7시 타임!"], []], "격려_횟수": [1, 0, 0, 0, 0, 0, 0], "격려_전체샘플": [["오늘도 힘내자! 😊"], [], [], [], [], [], []], "갈등_횟수": [0, 1, 0, 0, 1, 0, 0], "갈등_전체샘플": [[], ["미안… 회의 끝나고 뻗어버렸어 ㅠ"], [], [], ["미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐"], [], []]}, "user_2": {"애정표현_횟수": [0, 0, 0, 0, 0, 2, 1], "애정표현_전체샘플": [[], [], [], [], [], ["오늘은 너한테 집중할게 ❤️", "나도야~ 🥰"], ["사랑해 😘"]], "배려_횟수": [0, 0, 1, 0, 0, 0, 0], "배려_전체샘플": [[], [], ["괜찮아! 나도 어제 너무 예민했나봐~"], [], [], [], []], "적극_횟수": [2, 0, 1, 0, 0, 0, 0], "적극_전체샘플": [["좋아!", "우리 저녁엔 통화하자 :)"], [], ["우리 오늘 저녁에 산책 어때?"], [], [], [], []], "격려_횟수": [0, 0, 0, 0, 0, 0, 1], "격려_전체샘플": [[], [], [], [], [], [], ["다음 주도 잘 지내보자!"]], "갈등_횟수": [0, 2, 1, 0, 2, 0, 0], "갈등_전체샘플": [[], ["어제 약속했는데 통화 못했네 😕", "기다렸는데 연락 없어서 속상했어"], ["나도 어제 너무 예민했나봐~"], [], ["오늘 카톡 답 너무 느렸던 거 알아?", "그래도 너무 무신경하게 느껴졌어"], [], []]}}, "요약리스트": ["", "", "", "", "", "", ""]}'}
[2025-07-14 16:53:17][WARNING][services.ai.weekly_analysis_pipeline] [WeeklyAnalysis] 커플_주간분석 실패: Invalid json output: 이번 주 커플의 전반적인 분위기는 양측의 애정 표현이 고르게 분포되어 있으며, 주 후반으로 갈수록 긍정적인 상호작용이 증가하고 있다. 특히, 주말에 두 사람 모두 애정 표현이 증가하며 관계가 더욱 가까워지는 모습을 보인다. 그러나, 초반부에는 일정한 갈등이 존재했으며, 특히 User 2의 갈등 횟수가 상대적으로 높았다. 이는 주로 연락이 제대로 이루어지지 않거나 약속이 지켜지지 않음에서 기인했다.

긍정적인 이슈로는 서로를 배려하고 격려하는 대화가 포함되어 있으며, 이는 두 사람 모두 관계를 유지하고자 하는 의지를 나타낸다. 반면, 부정적인 이슈는 커뮤니케이션 미스와 관련된 갈등으로, 이를 통해 두 사람의 관계에서의 위험 요소를 엿볼 수 있다.

성장 측면에서는 주 후반으로 갈수록 서로에게 집중하고 애정 표현을 늘리는 등 긍정적인 변화가 뚜렷하며, 이는 관계의 안정성을 높이는 데 기여할 것이다. 그러나, 위험 요소로는 여전히 존재하는 커뮤니케이션 문제를 해결해야 할 필요성이 있다. 이를 통해 두 사람은 더욱 건강하고 안정적인 관계로 발전할 수 있을 것이다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE  | 입력={"user_stats": {"user_1": {"애정표현_횟수": [1, 0, 1, 0, 0, 2, 1], "애정표현_전체샘플": [["이따 끝나고 연락하자~"], [], ["완전 좋지! 기다릴게 ❤️"], [], [], ["너랑 시간 보내는 거 제일 좋아", "오늘 영화 예매했어~ 7시 타임!"], ["너 있어서 든든했어"]], "배려_횟수": [1, 0, 2, 0, 1, 0, 0], "배려_전체샘플": [["오늘도 힘내자! 😊"], [], ["오늘은 기분 좀 어때?", "나도 더 신경 쓸게"], [], ["앞으론 짧게라도 꼭 답할게!"], [], []], "적극_횟수": [0, 1, 0, 0, 1, 1, 0], "적극_전체샘플": [[], ["오늘은 꼭 먼저 연락할게!"], [], [], ["앞으론 짧게라도 꼭 답할게!"], ["오늘 영화 예매했어~ 7시 타임!"], []], "격려_횟수": [1, 0, 0, 0, 0, 0, 0], "격려_전체샘플": [["오늘도 힘내자! 😊" ...[이하 생략] | LLM응답 일부=null
[2025-07-14 16:53:21][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:53:25][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:53:29][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:53:31][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:53:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:53:31][INFO][sqlalchemy.engine.Engine] INSERT INTO weekly_solutions (user_id, content, created_at) VALUES (%(user_id__0)s, %(content__0)s, %(created_at__0)s), (%(user_id__1)s, %(content__1)s, %(created_at__1)s) RETURNING weekly_solutions.id, weekly_solutions.id AS id__1
[2025-07-14 16:53:31][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'content__0': '이번 주 사용자는 다양한 감정을 경험하였으며, 상담에서 주로 다뤄진 주제는 스트레스와 대인관계였다. 긍정 발화보다 부정 발화의 빈도가 더 높았으며, 이는 현재 사용자가 겪고 있는 스트레스가 상당히 크다는 것을 시사한다. 주요 부정 발화 샘플에서는 직장 내 갈등과 관련 ... (68 characters truncated) ...  감정이 나타났다. 중요한 신호로는 사용자가 반복적으로 피로감을 호소하는 점이 관찰되었으며, 이는 사용자의 정신적, 신체적 건강에 대한 주의를 요한다. 전반적으로 사용자는 스트레스를 해소하기 위한 방법을 모색 중이며, 이러한 과정에서 긍정적인 변화의 가능성이 보인다.', 'user_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 14, 7, 53, 31, 506106), 'content__1': '이번 주 사용자는 주로 스트레스와 불안에 대한 고민을 가지고 있었으며, 이는 주로 직장 내 갈등과 개인적 불확실성에서 비롯된 것으로 보입니다. 사용자는 긍정적인 발화보다 부정적인 발화가 더 많았으며, 이는 사용자가 현재 직면한 문제에 대한 부담감을 반영합니다. 그러나 ... (61 characters truncated) ...  있는 것으로 보입니다. 주중에 몇 가지 위험 신호가 감지되었으나, 사용자는 이를 관리하기 위한 방법을 모색하고 있습니다. 이러한 과정에서 사용자는 자기 이해와 감정 조절 능력에서 성장을 보이고 있으며, 이는 앞으로의 긍정적인 변화를 위한 중요한 기초가 될 것입니다.', 'user_id__1': '2', 'created_at__1': datetime.datetime(2025, 7, 14, 7, 53, 31, 506106)}
[2025-07-14 16:53:31][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:53:31][INFO][root] 주간 분석 완료
[2025-07-14 16:54:16][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:54:16][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:54:16][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date >= %(date_1)s AND couple_daily_analysis_results.date < %(date_2)s ORDER BY couple_daily_analysis_results.created_at
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'couple_id_1': '1', 'date_1': datetime.date(2025, 7, 1), 'date_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] [cached since 0.002243s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:54:16][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:54:23][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:54:23][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Invalid json output: 이번 주 커플의 전반적 분위기는 긍정적인 편이었으나, 중간중간 갈등 요소가 눈에 띄었습니다. user_1은 주로 격려와 배려로 대화를 시작하며 관계를 따뜻하게 유지하려는 노력을 보였고, user_2는 적극적인 대화 참여와 애정 표현으로 화답했습니다. 초반에는 user_1의 약속 불이행에 대한 user_2의 서운함이 있었으나, user_1의 사과와 개선 의지로 갈등이 완화되었습니다. 중반부에는 서로의 일정을 배려하며 관계를 개선하려는 노력이 돋보였고, user_1이 애정 표현과 적극적 계획으로 주도적으로 관계를 이끌어갔습니다. 주말에는 양측 모두 애정 표현을 주고받으며 긍정적인 감정으로 한 주를 마무리했습니다. 전반적으로 긍정적인 대화가 많았으며, 갈등은 있었지만 이를 개선하려는 노력이 지속적으로 이루어졌습니다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE , 입력: {'couple_weekly': '{"user_stats": {"user_1": {"애정표현_횟수": [1, 0, 1, 0, 0, 2, 1], "애정표현_전체샘플": [["이따 끝나고 연락하자~"], [], ["완전 좋지! 기다릴게 ❤️"], [], [], ["너랑 시간 보내는 거 제일 좋아", "오늘 영화 예매했어~ 7시 타임!"], ["너 있어서 든든했어"]], "배려_횟수": [1, 0, 2, 0, 1, 0, 0], "배려_전체샘플": [["오늘도 힘내자! 😊"], [], ["오늘은 기분 좀 어때?", "나도 더 신경 쓸게"], [], ["앞으론 짧게라도 꼭 답할게!"], [], []], "적극_횟수": [0, 1, 0, 0, 1, 1, 0], "적극_전체샘플": [[], ["오늘은 꼭 먼저 연락할게!"], [], [], ["앞으론 짧게라도 꼭 답할게!"], ["오늘 영화 예매했어~ 7시 타임!"], []], "격려_횟수": [1, 0, 0, 0, 0, 0, 0], "격려_전체샘플": [["오늘도 힘내자! 😊"], [], [], [], [], [], []], "갈등_횟수": [0, 1, 0, 0, 1, 0, 0], "갈등_전체샘플": [[], ["미안… 회의 끝나고 뻗어버렸어 ㅠ"], [], [], ["미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐"], [], []]}, "user_2": {"애정표현_횟수": [0, 0, 0, 0, 0, 2, 1], "애정표현_전체샘플": [[], [], [], [], [], ["오늘은 너한테 집중할게 ❤️", "나도야~ 🥰"], ["사랑해 😘"]], "배려_횟수": [0, 0, 1, 0, 0, 0, 0], "배려_전체샘플": [[], [], ["괜찮아! 나도 어제 너무 예민했나봐~"], [], [], [], []], "적극_횟수": [2, 0, 1, 0, 0, 0, 0], "적극_전체샘플": [["좋아!", "우리 저녁엔 통화하자 :)"], [], ["우리 오늘 저녁에 산책 어때?"], [], [], [], []], "격려_횟수": [0, 0, 0, 0, 0, 0, 1], "격려_전체샘플": [[], [], [], [], [], [], ["다음 주도 잘 지내보자!"]], "갈등_횟수": [0, 2, 1, 0, 2, 0, 0], "갈등_전체샘플": [[], ["어제 약속했는데 통화 못했네 😕", "기다렸는데 연락 없어서 속상했어"], ["나도 어제 너무 예민했나봐~"], [], ["오늘 카톡 답 너무 느렸던 거 알아?", "그래도 너무 무신경하게 느껴졌어"], [], []]}}, "요약리스트": ["user_1은 주로 격려와 배려를 표현하며 하루를 시작했고, user_2는 적극적으로 대화를 이어갔습니다. 둘 다 바쁜 하루를 보낼 예정이었으나 저녁에 통화를 약속하며 서로의 일정을 배려했습니다.", "user_1은 약속을 지키지 못한 것에 대한 미안함을 표현하며, 다음에는 먼저 연락하겠다는 적극성을 보였다. user_2는 연락이 없어 서운한 감정을 드러냈다. 전반적으로 user_1의 사과와 user_2의 서운함 표출이 두드러진 하루였다.", "user_1은 배려와 애정 표현을 통해 관계를 따듯하게 유지하려 했으며, user_2는 산책 제안을 통해 적극적인 모습을 보였다. 전반적으로 관계를 개선하려는 노력이 돋보였다.", "주로 음식에 대한 대화를 나누며 서로의 입맛에 대한 공감을 표현했다. 특별한 감정 표현이나 갈등이 없었던 것으로 보인다.", "user_2가 주로 갈등을 제기했고, user_1이 이를 수용하고 개선하기 위해 노력했습니다. user_1은 배려와 적극적인 태도를 보이며 관계를 개선하려 했습니다. 전체적으로 감정 표현보다는 개선을 위한 대화가 주를 이루었습니다.", "user_1은 애정표현과 적극적인 준비를 주도했고, user_2도 애정표현에 함께 참여했다. 두 사람 모두 긍정적인 감정을 나누며 하루를 보냈다.", "user_1과 user_2는 서로에게 애정 표현을 하며 하루를 마무리했다. user_2는 다음 주에 대한 긍정적인 메시지로 격려했다. 전반적으로 긍정적인 대화로 가득 찬 하루였다."]}'}
[2025-07-14 16:54:23][WARNING][services.ai.weekly_analysis_pipeline] [WeeklyAnalysis] 커플_주간분석 실패: Invalid json output: 이번 주 커플의 전반적 분위기는 긍정적인 편이었으나, 중간중간 갈등 요소가 눈에 띄었습니다. user_1은 주로 격려와 배려로 대화를 시작하며 관계를 따뜻하게 유지하려는 노력을 보였고, user_2는 적극적인 대화 참여와 애정 표현으로 화답했습니다. 초반에는 user_1의 약속 불이행에 대한 user_2의 서운함이 있었으나, user_1의 사과와 개선 의지로 갈등이 완화되었습니다. 중반부에는 서로의 일정을 배려하며 관계를 개선하려는 노력이 돋보였고, user_1이 애정 표현과 적극적 계획으로 주도적으로 관계를 이끌어갔습니다. 주말에는 양측 모두 애정 표현을 주고받으며 긍정적인 감정으로 한 주를 마무리했습니다. 전반적으로 긍정적인 대화가 많았으며, 갈등은 있었지만 이를 개선하려는 노력이 지속적으로 이루어졌습니다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE  | 입력={"user_stats": {"user_1": {"애정표현_횟수": [1, 0, 1, 0, 0, 2, 1], "애정표현_전체샘플": [["이따 끝나고 연락하자~"], [], ["완전 좋지! 기다릴게 ❤️"], [], [], ["너랑 시간 보내는 거 제일 좋아", "오늘 영화 예매했어~ 7시 타임!"], ["너 있어서 든든했어"]], "배려_횟수": [1, 0, 2, 0, 1, 0, 0], "배려_전체샘플": [["오늘도 힘내자! 😊"], [], ["오늘은 기분 좀 어때?", "나도 더 신경 쓸게"], [], ["앞으론 짧게라도 꼭 답할게!"], [], []], "적극_횟수": [0, 1, 0, 0, 1, 1, 0], "적극_전체샘플": [[], ["오늘은 꼭 먼저 연락할게!"], [], [], ["앞으론 짧게라도 꼭 답할게!"], ["오늘 영화 예매했어~ 7시 타임!"], []], "격려_횟수": [1, 0, 0, 0, 0, 0, 0], "격려_전체샘플": [["오늘도 힘내자! 😊" ...[이하 생략] | LLM응답 일부=null
[2025-07-14 16:54:27][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:54:31][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:54:35][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:54:38][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:54:38][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:54:38][INFO][sqlalchemy.engine.Engine] INSERT INTO weekly_solutions (user_id, content, created_at) VALUES (%(user_id__0)s, %(content__0)s, %(created_at__0)s), (%(user_id__1)s, %(content__1)s, %(created_at__1)s) RETURNING weekly_solutions.id, weekly_solutions.id AS id__1
[2025-07-14 16:54:38][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 14, 7, 54, 38, 666013), 'content__0': '사용자는 이번 주에 주로 불안과 스트레스를 느꼈으며, 상담 주제는 주로 직장 내 갈등과 대인 관계 문제에 집중되었습니다. 긍정적인 발화는 주로 문제 해결을 위한 의지와 희망적인 미래에 대한 기대에서 비롯되었고, 부정적인 발화는 주로 현재 상황의 어려움과 피로감에서 나 ... (57 characters truncated) ... 지속적인 갈등이 심리적 부담을 주고 있다는 점이 있습니다. 사용자에게는 스트레스 관리와 자기 돌봄이 필요한 시점으로 보이며, 긍정적인 측면에서는 문제 해결을 위한 강한 의지가 엿보입니다. 지속적인 상담과 더불어, 구체적인 스트레스 관리 전략을 세우는 것이 필요합니다.', 'user_id__1': '2', 'created_at__1': datetime.datetime(2025, 7, 14, 7, 54, 38, 666013), 'content__1': "이번 주 사용자 상담에서는 주로 불안과 혼란의 감정이 두드러졌으며, 이는 주로 직장 내 스트레스와 미래에 대한 불확실성에서 기인한 것으로 보입니다. 긍정적인 발화 횟수는 점차 증가하고 있으며, 이는 사용자가 주변의 지지와 긍정적인 피드백을 통해 점차 안정을 찾아가고  ... (80 characters truncated) ... 담으로 작용하고 있음을 나타냅니다. 사용자는 자신의 감정을 이해하고 표현하는데 점차 능숙해지고 있으며, 이는 긍정적인 성장의 신호로 볼 수 있습니다. 그러나 여전히 사용자는 중요한 결정을 내리는 데 어려움을 겪고 있어, 이에 대한 추가적인 지원이 필요할 수 있습니다."}
[2025-07-14 16:54:38][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:54:38][INFO][root] 주간 분석 완료
[2025-07-14 16:57:00][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:57:00][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:57:00][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date >= %(date_1)s AND couple_daily_analysis_results.date < %(date_2)s ORDER BY couple_daily_analysis_results.created_at
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id_1': '1', 'date_1': datetime.date(2025, 7, 1), 'date_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] [cached since 0.002138s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:57:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:57:05][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:57:05][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Invalid json output: 이번 주 커플의 전반적 분위기는 긍정적이면서도 약간의 갈등이 존재하는 모습입니다. user_1과 user_2는 서로에 대한 애정과 배려를 지속적으로 표현했으며, 특히 주말에 서로에게 집중하며 긍정적인 시간을 보냈습니다. 그러나 주초에는 약간의 갈등이 있었으며, 주로 연락 문제로 인한 서운함과 미안함의 표현이 있었습니다. 이는 서로의 바쁜 일정 속에서 발생한 것으로 보이며, 이러한 문제를 해결하기 위해 user_1은 배려와 적극적인 태도를 보였습니다. 주중에는 user_2가 산책을 제안하는 등 관계를 개선하려는 노력이 돋보였습니다. 마지막 날에는 서로에게 애정 표현을 하며 주를 마무리했고, user_2는 다음 주에 대한 긍정적인 메시지로 격려했습니다. 전반적으로 관계는 긍정적으로 유지되고 있으며, 약간의 갈등도 서로의 이해와 노력으로 잘 해결되고 있는 것으로 보입니다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE , 입력: {'couple_weekly': '{"user_stats": {"user_1": {"애정표현_횟수": [1, 0, 1, 0, 0, 2, 1], "애정표현_전체샘플": [["이따 끝나고 연락하자~"], [], ["완전 좋지! 기다릴게 ❤️"], [], [], ["너랑 시간 보내는 거 제일 좋아", "오늘 영화 예매했어~ 7시 타임!"], ["너 있어서 든든했어"]], "배려_횟수": [1, 0, 2, 0, 1, 0, 0], "배려_전체샘플": [["오늘도 힘내자! 😊"], [], ["오늘은 기분 좀 어때?", "나도 더 신경 쓸게"], [], ["앞으론 짧게라도 꼭 답할게!"], [], []], "적극_횟수": [0, 1, 0, 0, 1, 1, 0], "적극_전체샘플": [[], ["오늘은 꼭 먼저 연락할게!"], [], [], ["앞으론 짧게라도 꼭 답할게!"], ["오늘 영화 예매했어~ 7시 타임!"], []], "격려_횟수": [1, 0, 0, 0, 0, 0, 0], "격려_전체샘플": [["오늘도 힘내자! 😊"], [], [], [], [], [], []], "갈등_횟수": [0, 1, 0, 0, 1, 0, 0], "갈등_전체샘플": [[], ["미안… 회의 끝나고 뻗어버렸어 ㅠ"], [], [], ["미안… 진짜 바빴어 ㅠㅠ 일부러 그런 거 아냐"], [], []]}, "user_2": {"애정표현_횟수": [0, 0, 0, 0, 0, 2, 1], "애정표현_전체샘플": [[], [], [], [], [], ["오늘은 너한테 집중할게 ❤️", "나도야~ 🥰"], ["사랑해 😘"]], "배려_횟수": [0, 0, 1, 0, 0, 0, 0], "배려_전체샘플": [[], [], ["괜찮아! 나도 어제 너무 예민했나봐~"], [], [], [], []], "적극_횟수": [2, 0, 1, 0, 0, 0, 0], "적극_전체샘플": [["좋아!", "우리 저녁엔 통화하자 :)"], [], ["우리 오늘 저녁에 산책 어때?"], [], [], [], []], "격려_횟수": [0, 0, 0, 0, 0, 0, 1], "격려_전체샘플": [[], [], [], [], [], [], ["다음 주도 잘 지내보자!"]], "갈등_횟수": [0, 2, 1, 0, 2, 0, 0], "갈등_전체샘플": [[], ["어제 약속했는데 통화 못했네 😕", "기다렸는데 연락 없어서 속상했어"], ["나도 어제 너무 예민했나봐~"], [], ["오늘 카톡 답 너무 느렸던 거 알아?", "그래도 너무 무신경하게 느껴졌어"], [], []]}}, "요약리스트": ["user_1은 주로 격려와 배려를 표현하며 하루를 시작했고, user_2는 적극적으로 대화를 이어갔습니다. 둘 다 바쁜 하루를 보낼 예정이었으나 저녁에 통화를 약속하며 서로의 일정을 배려했습니다.", "user_1은 약속을 지키지 못한 것에 대한 미안함을 표현하며, 다음에는 먼저 연락하겠다는 적극성을 보였다. user_2는 연락이 없어 서운한 감정을 드러냈다. 전반적으로 user_1의 사과와 user_2의 서운함 표출이 두드러진 하루였다.", "user_1은 배려와 애정 표현을 통해 관계를 따듯하게 유지하려 했으며, user_2는 산책 제안을 통해 적극적인 모습을 보였다. 전반적으로 관계를 개선하려는 노력이 돋보였다.", "주로 음식에 대한 대화를 나누며 서로의 입맛에 대한 공감을 표현했다. 특별한 감정 표현이나 갈등이 없었던 것으로 보인다.", "user_2가 주로 갈등을 제기했고, user_1이 이를 수용하고 개선하기 위해 노력했습니다. user_1은 배려와 적극적인 태도를 보이며 관계를 개선하려 했습니다. 전체적으로 감정 표현보다는 개선을 위한 대화가 주를 이루었습니다.", "user_1은 애정표현과 적극적인 준비를 주도했고, user_2도 애정표현에 함께 참여했다. 두 사람 모두 긍정적인 감정을 나누며 하루를 보냈다.", "user_1과 user_2는 서로에게 애정 표현을 하며 하루를 마무리했다. user_2는 다음 주에 대한 긍정적인 메시지로 격려했다. 전반적으로 긍정적인 대화로 가득 찬 하루였다."]}'}
[2025-07-14 16:57:05][WARNING][services.ai.weekly_analysis_pipeline] [WeeklyAnalysis] 커플_주간분석 실패: Invalid json output: 이번 주 커플의 전반적 분위기는 긍정적이면서도 약간의 갈등이 존재하는 모습입니다. user_1과 user_2는 서로에 대한 애정과 배려를 지속적으로 표현했으며, 특히 주말에 서로에게 집중하며 긍정적인 시간을 보냈습니다. 그러나 주초에는 약간의 갈등이 있었으며, 주로 연락 문제로 인한 서운함과 미안함의 표현이 있었습니다. 이는 서로의 바쁜 일정 속에서 발생한 것으로 보이며, 이러한 문제를 해결하기 위해 user_1은 배려와 적극적인 태도를 보였습니다. 주중에는 user_2가 산책을 제안하는 등 관계를 개선하려는 노력이 돋보였습니다. 마지막 날에는 서로에게 애정 표현을 하며 주를 마무리했고, user_2는 다음 주에 대한 긍정적인 메시지로 격려했습니다. 전반적으로 관계는 긍정적으로 유지되고 있으며, 약간의 갈등도 서로의 이해와 노력으로 잘 해결되고 있는 것으로 보입니다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE  | 입력={"user_stats": {"user_1": {"애정표현_횟수": [1, 0, 1, 0, 0, 2, 1], "애정표현_전체샘플": [["이따 끝나고 연락하자~"], [], ["완전 좋지! 기다릴게 ❤️"], [], [], ["너랑 시간 보내는 거 제일 좋아", "오늘 영화 예매했어~ 7시 타임!"], ["너 있어서 든든했어"]], "배려_횟수": [1, 0, 2, 0, 1, 0, 0], "배려_전체샘플": [["오늘도 힘내자! 😊"], [], ["오늘은 기분 좀 어때?", "나도 더 신경 쓸게"], [], ["앞으론 짧게라도 꼭 답할게!"], [], []], "적극_횟수": [0, 1, 0, 0, 1, 1, 0], "적극_전체샘플": [[], ["오늘은 꼭 먼저 연락할게!"], [], [], ["앞으론 짧게라도 꼭 답할게!"], ["오늘 영화 예매했어~ 7시 타임!"], []], "격려_횟수": [1, 0, 0, 0, 0, 0, 0], "격려_전체샘플": [["오늘도 힘내자! 😊" ...[이하 생략] | LLM응답 일부=null
[2025-07-14 16:57:10][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:57:17][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:57:20][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:57:24][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:57:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:57:24][INFO][sqlalchemy.engine.Engine] INSERT INTO weekly_solutions (user_id, content, created_at) VALUES (%(user_id__0)s, %(content__0)s, %(created_at__0)s), (%(user_id__1)s, %(content__1)s, %(created_at__1)s) RETURNING weekly_solutions.id, weekly_solutions.id AS id__1
[2025-07-14 16:57:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 14, 7, 57, 24, 106134), 'user_id__0': '1', 'content__0': '사용자는 주로 스트레스와 불안감을 표현하며 상담을 시작했지만, 주 중반부터 긍정적인 발화가 증가했습니다. 주된 고민은 직장에서의 업무 스트레스와 인간관계 문제로 보입니다. 상담을 통해 사용자는 스트레스 관리와 자신감 회복의 필요성을 인식하게 되었으며, 긍정적인 변화의 ... (47 characters truncated) ...  지속적으로 높아 주의가 필요합니다. 긍정적인 신호로는 사용자가 스스로 해결책을 모색하려는 의지가 보인다는 점이며, 위험 신호로는 지속적인 불안감과 무기력함이 관찰됩니다. 전반적으로 상담을 통해 작은 성장을 이루었지만, 추가적인 지원과 지지가 필요할 것으로 보입니다.', 'created_at__1': datetime.datetime(2025, 7, 14, 7, 57, 24, 106134), 'user_id__1': '2', 'content__1': "이번 주 사용자의 대표 감정은 주로 불안과 스트레스였으며, 주요 상담 주제는 직장 내 갈등과 대인 관계 문제였습니다. 긍정 발화 횟수는 부정 발화 횟수에 비해 현저히 적었으며, 긍정 발화 샘플로는 '오늘은 조금 나아진 것 같아요'와 같은 표현이 있었습니다. 부정 발화 ... (77 characters truncated) ...  나타났습니다. 요약 리스트에는 사용자가 스트레스 관리 방법을 찾고자 하며, 긍정적인 피드백이나 지지를 원하는 모습이 강조되었습니다. 전반적으로 사용자는 현재 상황에서 벗어나기 위한 방법을 모색 중이나, 지속적인 부정적 감정이 심리적 위험 신호로 작용할 수 있습니다."}
[2025-07-14 16:57:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:57:24][INFO][root] 주간 분석 완료
[2025-07-14 16:59:39][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 16:59:39][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 16:59:39][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date >= %(date_1)s AND couple_daily_analysis_results.date < %(date_2)s ORDER BY couple_daily_analysis_results.created_at
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': '1', 'date_1': datetime.date(2025, 7, 1), 'date_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] [cached since 0.002349s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 16:59:39][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 16:59:43][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:59:47][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:59:51][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:59:55][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:59:58][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 16:59:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 16:59:58][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_weekly_analysis_results (couple_id, week_start_date, week_end_date, result, created_at, modified_at) VALUES (%(couple_id)s, %(week_start_date)s, %(week_end_date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 16:59:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00043s] {'couple_id': '1', 'week_start_date': datetime.date(2025, 7, 1), 'week_end_date': datetime.date(2025, 7, 7), 'result': '"이번 주 커플의 전반적인 분위기는 긍정적인 요소와 부정적인 요소가 혼재된 모습을 보였습니다. user_1은 배려와 격려를 자주 표현하며 관계의 긍정적인 측면을 강화하려는 노력이 두드러졌습니다. 반면, user_2는 갈등 상황에서 서운함을 드러내며 감정 표현에 솔직한 ... (85 characters truncated) ... 인 대화를 주고받으며 분위기가 많이 개선되었습니다. 전체적으로, 이번 주는 커플이 서로의 감정을 이해하고 소통을 통해 관계를 강화하는 데 주력한 한 주였다고 할 수 있습니다. 다만, 가끔씩 발생하는 작은 갈등 상황에서의 대응 방안을 더 고민할 필요가 있어 보입니다."', 'created_at': datetime.datetime(2025, 7, 14, 7, 59, 58, 728851), 'modified_at': datetime.datetime(2025, 7, 14, 7, 59, 58, 731369)}
[2025-07-14 16:59:58][INFO][sqlalchemy.engine.Engine] INSERT INTO weekly_solutions (user_id, content, created_at) VALUES (%(user_id__0)s, %(content__0)s, %(created_at__0)s), (%(user_id__1)s, %(content__1)s, %(created_at__1)s) RETURNING weekly_solutions.id, weekly_solutions.id AS id__1
[2025-07-14 16:59:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'content__0': '이 사용자는 지난 일주일 동안 주로 스트레스와 불안을 느꼈으며, 직장 내 갈등과 대인 관계가 주요 고민으로 나타났습니다. 긍정적인 발화 횟수가 점차 증가하고 있으며, 이는 사용자가 상담을 통해 점진적인 감정적 안정을 찾고 있음을 시사합니다. 그러나 부정적인 발화가 여 ... (41 characters truncated) ... 로는 사용자가 자신의 감정을 더 잘 인식하고 표현하는 능력이 향상되고 있다는 점이 있습니다. 성장 신호로는 어려운 상황에서도 긍정적인 면을 찾으려는 노력이 돋보이며, 위험 신호로는 여전히 해결되지 않은 직장 내 갈등이 심리적 부담으로 작용하고 있음을 알 수 있습니다.', 'user_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 14, 7, 59, 58, 728851), 'content__1': '이번 주 사용자는 주로 불안과 스트레스를 대표감정으로 경험하며 개인적인 문제와 직장 내 갈등을 상담 주제로 다루었습니다. 긍정 발화의 횟수가 점차 증가하는 경향을 보이며, 이는 사용자가 상담을 통해 점차 긍정적인 변화를 경험하고 있음을 시사합니다. 그러나 여전히 부정 ... (133 characters truncated) ... 인 대처 방법을 배우는 과정을 겪고 있습니다. 이러한 변화는 사용자가 자기 회복력을 키우고 있으며, 앞으로의 도전에 더 잘 대비할 수 있게 될 것임을 암시합니다. 그러나 여전히 직장 내 갈등이 남아 있어, 이를 해결하기 위한 구체적인 전략 수립이 필요할 수 있습니다.', 'user_id__1': '2', 'created_at__1': datetime.datetime(2025, 7, 14, 7, 59, 58, 728851)}
[2025-07-14 16:59:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 16:59:58][INFO][root] 주간 분석 완료
[2025-07-14 17:00:46][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 17:00:46][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 17:00:46][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 17:00:46][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date >= %(date_1)s AND couple_daily_analysis_results.date < %(date_2)s ORDER BY couple_daily_analysis_results.created_at
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'couple_id_1': '1', 'date_1': datetime.date(2025, 7, 1), 'date_2': datetime.date(2025, 7, 8)}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] [cached since 0.001992s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 17:00:47][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 17:00:52][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 17:00:56][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 17:01:01][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 17:01:04][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 17:01:06][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 17:01:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:01:06][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_weekly_analysis_results (couple_id, week_start_date, week_end_date, result, created_at, modified_at) VALUES (%(couple_id)s, %(week_start_date)s, %(week_end_date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 17:01:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00053s] {'couple_id': '1', 'week_start_date': datetime.date(2025, 7, 1), 'week_end_date': datetime.date(2025, 7, 7), 'result': '"이번 주 커플의 전반적인 분위기는 긍정적이면서도 약간의 갈등이 있는 주간이었습니다. user_1은 주로 애정 표현과 배려를 통해 관계를 따뜻하게 유지하려 했고, user_2는 적극적인 대화 참여와 애정 표현으로 이에 응답했습니다. 초기에는 user_1의 약속 불이행 ... (147 characters truncated) ... 주도했고, user_2는 갈등 상황에서도 배려와 이해를 보이는 성숙한 태도를 보였습니다. 성장 측면에서 갈등 상황을 잘 해결하며 관계가 더욱 단단해질 가능성이 엿보였습니다. 그러나 갈등 상황에서의 감정 관리와 커뮤니케이션 개선은 여전히 중요한 과제로 남아 있습니다."', 'created_at': datetime.datetime(2025, 7, 14, 8, 1, 6, 887347), 'modified_at': datetime.datetime(2025, 7, 14, 8, 1, 6, 890858)}
[2025-07-14 17:01:06][INFO][sqlalchemy.engine.Engine] INSERT INTO weekly_solutions (user_id, content, created_at) VALUES (%(user_id__0)s, %(content__0)s, %(created_at__0)s), (%(user_id__1)s, %(content__1)s, %(created_at__1)s) RETURNING weekly_solutions.id, weekly_solutions.id AS id__1
[2025-07-14 17:01:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 14, 8, 1, 6, 887347), 'content__0': "이번 주 사용자는 주로 불안과 스트레스를 대표감정으로 표현하였으며, 주된 상담 주제는 직장 내 인간관계와 업무 스트레스였습니다. 긍정적인 발화보다 부정적인 발화가 더 많았으며, 특히 '힘들다', '어렵다'와 같은 부정적인 표현이 자주 사용되었습니다. 중요한 신호로는  ... (42 characters truncated) ...  있음을 나타냅니다. 요약 리스트에서 사용자는 자신의 상황을 개선하기 위한 구체적인 계획을 세우기 시작했으며, 이는 긍정적인 변화의 시작으로 보입니다. 하지만, 여전히 스트레스의 원인이 되는 상황에 대한 적절한 대처가 필요하므로 지속적인 모니터링과 지원이 필요합니다.", 'user_id__0': '1', 'created_at__1': datetime.datetime(2025, 7, 14, 8, 1, 6, 887347), 'content__1': '이번 주 사용자의 주된 감정은 불안과 스트레스로 나타났으며, 상담 주제로는 대인관계와 직장 스트레스가 주로 다뤄졌습니다. 긍정적인 발화는 비교적 적었으며, 주로 작은 성취나 일상에서의 긍정 경험에서 나왔습니다. 반면 부정적인 발화는 잦았고, 이는 주로 대인관계에서의  ... (42 characters truncated) ... 제와 탈진 증후군의 가능성이 관찰되었습니다. 사용자는 상담을 통해 자신에 대한 이해가 조금씩 깊어지고 있으며, 스트레스 관리에 대한 필요성을 인식하고 있습니다. 그러나 지속적인 부정적 감정은 심리적 위험 요소로 작용할 수 있으므로 추가적인 지원이 필요할 수 있습니다.', 'user_id__1': '2'}
[2025-07-14 17:01:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:01:06][INFO][root] 주간 분석 완료
[2025-07-14 17:06:58][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 17:06:58][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 17:06:58][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00035s] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 17:06:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:07:00][INFO][faiss.loader] Loading faiss with AVX2 support.
[2025-07-14 17:07:00][INFO][faiss.loader] Successfully loaded faiss with AVX2 support.
[2025-07-14 17:07:00][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] {}
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 17:07:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_analysis_results`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_comparison_results`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_weekly_recommendations`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_weekly_comparison_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	week_start_date DATETIME NOT NULL, 
	week_end_date DATETIME NOT NULL, 
	comparison TEXT NOT NULL, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_weekly_recommendations (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	week_start_date DATETIME NOT NULL, 
	week_end_date DATETIME NOT NULL, 
	advice TEXT NOT NULL, 
	content_type VARCHAR(50), 
	content_title VARCHAR(255), 
	content_reason TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] SELECT DISTINCT couples.couple_id AS couples_couple_id 
FROM couples
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] SELECT couples.couple_id AS couples_couple_id, couples.user_1 AS couples_user_1, couples.user_2 AS couples_user_2, couples.created_at AS couples_created_at, couples.deleted_at AS couples_deleted_at, couples.modified_at AS couples_modified_at 
FROM couples 
WHERE couples.couple_id = %(couple_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'couple_id_1': '1', 'param_1': 1}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] SELECT couple_daily_analysis_results.id AS couple_daily_analysis_results_id, couple_daily_analysis_results.couple_id AS couple_daily_analysis_results_couple_id, couple_daily_analysis_results.date AS couple_daily_analysis_results_date, couple_daily_analysis_results.result AS couple_daily_analysis_results_result, couple_daily_analysis_results.created_at AS couple_daily_analysis_results_created_at, couple_daily_analysis_results.modified_at AS couple_daily_analysis_results_modified_at 
FROM couple_daily_analysis_results 
WHERE couple_daily_analysis_results.couple_id = %(couple_id_1)s AND couple_daily_analysis_results.date >= %(date_1)s AND couple_daily_analysis_results.date < %(date_2)s ORDER BY couple_daily_analysis_results.created_at
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'couple_id_1': '1', 'date_1': datetime.date(2025, 7, 1), 'date_2': datetime.date(2025, 7, 8)}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] SELECT ai_chat_summaries.id AS ai_chat_summaries_id, ai_chat_summaries.user_id AS ai_chat_summaries_user_id, ai_chat_summaries.couple_id AS ai_chat_summaries_couple_id, ai_chat_summaries.summary AS ai_chat_summaries_summary, ai_chat_summaries.emb_id AS ai_chat_summaries_emb_id, ai_chat_summaries.created_at AS ai_chat_summaries_created_at, ai_chat_summaries.last_msg_id AS ai_chat_summaries_last_msg_id 
FROM ai_chat_summaries 
WHERE ai_chat_summaries.user_id = %(user_id_1)s AND ai_chat_summaries.created_at >= %(created_at_1)s AND ai_chat_summaries.created_at < %(created_at_2)s ORDER BY ai_chat_summaries.created_at
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] [cached since 0.002105s ago] {'user_id_1': '2', 'created_at_1': datetime.date(2025, 7, 1), 'created_at_2': datetime.date(2025, 7, 8)}
[2025-07-14 17:07:01][INFO][sqlalchemy.engine.Engine] ROLLBACK
[2025-07-14 17:07:05][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 17:07:06][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 17:07:06][ERROR][utils.langchain_helpers] [run_langchain_prompt] 에러: Invalid json output: 죄송하지만 구체적인 데이터를 제공하지 않으면 분석을 수행할 수 없습니다. 사용자가 제공한 데이터를 기반으로 분석을 제공해드릴 수 있습니다. 데이터를 공유해 주시면, 요청하신 형식에 맞춰 AI의 주간 분석을 제공하겠습니다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE , 입력: {'ai_weekly': '{"대표감정": [], "상담주제": [], "긍정발화_횟수": [], "긍정발화_샘플": [], "부정발화_횟수": [], "부정발화_샘플": [], "중요신호": [], "요약리스트": []}'}
[2025-07-14 17:07:06][WARNING][services.ai.weekly_analysis_pipeline] [WeeklyAnalysis] AI_주간분석 실패: Invalid json output: 죄송하지만 구체적인 데이터를 제공하지 않으면 분석을 수행할 수 없습니다. 사용자가 제공한 데이터를 기반으로 분석을 제공해드릴 수 있습니다. 데이터를 공유해 주시면, 요청하신 형식에 맞춰 AI의 주간 분석을 제공하겠습니다.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE  | 입력={"대표감정": [], "상담주제": [], "긍정발화_횟수": [], "긍정발화_샘플": [], "부정발화_횟수": [], "부정발화_샘플": [], "중요신호": [], "요약리스트": []} | LLM응답 일부=null
[2025-07-14 17:07:10][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 17:07:13][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 17:07:15][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 17:07:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 17:07:15][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_weekly_analysis_results (couple_id, week_start_date, week_end_date, result, created_at, modified_at) VALUES (%(couple_id)s, %(week_start_date)s, %(week_end_date)s, %(result)s, %(created_at)s, %(modified_at)s)
[2025-07-14 17:07:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] {'couple_id': '1', 'week_start_date': datetime.date(2025, 7, 1), 'week_end_date': datetime.date(2025, 7, 7), 'result': '"이번 주 커플의 전반적 분위기는 대체로 긍정적이었습니다. user_1과 user_2는 서로에게 애정 표현을 자주 했고, 특히 주말에는 적극성과 배려가 돋보였습니다. 그러나 주중에는 user_2가 서운함을 표현하는 갈등 상황이 몇 차례 있었고, user_1은 이를 수 ... (30 characters truncated) ...  갈등은 주로 연락 문제에서 발생했으며, 이를 해결하기 위한 적극적인 대화가 이루어졌습니다. 주말에는 함께 시간을 보내며 관계를 더욱 돈독히 하는 모습이 관찰되었습니다. 전반적으로 관계 개선을 위한 노력이 두드러졌고, 긍정적인 변화를 보이고 있는 것으로 평가됩니다."', 'created_at': datetime.datetime(2025, 7, 14, 8, 7, 15, 752541), 'modified_at': datetime.datetime(2025, 7, 14, 8, 7, 15, 754680)}
[2025-07-14 17:07:15][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_weekly_comparison_results (couple_id, week_start_date, week_end_date, comparison, created_at) VALUES (%(couple_id)s, %(week_start_date)s, %(week_end_date)s, %(comparison)s, %(created_at)s)
[2025-07-14 17:07:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'couple_id': '1', 'week_start_date': datetime.date(2025, 7, 1), 'week_end_date': datetime.date(2025, 7, 7), 'comparison': '커플간의 대화는 주로 애정 표현과 배려로 긍정적이었으나, user_2의 서운함과 갈등이 일부 존재했습니다. user_1은 미안함과 함께 개선 의지를 보였으며, user_2는 적극적 제안으로 관계를 유지하려는 노력이 돋보였습니다. AI 상담 데이터가 없어 상세 비교는 어렵지만, 커플의 소통은 전반적으로 긍정적이었으며 서로의 감정을 이해하려는 의도가 명확했습니다.', 'created_at': datetime.datetime(2025, 7, 14, 8, 7, 15, 752541)}
[2025-07-14 17:07:15][INFO][sqlalchemy.engine.Engine] INSERT INTO couple_weekly_recommendations (couple_id, week_start_date, week_end_date, advice, content_type, content_title, content_reason, created_at) VALUES (%(couple_id)s, %(week_start_date)s, %(week_end_date)s, %(advice)s, %(content_type)s, %(content_title)s, %(content_reason)s, %(created_at)s)
[2025-07-14 17:07:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00030s] {'couple_id': '1', 'week_start_date': datetime.date(2025, 7, 1), 'week_end_date': datetime.date(2025, 7, 7), 'advice': '서로의 감정을 이해하고 존중하는 대화를 지속하세요. 주말처럼 함께하는 시간을 더 늘려보는 것도 좋습니다. 스트레스가 많은 시기일수록 서로에게 힘이 되어줄 수 있는 존재임을 기억하세요.', 'content_type': '영화', 'content_title': 'About Time', 'content_reason': '이 영화는 사랑과 시간의 소중함을 다루며, 서로의 존재가 얼마나 큰 힘이 될 수 있는지를 보여줍니다. 주인공들의 관계를 보며 따뜻한 감정을 느낄 수 있을 것입니다.', 'created_at': datetime.datetime(2025, 7, 14, 8, 7, 15, 752541)}
[2025-07-14 17:07:15][INFO][sqlalchemy.engine.Engine] INSERT INTO weekly_solutions (user_id, content, created_at) VALUES (%(user_id)s, %(content)s, %(created_at)s)
[2025-07-14 17:07:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] {'user_id': '2', 'content': '이 사용자는 지난 한 주 동안 다양한 감정을 경험했으며, 특히 불안과 스트레스를 자주 언급했습니다. 상담 주제로는 주로 직장 내 갈등과 미래에 대한 불확실성이었습니다. 긍정 발화는 주로 친구들과의 교류에서 나타났으며, 부정 발화는 직장 내 스트레스와 관련이 있었습니다 ... (40 characters truncated) ... 어려워 보이는 점이 있었습니다. 요약 리스트를 보면, 사용자는 자신의 감정을 더 잘 이해하고 관리하려는 노력을 보이고 있으며, 친구들과의 긍정적 상호작용이 심리적 안정에 기여하고 있습니다. 그러나 직장 관련 스트레스가 지속될 경우 추가적인 도움이 필요할 수 있습니다.', 'created_at': datetime.datetime(2025, 7, 14, 8, 7, 15, 752541)}
[2025-07-14 17:07:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 17:07:15][INFO][root] 주간 분석 완료
[2025-07-14 18:00:48][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:00:48][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:00:48][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 18:00:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 0, 49, 929073), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 0, 49, 929077), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 0, 49, 962809)}
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:00:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00004s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 0, 48, 679245), 'user_id__0': '1', 'question_id__0': 1, 'choice_id__0': 2, 'custom_input__0': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 0, 48, 679277), 'user_id__1': '1', 'question_id__1': 2, 'choice_id__1': 8, 'custom_input__1': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 0, 48, 679293), 'user_id__2': '1', 'question_id__2': 3, 'choice_id__2': 13, 'custom_input__2': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 0, 48, 679308), 'user_id__3': '1', 'question_id__3': 4, 'choice_id__3': 21, 'custom_input__3': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 0, 48, 679325), 'user_id__4': '1', 'question_id__4': 5, 'choice_id__4': 26, 'custom_input__4': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 0, 48, 679340), 'user_id__5': '2', 'question_id__5': 1, 'choice_id__5': 1, 'custom_input__5': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 0, 48, 679353), 'user_id__6': '2', 'question_id__6': 2, 'choice_id__6': 9, 'custom_input__6': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 0, 48, 679367), 'user_id__7': '2', 'question_id__7': 3, 'choice_id__7': 16, 'custom_input__7': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 0, 48, 679381), 'user_id__8': '2', 'question_id__8': 4, 'choice_id__8': 20, 'custom_input__8': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 0, 48, 679397), 'user_id__9': '2', 'question_id__9': 5, 'choice_id__9': 25, 'custom_input__9': None}
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s (insertmanyvalues) 1/1 (ordered)] {'couple_id__0': '1', 'user_id__0': '1', 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'embed_index__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'has_image__0': 0, 'is_delivered__0': 1, 'image_url__0': None, 'couple_id__1': '1', 'user_id__1': '2', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'embed_index__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'has_image__1': 0, 'is_delivered__1': 1, 'image_url__1': None, 'couple_id__2': '1', 'user_id__2': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'embed_index__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'has_image__2': 0, 'is_delivered__2': 1, 'image_url__2': None, 'couple_id__3': '1', 'user_id__3': '2', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'embed_index__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'has_image__3': 0, 'is_delivered__3': 1, 'image_url__3': None, 'couple_id__4': '1', 'user_id__4': '2', 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'embed_index__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'has_image__4': 0, 'is_delivered__4': 1, 'image_url__4': None, 'couple_id__5': '1', 'user_id__5': '1', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'deleted_at__5': None, 'embed_index__5': None ... 170 parameters truncated ... 'embed_index__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'has_image__24': 0, 'is_delivered__24': 1, 'image_url__24': None, 'couple_id__25': '1', 'user_id__25': '2', 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'embed_index__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'has_image__25': 0, 'is_delivered__25': 1, 'image_url__25': None, 'couple_id__26': '1', 'user_id__26': '1', 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'embed_index__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'has_image__26': 0, 'is_delivered__26': 1, 'image_url__26': None, 'couple_id__27': '1', 'user_id__27': '2', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'embed_index__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'has_image__27': 0, 'is_delivered__27': 1, 'image_url__27': None, 'couple_id__28': '1', 'user_id__28': '1', 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'embed_index__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'has_image__28': 0, 'is_delivered__28': 1, 'image_url__28': None, 'couple_id__29': '1', 'user_id__29': '2', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None, 'embed_index__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'has_image__29': 0, 'is_delivered__29': 1, 'image_url__29': None}
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {}
[2025-07-14 18:00:50][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id_1': '1'}
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:00:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:00:52][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:00:52][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:00:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00023s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:00:52][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:00:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id': '1', 'summary': '지민 values open and effective communication in their relationships, preferring to address issues with a calm approach before discussing them. They exp ... (143 characters truncated) ... ing a consistent and engaging connection. They prioritize building a deep and meaningful relationship, aiming for a profound bond with their partner.', 'created_at': datetime.datetime(2025, 7, 14, 9, 0, 52, 128365), 'updated_at': datetime.datetime(2025, 7, 14, 9, 0, 52, 128371)}
[2025-07-14 18:00:52][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:52][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:00:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:00:52][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:00:52][INFO][sqlalchemy.engine.Engine] [cached since 1.885s ago] {'user_id_1': '2'}
[2025-07-14 18:00:52][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:00:52][INFO][sqlalchemy.engine.Engine] [cached since 1.883s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:00:54][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:00:54][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:00:54][INFO][sqlalchemy.engine.Engine] [cached since 2.561s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:00:54][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:00:54][INFO][sqlalchemy.engine.Engine] [cached since 2.559s ago] {'user_id': '2', 'summary': '수아 values trust in her relationships and prefers to maintain a balanced sense of independence. When conflicts arise, she tends to adopt a wait-it-out ... (250 characters truncated) ... ikely to ensure that interactions are genuine and engaging. Overall, 수아 seeks a relationship that respects both personal space and mutual connection.', 'created_at': datetime.datetime(2025, 7, 14, 9, 0, 54, 687290), 'updated_at': datetime.datetime(2025, 7, 14, 9, 0, 54, 687292)}
[2025-07-14 18:00:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:00:54][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:00:54][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:00:54][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:08:48][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:08:48][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:08:48][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:08:48][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:08:49][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [no key 0.00034s] {}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 8, 50, 306064), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 8, 50, 306068), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 8, 50, 341792)}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 8, 49, 50566), 'custom_input__0': None, 'question_id__0': 1, 'choice_id__0': 2, 'user_id__0': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 8, 49, 50588), 'custom_input__1': None, 'question_id__1': 2, 'choice_id__1': 8, 'user_id__1': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 8, 49, 50599), 'custom_input__2': None, 'question_id__2': 3, 'choice_id__2': 13, 'user_id__2': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 8, 49, 50611), 'custom_input__3': None, 'question_id__3': 4, 'choice_id__3': 21, 'user_id__3': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 8, 49, 50623), 'custom_input__4': None, 'question_id__4': 5, 'choice_id__4': 26, 'user_id__4': '1', 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 8, 49, 50631), 'custom_input__5': None, 'question_id__5': 1, 'choice_id__5': 1, 'user_id__5': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 8, 49, 50640), 'custom_input__6': None, 'question_id__6': 2, 'choice_id__6': 9, 'user_id__6': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 8, 49, 50650), 'custom_input__7': None, 'question_id__7': 3, 'choice_id__7': 16, 'user_id__7': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 8, 49, 50660), 'custom_input__8': None, 'question_id__8': 4, 'choice_id__8': 20, 'user_id__8': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 8, 49, 50672), 'custom_input__9': None, 'question_id__9': 5, 'choice_id__9': 25, 'user_id__9': '2'}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__12': '애정', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'user_id__14': '2', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'is_delivered__0': 1, 'has_image__0': 0, 'couple_id__0': '1', 'image_url__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'embed_index__0': None, 'deleted_at__0': None, 'user_id__0': '1', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'is_delivered__1': 1, 'has_image__1': 0, 'couple_id__1': '1', 'image_url__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'embed_index__1': None, 'deleted_at__1': None, 'user_id__1': '2', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'is_delivered__2': 1, 'has_image__2': 0, 'couple_id__2': '1', 'image_url__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'embed_index__2': None, 'deleted_at__2': None, 'user_id__2': '1', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'is_delivered__3': 1, 'has_image__3': 0, 'couple_id__3': '1', 'image_url__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'embed_index__3': None, 'deleted_at__3': None, 'user_id__3': '2', 'content__4': '어제 약속했는데 통화 못했네 😕', 'is_delivered__4': 1, 'has_image__4': 0, 'couple_id__4': '1', 'image_url__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'embed_index__4': None, 'deleted_at__4': None, 'user_id__4': '2', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'is_delivered__5': 1, 'has_image__5': 0, 'couple_id__5': '1', 'image_url__5': None ... 170 parameters truncated ... 'image_url__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'embed_index__24': None, 'deleted_at__24': None, 'user_id__24': '1', 'content__25': '나도야~ 🥰', 'is_delivered__25': 1, 'has_image__25': 0, 'couple_id__25': '1', 'image_url__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'embed_index__25': None, 'deleted_at__25': None, 'user_id__25': '2', 'content__26': '일주일 진짜 빠르다', 'is_delivered__26': 1, 'has_image__26': 0, 'couple_id__26': '1', 'image_url__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'embed_index__26': None, 'deleted_at__26': None, 'user_id__26': '1', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'is_delivered__27': 1, 'has_image__27': 0, 'couple_id__27': '1', 'image_url__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'embed_index__27': None, 'deleted_at__27': None, 'user_id__27': '2', 'content__28': '너 있어서 든든했어', 'is_delivered__28': 1, 'has_image__28': 0, 'couple_id__28': '1', 'image_url__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'embed_index__28': None, 'deleted_at__28': None, 'user_id__28': '1', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'is_delivered__29': 1, 'has_image__29': 0, 'couple_id__29': '1', 'image_url__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'embed_index__29': None, 'deleted_at__29': None, 'user_id__29': '2'}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {}
[2025-07-14 18:08:50][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id_1': '1'}
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:08:50][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:08:53][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:08:53][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:08:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:08:53][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:08:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {'user_id': '1', 'summary': '지민 values communication as a cornerstone of their relationships, emphasizing the importance of expressing thoughts and feelings openly. When conflict ... (263 characters truncated) ... nteraction helps maintain closeness. Ultimately, they seek deep connections, aiming for relationships that are emotionally fulfilling and meaningful.', 'created_at': datetime.datetime(2025, 7, 14, 9, 8, 53, 521379), 'updated_at': datetime.datetime(2025, 7, 14, 9, 8, 53, 521382)}
[2025-07-14 18:08:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:53][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:08:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:53][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:08:53][INFO][sqlalchemy.engine.Engine] [cached since 2.976s ago] {'user_id_1': '2'}
[2025-07-14 18:08:53][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:08:53][INFO][sqlalchemy.engine.Engine] [cached since 2.977s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:08:57][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:08:57][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:08:57][INFO][sqlalchemy.engine.Engine] [cached since 3.592s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:08:57][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:08:57][INFO][sqlalchemy.engine.Engine] [cached since 3.596s ago] {'user_id': '2', 'summary': '수아 values trust as a fundamental aspect of her relationships, prioritizing honesty and reliability. She tends to handle conflicts by giving situation ... (290 characters truncated) ... e seeks a relationship characterized by balanced independence, where both partners maintain their individuality while being supportive of each other.', 'created_at': datetime.datetime(2025, 7, 14, 9, 8, 57, 117176), 'updated_at': datetime.datetime(2025, 7, 14, 9, 8, 57, 117180)}
[2025-07-14 18:08:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:57][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:08:57][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:08:57][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:08:57][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:08:57][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:08:57][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {}
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:08:58][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 8, 59, 739817), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 8, 59, 739821), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 8, 59, 774835)}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 8, 58, 502910), 'custom_input__0': None, 'user_id__0': '1', 'choice_id__0': 2, 'question_id__0': 1, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 8, 58, 502926), 'custom_input__1': None, 'user_id__1': '1', 'choice_id__1': 8, 'question_id__1': 2, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 8, 58, 502934), 'custom_input__2': None, 'user_id__2': '1', 'choice_id__2': 13, 'question_id__2': 3, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 8, 58, 502942), 'custom_input__3': None, 'user_id__3': '1', 'choice_id__3': 21, 'question_id__3': 4, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 8, 58, 502950), 'custom_input__4': None, 'user_id__4': '1', 'choice_id__4': 26, 'question_id__4': 5, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 8, 58, 502958), 'custom_input__5': None, 'user_id__5': '2', 'choice_id__5': 1, 'question_id__5': 1, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 8, 58, 502966), 'custom_input__6': None, 'user_id__6': '2', 'choice_id__6': 9, 'question_id__6': 2, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 8, 58, 502973), 'custom_input__7': None, 'user_id__7': '2', 'choice_id__7': 16, 'question_id__7': 3, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 8, 58, 502989), 'custom_input__8': None, 'user_id__8': '2', 'choice_id__8': 20, 'question_id__8': 4, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 8, 58, 502997), 'custom_input__9': None, 'user_id__9': '2', 'choice_id__9': 25, 'question_id__9': 5}
[2025-07-14 18:08:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__12': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'emotion__14': '바쁨', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'deleted_at__0': None, 'image_url__0': None, 'couple_id__0': '1', 'has_image__0': 0, 'is_delivered__0': 1, 'user_id__0': '1', 'embed_index__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'deleted_at__1': None, 'image_url__1': None, 'couple_id__1': '1', 'has_image__1': 0, 'is_delivered__1': 1, 'user_id__1': '2', 'embed_index__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'deleted_at__2': None, 'image_url__2': None, 'couple_id__2': '1', 'has_image__2': 0, 'is_delivered__2': 1, 'user_id__2': '1', 'embed_index__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'deleted_at__3': None, 'image_url__3': None, 'couple_id__3': '1', 'has_image__3': 0, 'is_delivered__3': 1, 'user_id__3': '2', 'embed_index__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'deleted_at__4': None, 'image_url__4': None, 'couple_id__4': '1', 'has_image__4': 0, 'is_delivered__4': 1, 'user_id__4': '2', 'embed_index__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'deleted_at__5': None, 'image_url__5': None, 'couple_id__5': '1', 'has_image__5': 0 ... 170 parameters truncated ... 'has_image__24': 0, 'is_delivered__24': 1, 'user_id__24': '1', 'embed_index__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'deleted_at__25': None, 'image_url__25': None, 'couple_id__25': '1', 'has_image__25': 0, 'is_delivered__25': 1, 'user_id__25': '2', 'embed_index__25': None, 'content__25': '나도야~ 🥰', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'deleted_at__26': None, 'image_url__26': None, 'couple_id__26': '1', 'has_image__26': 0, 'is_delivered__26': 1, 'user_id__26': '1', 'embed_index__26': None, 'content__26': '일주일 진짜 빠르다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'deleted_at__27': None, 'image_url__27': None, 'couple_id__27': '1', 'has_image__27': 0, 'is_delivered__27': 1, 'user_id__27': '2', 'embed_index__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'deleted_at__28': None, 'image_url__28': None, 'couple_id__28': '1', 'has_image__28': 0, 'is_delivered__28': 1, 'user_id__28': '1', 'embed_index__28': None, 'content__28': '너 있어서 든든했어', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'deleted_at__29': None, 'image_url__29': None, 'couple_id__29': '1', 'has_image__29': 0, 'is_delivered__29': 1, 'user_id__29': '2', 'embed_index__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘'}
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s] {}
[2025-07-14 18:09:00][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {'user_id_1': '1'}
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:09:03][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:09:03][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:09:03][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:09:03][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {'user_id': '1', 'summary': '지민 values open and effective communication in relationships, emphasizing the importance of words to express affection. In times of conflict, they pre ... (311 characters truncated) ... tional bonds. Overall, their partnership approach is characterized by a harmonious blend of communication, understanding, and consistent interaction.', 'created_at': datetime.datetime(2025, 7, 14, 9, 9, 3, 97578), 'updated_at': datetime.datetime(2025, 7, 14, 9, 9, 3, 97582)}
[2025-07-14 18:09:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:03][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:09:03][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:03][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:03][INFO][sqlalchemy.engine.Engine] [cached since 2.845s ago] {'user_id_1': '2'}
[2025-07-14 18:09:03][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:03][INFO][sqlalchemy.engine.Engine] [cached since 2.844s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:09:07][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:09:07][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:07][INFO][sqlalchemy.engine.Engine] [cached since 4.421s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:09:07][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:09:07][INFO][sqlalchemy.engine.Engine] [cached since 4.42s ago] {'user_id': '2', 'summary': '수아 values trust as a foundational element in their relationships, preferring to build connections that are grounded in mutual reliability and opennes ... (376 characters truncated) ... c. Ultimately, 수아 seeks a relationship with balanced independence, where both partners have the freedom to grow individually while staying connected.', 'created_at': datetime.datetime(2025, 7, 14, 9, 9, 7, 517302), 'updated_at': datetime.datetime(2025, 7, 14, 9, 9, 7, 517305)}
[2025-07-14 18:09:07][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:07][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:09:07][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:09:07][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:09:09][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:09:09][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:09:09][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:09:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:10][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 11, 88572), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 11, 88576), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 11, 122698)}
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'user_id__0': '1', 'choice_id__0': 2, 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 9, 9, 758832), 'custom_input__1': None, 'user_id__1': '1', 'choice_id__1': 8, 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 9, 9, 758854), 'custom_input__2': None, 'user_id__2': '1', 'choice_id__2': 13, 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 9, 9, 758863), 'custom_input__3': None, 'user_id__3': '1', 'choice_id__3': 21, 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 9, 9, 758871), 'custom_input__4': None, 'user_id__4': '1', 'choice_id__4': 26, 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 9, 9, 758880), 'custom_input__5': None, 'user_id__5': '2', 'choice_id__5': 1, 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 9, 9, 758887), 'custom_input__6': None, 'user_id__6': '2', 'choice_id__6': 9, 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 9, 9, 758894), 'custom_input__7': None, 'user_id__7': '2', 'choice_id__7': 16, 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 9, 9, 758901), 'custom_input__8': None, 'user_id__8': '2', 'choice_id__8': 20, 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 9, 9, 758909), 'custom_input__9': None, 'user_id__9': '2', 'choice_id__9': 25, 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 9, 9, 758918)}
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__12': '애정' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__14': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2'}
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'is_delivered__0': 1, 'couple_id__0': '1', 'image_url__0': None, 'deleted_at__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'user_id__0': '1', 'embed_index__0': None, 'has_image__0': 0, 'is_delivered__1': 1, 'couple_id__1': '1', 'image_url__1': None, 'deleted_at__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'user_id__1': '2', 'embed_index__1': None, 'has_image__1': 0, 'is_delivered__2': 1, 'couple_id__2': '1', 'image_url__2': None, 'deleted_at__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'user_id__2': '1', 'embed_index__2': None, 'has_image__2': 0, 'is_delivered__3': 1, 'couple_id__3': '1', 'image_url__3': None, 'deleted_at__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'user_id__3': '2', 'embed_index__3': None, 'has_image__3': 0, 'is_delivered__4': 1, 'couple_id__4': '1', 'image_url__4': None, 'deleted_at__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'user_id__4': '2', 'embed_index__4': None, 'has_image__4': 0, 'is_delivered__5': 1, 'couple_id__5': '1', 'image_url__5': None, 'deleted_at__5': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ' ... 170 parameters truncated ... 'content__24': '너랑 시간 보내는 거 제일 좋아', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'user_id__24': '1', 'embed_index__24': None, 'has_image__24': 0, 'is_delivered__25': 1, 'couple_id__25': '1', 'image_url__25': None, 'deleted_at__25': None, 'content__25': '나도야~ 🥰', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'user_id__25': '2', 'embed_index__25': None, 'has_image__25': 0, 'is_delivered__26': 1, 'couple_id__26': '1', 'image_url__26': None, 'deleted_at__26': None, 'content__26': '일주일 진짜 빠르다', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'user_id__26': '1', 'embed_index__26': None, 'has_image__26': 0, 'is_delivered__27': 1, 'couple_id__27': '1', 'image_url__27': None, 'deleted_at__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'user_id__27': '2', 'embed_index__27': None, 'has_image__27': 0, 'is_delivered__28': 1, 'couple_id__28': '1', 'image_url__28': None, 'deleted_at__28': None, 'content__28': '너 있어서 든든했어', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'user_id__28': '1', 'embed_index__28': None, 'has_image__28': 0, 'is_delivered__29': 1, 'couple_id__29': '1', 'image_url__29': None, 'deleted_at__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'user_id__29': '2', 'embed_index__29': None, 'has_image__29': 0}
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s] {}
[2025-07-14 18:09:11][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1'}
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:09:14][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:09:14][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:09:14][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:09:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id': '1', 'summary': '지민 values open and effective communication in their relationships, prioritizing meaningful dialogue. When conflicts arise, they prefer to remain calm ... (244 characters truncated) ... nected. Ultimately, they seek a deep and profound connection with their partner, striving for a relationship built on mutual understanding and trust.', 'created_at': datetime.datetime(2025, 7, 14, 9, 9, 14, 215882), 'updated_at': datetime.datetime(2025, 7, 14, 9, 9, 14, 215885)}
[2025-07-14 18:09:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:14][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:09:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:14][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:14][INFO][sqlalchemy.engine.Engine] [cached since 2.905s ago] {'user_id_1': '2'}
[2025-07-14 18:09:14][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:14][INFO][sqlalchemy.engine.Engine] [cached since 2.904s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:09:16][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:09:17][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:17][INFO][sqlalchemy.engine.Engine] [cached since 2.797s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:09:17][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:09:17][INFO][sqlalchemy.engine.Engine] [cached since 2.798s ago] {'user_id': '2', 'summary': '수아 values trust as a fundamental aspect of their relationships, ensuring that a strong sense of reliability is maintained. In times of conflict, they ... (259 characters truncated) ...  with personal space. Overall, they seek a relationship characterized by balanced independence, where mutual support coexists with individual growth.', 'created_at': datetime.datetime(2025, 7, 14, 9, 9, 17, 14296), 'updated_at': datetime.datetime(2025, 7, 14, 9, 9, 17, 14300)}
[2025-07-14 18:09:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:17][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:09:17][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:09:17][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:09:23][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:09:23][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:09:23][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:09:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 24, 948638), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 24, 948641), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 24, 982478)}
[2025-07-14 18:09:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'choice_id__0': 2, 'question_id__0': 1, 'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 9, 23, 785807), 'user_id__1': '1', 'choice_id__1': 8, 'question_id__1': 2, 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 9, 23, 785832), 'user_id__2': '1', 'choice_id__2': 13, 'question_id__2': 3, 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 9, 23, 785844), 'user_id__3': '1', 'choice_id__3': 21, 'question_id__3': 4, 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 9, 23, 785856), 'user_id__4': '1', 'choice_id__4': 26, 'question_id__4': 5, 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 9, 23, 785869), 'user_id__5': '2', 'choice_id__5': 1, 'question_id__5': 1, 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 9, 23, 785878), 'user_id__6': '2', 'choice_id__6': 9, 'question_id__6': 2, 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 9, 23, 785888), 'user_id__7': '2', 'choice_id__7': 16, 'question_id__7': 3, 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 9, 23, 785899), 'user_id__8': '2', 'choice_id__8': 20, 'question_id__8': 4, 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 9, 23, 785910), 'user_id__9': '2', 'choice_id__9': 25, 'question_id__9': 5, 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 9, 23, 785922)}
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__2': '1', 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__4': '1', 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__6': '1', 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__7': '1', 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__9': '1', 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__11': '1', 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1', 'emotion__12': '애정' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__15': '2', 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__17': '2', 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__19': '2', 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__21': '2', 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__23': '2', 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__25': '2', 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'is_delivered__0': 1, 'image_url__0': None, 'deleted_at__0': None, 'couple_id__0': '1', 'has_image__0': 0, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'embed_index__0': None, 'user_id__1': '2', 'is_delivered__1': 1, 'image_url__1': None, 'deleted_at__1': None, 'couple_id__1': '1', 'has_image__1': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'embed_index__1': None, 'user_id__2': '1', 'is_delivered__2': 1, 'image_url__2': None, 'deleted_at__2': None, 'couple_id__2': '1', 'has_image__2': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'embed_index__2': None, 'user_id__3': '2', 'is_delivered__3': 1, 'image_url__3': None, 'deleted_at__3': None, 'couple_id__3': '1', 'has_image__3': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'embed_index__3': None, 'user_id__4': '2', 'is_delivered__4': 1, 'image_url__4': None, 'deleted_at__4': None, 'couple_id__4': '1', 'has_image__4': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'content__4': '어제 약속했는데 통화 못했네 😕', 'embed_index__4': None, 'user_id__5': '1', 'is_delivered__5': 1, 'image_url__5': None, 'deleted_at__5': None, 'couple_id__5': '1' ... 170 parameters truncated ... 'couple_id__24': '1', 'has_image__24': 0, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'content__24': '너랑 시간 보내는 거 제일 좋아', 'embed_index__24': None, 'user_id__25': '2', 'is_delivered__25': 1, 'image_url__25': None, 'deleted_at__25': None, 'couple_id__25': '1', 'has_image__25': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'content__25': '나도야~ 🥰', 'embed_index__25': None, 'user_id__26': '1', 'is_delivered__26': 1, 'image_url__26': None, 'deleted_at__26': None, 'couple_id__26': '1', 'has_image__26': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'content__26': '일주일 진짜 빠르다', 'embed_index__26': None, 'user_id__27': '2', 'is_delivered__27': 1, 'image_url__27': None, 'deleted_at__27': None, 'couple_id__27': '1', 'has_image__27': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'embed_index__27': None, 'user_id__28': '1', 'is_delivered__28': 1, 'image_url__28': None, 'deleted_at__28': None, 'couple_id__28': '1', 'has_image__28': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'content__28': '너 있어서 든든했어', 'embed_index__28': None, 'user_id__29': '2', 'is_delivered__29': 1, 'image_url__29': None, 'deleted_at__29': None, 'couple_id__29': '1', 'has_image__29': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'embed_index__29': None}
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s] {}
[2025-07-14 18:09:25][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {'user_id_1': '1'}
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:09:28][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:09:28][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:09:28][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:09:28][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id': '1', 'summary': '지민 values open and effective communication in relationships, prioritizing clear dialogue to maintain strong connections. When conflicts arise, they p ... (265 characters truncated) ...  regular interaction to foster closeness. Ultimately, they seek deep, meaningful relationships that emphasize understanding and emotional connection.', 'created_at': datetime.datetime(2025, 7, 14, 9, 9, 28, 20587), 'updated_at': datetime.datetime(2025, 7, 14, 9, 9, 28, 20594)}
[2025-07-14 18:09:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:28][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:09:28][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:28][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:28][INFO][sqlalchemy.engine.Engine] [cached since 2.74s ago] {'user_id_1': '2'}
[2025-07-14 18:09:28][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:28][INFO][sqlalchemy.engine.Engine] [cached since 2.74s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:09:30][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:09:30][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:30][INFO][sqlalchemy.engine.Engine] [cached since 2.445s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:09:30][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:09:30][INFO][sqlalchemy.engine.Engine] [cached since 2.442s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, prioritizing reliability and honesty. In times of conflict, she prefers to wait it out, allow ... (225 characters truncated) ... ed connection that respects personal space. Overall, 수아 seeks a relationship with balanced independence, valuing both closeness and personal freedom.', 'created_at': datetime.datetime(2025, 7, 14, 9, 9, 30, 463009), 'updated_at': datetime.datetime(2025, 7, 14, 9, 9, 30, 463012)}
[2025-07-14 18:09:30][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:30][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:09:30][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:09:30][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:09:31][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:09:31][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:09:31][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:31][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00076s] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:32][INFO][sqlalchemy.engine.Engine] [no key 0.00038s] {}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 33, 290453), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 33, 290458), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 33, 325616)}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'question_id__0': 1, 'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 9, 32, 49521), 'choice_id__0': 2, 'user_id__1': '1', 'question_id__1': 2, 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 9, 32, 49556), 'choice_id__1': 8, 'user_id__2': '1', 'question_id__2': 3, 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 9, 32, 49572), 'choice_id__2': 13, 'user_id__3': '1', 'question_id__3': 4, 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 9, 32, 49588), 'choice_id__3': 21, 'user_id__4': '1', 'question_id__4': 5, 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 9, 32, 49604), 'choice_id__4': 26, 'user_id__5': '2', 'question_id__5': 1, 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 9, 32, 49617), 'choice_id__5': 1, 'user_id__6': '2', 'question_id__6': 2, 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 9, 32, 49629), 'choice_id__6': 9, 'user_id__7': '2', 'question_id__7': 3, 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 9, 32, 49643), 'choice_id__7': 16, 'user_id__8': '2', 'question_id__8': 4, 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 9, 32, 49658), 'choice_id__8': 20, 'user_id__9': '2', 'question_id__9': 5, 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 9, 32, 49674), 'choice_id__9': 25}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__1': '기대감', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__2': '미안함', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__3': '죄책감', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__4': '사랑', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__5': '다정함', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__6': '친밀감', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__7': '억울함', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__8': '서운함', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__9': '행복', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__10': '감사', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__11': '신뢰', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__12': '애정', 'user_id__12': '1' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__15': '서운함', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__16': '실망감', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__17': '이해', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__18': '다정함', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__19': '호감', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__20': '편안함', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'emotion__21': '기대감', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__22': '불만', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__23': '기쁨', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__24': '감동', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'emotion__25': '사랑', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__26': '안정감', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'user_id__0': '1', 'has_image__0': 0, 'is_delivered__0': 1, 'image_url__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'deleted_at__0': None, 'couple_id__0': '1', 'embed_index__0': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'user_id__1': '2', 'has_image__1': 0, 'is_delivered__1': 1, 'image_url__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'deleted_at__1': None, 'couple_id__1': '1', 'embed_index__1': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'user_id__2': '1', 'has_image__2': 0, 'is_delivered__2': 1, 'image_url__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'deleted_at__2': None, 'couple_id__2': '1', 'embed_index__2': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'user_id__3': '2', 'has_image__3': 0, 'is_delivered__3': 1, 'image_url__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'deleted_at__3': None, 'couple_id__3': '1', 'embed_index__3': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'user_id__4': '2', 'has_image__4': 0, 'is_delivered__4': 1, 'image_url__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'deleted_at__4': None, 'couple_id__4': '1', 'embed_index__4': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'user_id__5': '1', 'has_image__5': 0, 'is_delivered__5': 1, 'image_url__5': None ... 170 parameters truncated ... 'image_url__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'deleted_at__24': None, 'couple_id__24': '1', 'embed_index__24': None, 'content__25': '나도야~ 🥰', 'user_id__25': '2', 'has_image__25': 0, 'is_delivered__25': 1, 'image_url__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'deleted_at__25': None, 'couple_id__25': '1', 'embed_index__25': None, 'content__26': '일주일 진짜 빠르다', 'user_id__26': '1', 'has_image__26': 0, 'is_delivered__26': 1, 'image_url__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'deleted_at__26': None, 'couple_id__26': '1', 'embed_index__26': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'user_id__27': '2', 'has_image__27': 0, 'is_delivered__27': 1, 'image_url__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'deleted_at__27': None, 'couple_id__27': '1', 'embed_index__27': None, 'content__28': '너 있어서 든든했어', 'user_id__28': '1', 'has_image__28': 0, 'is_delivered__28': 1, 'image_url__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'deleted_at__28': None, 'couple_id__28': '1', 'embed_index__28': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'user_id__29': '2', 'has_image__29': 0, 'is_delivered__29': 1, 'image_url__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'deleted_at__29': None, 'couple_id__29': '1', 'embed_index__29': None}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s] {}
[2025-07-14 18:09:33][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id_1': '1'}
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:09:36][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:09:36][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:36][INFO][sqlalchemy.engine.Engine] [generated in 0.00026s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:09:36][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:09:36][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'user_id': '1', 'summary': '지민 values open and honest communication in relationships, making it a priority to maintain clear dialogue with their partner. When conflicts arise, t ... (230 characters truncated) ... eking regular interaction to foster closeness. Ultimately, they strive for a deep, meaningful connection that goes beyond surface-level interactions.', 'created_at': datetime.datetime(2025, 7, 14, 9, 9, 36, 132472), 'updated_at': datetime.datetime(2025, 7, 14, 9, 9, 36, 132476)}
[2025-07-14 18:09:36][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:36][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:09:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:36][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:36][INFO][sqlalchemy.engine.Engine] [cached since 2.514s ago] {'user_id_1': '2'}
[2025-07-14 18:09:36][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:36][INFO][sqlalchemy.engine.Engine] [cached since 2.509s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:09:39][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:09:39][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:39][INFO][sqlalchemy.engine.Engine] [cached since 3.17s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:09:39][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:09:39][INFO][sqlalchemy.engine.Engine] [cached since 3.168s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships and prefers to build strong, reliable connections with others. When conflicts arise, she tends ... (350 characters truncated) ... l, 수아 seeks a relationship characterized by balanced independence, where both partners have room to grow individually while maintaining a close bond.', 'created_at': datetime.datetime(2025, 7, 14, 9, 9, 39, 300502), 'updated_at': datetime.datetime(2025, 7, 14, 9, 9, 39, 300507)}
[2025-07-14 18:09:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:39][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:09:39][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:09:39][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:09:40][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:09:40][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:09:40][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:09:40][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:09:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 41, 989538), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 41, 989540), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 42, 30219)}
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'custom_input__0': None, 'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 9, 40, 680105), 'question_id__0': 1, 'user_id__1': '1', 'custom_input__1': None, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 9, 40, 680119), 'question_id__1': 2, 'user_id__2': '1', 'custom_input__2': None, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 9, 40, 680127), 'question_id__2': 3, 'user_id__3': '1', 'custom_input__3': None, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 9, 40, 680135), 'question_id__3': 4, 'user_id__4': '1', 'custom_input__4': None, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 9, 40, 680143), 'question_id__4': 5, 'user_id__5': '2', 'custom_input__5': None, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 9, 40, 680149), 'question_id__5': 1, 'user_id__6': '2', 'custom_input__6': None, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 9, 40, 680155), 'question_id__6': 2, 'user_id__7': '2', 'custom_input__7': None, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 9, 40, 680162), 'question_id__7': 3, 'user_id__8': '2', 'custom_input__8': None, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 9, 40, 680170), 'question_id__8': 4, 'user_id__9': '2', 'custom_input__9': None, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 9, 40, 680177), 'question_id__9': 5}
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'user_id__0': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'user_id__1': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'user_id__2': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'user_id__3': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'user_id__4': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'user_id__5': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'user_id__6': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'user_id__7': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'user_id__8': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'user_id__9': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'user_id__10': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'user_id__11': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'user_id__14': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'user_id__15': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'user_id__16': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'user_id__17': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'user_id__18': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'user_id__19': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'user_id__20': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'user_id__21': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'user_id__22': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'user_id__23': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'user_id__24': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'user_id__25': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'user_id__26': '2'}
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'image_url__0': None, 'user_id__0': '1', 'has_image__0': 0, 'is_delivered__0': 1, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'embed_index__0': None, 'couple_id__0': '1', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'image_url__1': None, 'user_id__1': '2', 'has_image__1': 0, 'is_delivered__1': 1, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'embed_index__1': None, 'couple_id__1': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'image_url__2': None, 'user_id__2': '1', 'has_image__2': 0, 'is_delivered__2': 1, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'embed_index__2': None, 'couple_id__2': '1', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'image_url__3': None, 'user_id__3': '2', 'has_image__3': 0, 'is_delivered__3': 1, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'embed_index__3': None, 'couple_id__3': '1', 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'image_url__4': None, 'user_id__4': '2', 'has_image__4': 0, 'is_delivered__4': 1, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'embed_index__4': None, 'couple_id__4': '1', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'deleted_at__5': None, 'image_url__5': None, 'user_id__5': '1', 'has_image__5': 0 ... 170 parameters truncated ... 'has_image__24': 0, 'is_delivered__24': 1, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'embed_index__24': None, 'couple_id__24': '1', 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'image_url__25': None, 'user_id__25': '2', 'has_image__25': 0, 'is_delivered__25': 1, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'embed_index__25': None, 'couple_id__25': '1', 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'image_url__26': None, 'user_id__26': '1', 'has_image__26': 0, 'is_delivered__26': 1, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'embed_index__26': None, 'couple_id__26': '1', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'image_url__27': None, 'user_id__27': '2', 'has_image__27': 0, 'is_delivered__27': 1, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'embed_index__27': None, 'couple_id__27': '1', 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'image_url__28': None, 'user_id__28': '1', 'has_image__28': 0, 'is_delivered__28': 1, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'embed_index__28': None, 'couple_id__28': '1', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None, 'image_url__29': None, 'user_id__29': '2', 'has_image__29': 0, 'is_delivered__29': 1, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'embed_index__29': None, 'couple_id__29': '1'}
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {}
[2025-07-14 18:09:42][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1'}
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:09:45][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:09:45][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:09:45][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:09:45][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {'user_id': '1', 'summary': '지민 values open and effective communication in relationships, prioritizing honest and meaningful conversations. During conflicts, they prefer to cool  ... (226 characters truncated) ... ning a consistent and close connection. Overall, they seek a deep emotional bond, emphasizing intimacy and understanding in their ideal relationship.', 'created_at': datetime.datetime(2025, 7, 14, 9, 9, 45, 61601), 'updated_at': datetime.datetime(2025, 7, 14, 9, 9, 45, 61604)}
[2025-07-14 18:09:45][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:45][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:09:45][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:45][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:45][INFO][sqlalchemy.engine.Engine] [cached since 2.816s ago] {'user_id_1': '2'}
[2025-07-14 18:09:45][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:45][INFO][sqlalchemy.engine.Engine] [cached since 2.816s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:09:47][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:09:47][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:47][INFO][sqlalchemy.engine.Engine] [cached since 2.295s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:09:47][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:09:47][INFO][sqlalchemy.engine.Engine] [cached since 2.295s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of their relationships, prioritizing honesty and reliability. When conflicts arise, they prefer to wait it out, all ... (242 characters truncated) ... imately, they seek a relationship characterized by balanced independence, where both partners have room to grow individually while staying connected.', 'created_at': datetime.datetime(2025, 7, 14, 9, 9, 47, 356335), 'updated_at': datetime.datetime(2025, 7, 14, 9, 9, 47, 356338)}
[2025-07-14 18:09:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:47][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:09:47][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:09:47][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:09:56][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:09:56][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:09:56][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:09:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00039s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 57, 972578), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 57, 972581), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:09:57][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 9, 58, 7002)}
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00004s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'user_id__0': '1', 'question_id__0': 1, 'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 9, 56, 810668), 'custom_input__1': None, 'user_id__1': '1', 'question_id__1': 2, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 9, 56, 810682), 'custom_input__2': None, 'user_id__2': '1', 'question_id__2': 3, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 9, 56, 810691), 'custom_input__3': None, 'user_id__3': '1', 'question_id__3': 4, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 9, 56, 810699), 'custom_input__4': None, 'user_id__4': '1', 'question_id__4': 5, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 9, 56, 810708), 'custom_input__5': None, 'user_id__5': '2', 'question_id__5': 1, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 9, 56, 810714), 'custom_input__6': None, 'user_id__6': '2', 'question_id__6': 2, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 9, 56, 810720), 'custom_input__7': None, 'user_id__7': '2', 'question_id__7': 3, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 9, 56, 810727), 'custom_input__8': None, 'user_id__8': '2', 'question_id__8': 4, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 9, 56, 810734), 'custom_input__9': None, 'user_id__9': '2', 'question_id__9': 5, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 9, 56, 810742)}
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s (insertmanyvalues) 1/1 (ordered)] {'image_url__0': None, 'deleted_at__0': None, 'user_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'couple_id__0': '1', 'embed_index__0': None, 'has_image__0': 0, 'is_delivered__0': 1, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__1': None, 'deleted_at__1': None, 'user_id__1': '2', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'couple_id__1': '1', 'embed_index__1': None, 'has_image__1': 0, 'is_delivered__1': 1, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__2': None, 'deleted_at__2': None, 'user_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'couple_id__2': '1', 'embed_index__2': None, 'has_image__2': 0, 'is_delivered__2': 1, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__3': None, 'deleted_at__3': None, 'user_id__3': '2', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'couple_id__3': '1', 'embed_index__3': None, 'has_image__3': 0, 'is_delivered__3': 1, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__4': None, 'deleted_at__4': None, 'user_id__4': '2', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'couple_id__4': '1', 'embed_index__4': None, 'has_image__4': 0, 'is_delivered__4': 1, 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__5': None, 'deleted_at__5': None, 'user_id__5': '1', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'couple_id__5': '1' ... 170 parameters truncated ... 'couple_id__24': '1', 'embed_index__24': None, 'has_image__24': 0, 'is_delivered__24': 1, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'image_url__25': None, 'deleted_at__25': None, 'user_id__25': '2', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'couple_id__25': '1', 'embed_index__25': None, 'has_image__25': 0, 'is_delivered__25': 1, 'content__25': '나도야~ 🥰', 'image_url__26': None, 'deleted_at__26': None, 'user_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'couple_id__26': '1', 'embed_index__26': None, 'has_image__26': 0, 'is_delivered__26': 1, 'content__26': '일주일 진짜 빠르다', 'image_url__27': None, 'deleted_at__27': None, 'user_id__27': '2', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'couple_id__27': '1', 'embed_index__27': None, 'has_image__27': 0, 'is_delivered__27': 1, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__28': None, 'deleted_at__28': None, 'user_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'couple_id__28': '1', 'embed_index__28': None, 'has_image__28': 0, 'is_delivered__28': 1, 'content__28': '너 있어서 든든했어', 'image_url__29': None, 'deleted_at__29': None, 'user_id__29': '2', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'couple_id__29': '1', 'embed_index__29': None, 'has_image__29': 0, 'is_delivered__29': 1, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘'}
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s] {}
[2025-07-14 18:09:58][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00032s] {'user_id_1': '1'}
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:09:58][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:10:00][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:10:00][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:10:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00036s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:10:00][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:10:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id': '1', 'summary': '지민 values open communication in relationships and believes in addressing conflicts calmly before engaging in a discussion. They express affection thr ... (206 characters truncated) ... y a deep connection, aiming for emotional intimacy and understanding. Overall, 지민 prioritizes both transparency and closeness in their relationships.', 'created_at': datetime.datetime(2025, 7, 14, 9, 10, 0, 659339), 'updated_at': datetime.datetime(2025, 7, 14, 9, 10, 0, 659345)}
[2025-07-14 18:10:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:00][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:10:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:00][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:10:00][INFO][sqlalchemy.engine.Engine] [cached since 2.473s ago] {'user_id_1': '2'}
[2025-07-14 18:10:00][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:10:00][INFO][sqlalchemy.engine.Engine] [cached since 2.488s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:10:03][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:10:03][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:10:03][INFO][sqlalchemy.engine.Engine] [cached since 2.776s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:10:03][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:10:03][INFO][sqlalchemy.engine.Engine] [cached since 2.773s ago] {'user_id': '2', 'summary': "수아 values trust as the foundation of her relationships, indicating that honesty and reliability are crucial to her. In times of conflict, she prefers ... (333 characters truncated) ... ent or distant. 수아's ideal relationship is one of balanced independence, where partners maintain their individuality while being mutually supportive.", 'created_at': datetime.datetime(2025, 7, 14, 9, 10, 3, 432197), 'updated_at': datetime.datetime(2025, 7, 14, 9, 10, 3, 432203)}
[2025-07-14 18:10:03][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:03][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:10:03][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:10:03][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:10:04][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:10:04][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:10:04][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:10:04][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:10:05][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 10, 6, 117586), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 10, 6, 117589), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 10, 6, 152513)}
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00004s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 10, 4, 821536), 'choice_id__0': 2, 'custom_input__0': None, 'user_id__1': '1', 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 10, 4, 821552), 'choice_id__1': 8, 'custom_input__1': None, 'user_id__2': '1', 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 10, 4, 821561), 'choice_id__2': 13, 'custom_input__2': None, 'user_id__3': '1', 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 10, 4, 821569), 'choice_id__3': 21, 'custom_input__3': None, 'user_id__4': '1', 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 10, 4, 821578), 'choice_id__4': 26, 'custom_input__4': None, 'user_id__5': '2', 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 10, 4, 821584), 'choice_id__5': 1, 'custom_input__5': None, 'user_id__6': '2', 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 10, 4, 821591), 'choice_id__6': 9, 'custom_input__6': None, 'user_id__7': '2', 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 10, 4, 821598), 'choice_id__7': 16, 'custom_input__7': None, 'user_id__8': '2', 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 10, 4, 821605), 'choice_id__8': 20, 'custom_input__8': None, 'user_id__9': '2', 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 10, 4, 821614), 'choice_id__9': 25, 'custom_input__9': None}
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__12': '너에 대한 애정이 넘쳤어.', 'emotion__12': '애정' ... 8 parameters truncated ... 'user_id__14': '2', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'embed_index__0': None, 'user_id__0': '1', 'deleted_at__0': None, 'has_image__0': 0, 'couple_id__0': '1', 'is_delivered__0': 1, 'image_url__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'embed_index__1': None, 'user_id__1': '2', 'deleted_at__1': None, 'has_image__1': 0, 'couple_id__1': '1', 'is_delivered__1': 1, 'image_url__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'embed_index__2': None, 'user_id__2': '1', 'deleted_at__2': None, 'has_image__2': 0, 'couple_id__2': '1', 'is_delivered__2': 1, 'image_url__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'embed_index__3': None, 'user_id__3': '2', 'deleted_at__3': None, 'has_image__3': 0, 'couple_id__3': '1', 'is_delivered__3': 1, 'image_url__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'embed_index__4': None, 'user_id__4': '2', 'deleted_at__4': None, 'has_image__4': 0, 'couple_id__4': '1', 'is_delivered__4': 1, 'image_url__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'embed_index__5': None, 'user_id__5': '1', 'deleted_at__5': None, 'has_image__5': 0, 'couple_id__5': '1' ... 170 parameters truncated ... 'couple_id__24': '1', 'is_delivered__24': 1, 'image_url__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'embed_index__25': None, 'user_id__25': '2', 'deleted_at__25': None, 'has_image__25': 0, 'couple_id__25': '1', 'is_delivered__25': 1, 'image_url__25': None, 'content__25': '나도야~ 🥰', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'embed_index__26': None, 'user_id__26': '1', 'deleted_at__26': None, 'has_image__26': 0, 'couple_id__26': '1', 'is_delivered__26': 1, 'image_url__26': None, 'content__26': '일주일 진짜 빠르다', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'embed_index__27': None, 'user_id__27': '2', 'deleted_at__27': None, 'has_image__27': 0, 'couple_id__27': '1', 'is_delivered__27': 1, 'image_url__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'embed_index__28': None, 'user_id__28': '1', 'deleted_at__28': None, 'has_image__28': 0, 'couple_id__28': '1', 'is_delivered__28': 1, 'image_url__28': None, 'content__28': '너 있어서 든든했어', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'embed_index__29': None, 'user_id__29': '2', 'deleted_at__29': None, 'has_image__29': 0, 'couple_id__29': '1', 'is_delivered__29': 1, 'image_url__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0)}
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {}
[2025-07-14 18:10:06][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00042s] {'user_id_1': '1'}
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:10:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:10:09][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:10:09][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:10:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:10:09][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:10:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id': '1', 'summary': '지민 values open communication in relationships and likes to address issues calmly before discussing them. They express affection primarily through wor ... (237 characters truncated) ... ection, emphasizing emotional intimacy and understanding. Overall, 지민 prioritizes clear communication and emotional closeness in their relationships.', 'created_at': datetime.datetime(2025, 7, 14, 9, 10, 9, 282522), 'updated_at': datetime.datetime(2025, 7, 14, 9, 10, 9, 282526)}
[2025-07-14 18:10:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:09][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:10:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:10:09][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:10:09][INFO][sqlalchemy.engine.Engine] [cached since 2.94s ago] {'user_id_1': '2'}
[2025-07-14 18:10:09][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:10:09][INFO][sqlalchemy.engine.Engine] [cached since 2.941s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:10:11][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:10:11][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:10:11][INFO][sqlalchemy.engine.Engine] [cached since 2.496s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:10:11][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:10:11][INFO][sqlalchemy.engine.Engine] [cached since 2.495s ago] {'user_id': '2', 'summary': '수아 tends to value trust highly in their relationships, emphasizing honesty and reliability. When conflicts arise, they prefer to wait things out and  ... (275 characters truncated) ... rall, 수아 seeks a relationship that allows for balanced independence, where both partners can enjoy their individual pursuits while staying connected.', 'created_at': datetime.datetime(2025, 7, 14, 9, 10, 11, 777973), 'updated_at': datetime.datetime(2025, 7, 14, 9, 10, 11, 777977)}
[2025-07-14 18:10:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:10:11][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:10:11][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:10:11][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:14:53][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:14:53][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:14:53][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:14:54][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:14:54][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:14:54][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:14:59][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:14:59][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:14:59][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:14:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:15:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:01][INFO][sqlalchemy.engine.Engine] [no key 0.00223s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00102s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 2, 450514), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 2, 450518), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 2, 483339)}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 15, 0, 296477), 'custom_input__0': None, 'choice_id__0': 2, 'user_id__0': '1', 'question_id__0': 1, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 15, 0, 296503), 'custom_input__1': None, 'choice_id__1': 8, 'user_id__1': '1', 'question_id__1': 2, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 15, 0, 296517), 'custom_input__2': None, 'choice_id__2': 13, 'user_id__2': '1', 'question_id__2': 3, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 15, 0, 296531), 'custom_input__3': None, 'choice_id__3': 21, 'user_id__3': '1', 'question_id__3': 4, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 15, 0, 296548), 'custom_input__4': None, 'choice_id__4': 26, 'user_id__4': '1', 'question_id__4': 5, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 15, 0, 296559), 'custom_input__5': None, 'choice_id__5': 1, 'user_id__5': '2', 'question_id__5': 1, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 15, 0, 296571), 'custom_input__6': None, 'choice_id__6': 9, 'user_id__6': '2', 'question_id__6': 2, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 15, 0, 296583), 'custom_input__7': None, 'choice_id__7': 16, 'user_id__7': '2', 'question_id__7': 3, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 15, 0, 296596), 'custom_input__8': None, 'choice_id__8': 20, 'user_id__8': '2', 'question_id__8': 4, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 15, 0, 296609), 'custom_input__9': None, 'choice_id__9': 25, 'user_id__9': '2', 'question_id__9': 5}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__12': '너에 대한 애정이 넘쳤어.', 'user_id__12': '1' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__14': '바쁨', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감'}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s (insertmanyvalues) 1/1 (ordered)] {'image_url__0': None, 'is_delivered__0': 1, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'embed_index__0': None, 'user_id__0': '1', 'has_image__0': 0, 'couple_id__0': '1', 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'image_url__1': None, 'is_delivered__1': 1, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'embed_index__1': None, 'user_id__1': '2', 'has_image__1': 0, 'couple_id__1': '1', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'image_url__2': None, 'is_delivered__2': 1, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'embed_index__2': None, 'user_id__2': '1', 'has_image__2': 0, 'couple_id__2': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'image_url__3': None, 'is_delivered__3': 1, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'embed_index__3': None, 'user_id__3': '2', 'has_image__3': 0, 'couple_id__3': '1', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'image_url__4': None, 'is_delivered__4': 1, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'embed_index__4': None, 'user_id__4': '2', 'has_image__4': 0, 'couple_id__4': '1', 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'image_url__5': None, 'is_delivered__5': 1, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'embed_index__5': None, 'user_id__5': '1' ... 170 parameters truncated ... 'user_id__24': '1', 'has_image__24': 0, 'couple_id__24': '1', 'content__24': '너랑 시간 보내는 거 제일 좋아', 'deleted_at__24': None, 'image_url__25': None, 'is_delivered__25': 1, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'embed_index__25': None, 'user_id__25': '2', 'has_image__25': 0, 'couple_id__25': '1', 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'image_url__26': None, 'is_delivered__26': 1, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'embed_index__26': None, 'user_id__26': '1', 'has_image__26': 0, 'couple_id__26': '1', 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'image_url__27': None, 'is_delivered__27': 1, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'embed_index__27': None, 'user_id__27': '2', 'has_image__27': 0, 'couple_id__27': '1', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'image_url__28': None, 'is_delivered__28': 1, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'embed_index__28': None, 'user_id__28': '1', 'has_image__28': 0, 'couple_id__28': '1', 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'image_url__29': None, 'is_delivered__29': 1, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'embed_index__29': None, 'user_id__29': '2', 'has_image__29': 0, 'couple_id__29': '1', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {}
[2025-07-14 18:15:02][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'user_id_1': '1'}
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:06][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:06][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00033s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:06][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:06][INFO][sqlalchemy.engine.Engine] [generated in 0.00024s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, emphasizing the importance of open and honest dialogue. When conflicts arise, they prefer to remain  ... (243 characters truncated) ... lar interaction helps them feel connected. Ultimately, they seek a deep and meaningful connection, prioritizing emotional intimacy and understanding.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 6, 742205), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 6, 742212)}
[2025-07-14 18:15:06][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:06][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:15:06][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:06][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:06][INFO][sqlalchemy.engine.Engine] [cached since 3.979s ago] {'user_id_1': '2'}
[2025-07-14 18:15:06][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:06][INFO][sqlalchemy.engine.Engine] [cached since 3.979s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:11][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:11][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:11][INFO][sqlalchemy.engine.Engine] [cached since 4.927s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:11][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:11][INFO][sqlalchemy.engine.Engine] [cached since 4.925s ago] {'user_id': '2', 'summary': '수아 values trust as a cornerstone in relationships, preferring connections built on mutual reliability. When conflicts arise, they tend to adopt a pat ... (276 characters truncated) ... ngagement with personal space. Ultimately, 수아 seeks a relationship that allows for both closeness and independence, emphasizing a harmonious balance.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 11, 666567), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 11, 666576)}
[2025-07-14 18:15:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:11][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:15:11][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:15:11][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:15:12][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:15:12][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:15:12][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:12][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:13][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 14, 421707), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 14, 421710), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 14, 455678)}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00004s (insertmanyvalues) 1/1 (ordered)] {'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 15, 13, 106511), 'question_id__0': 1, 'user_id__0': '1', 'custom_input__0': None, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 15, 13, 106529), 'question_id__1': 2, 'user_id__1': '1', 'custom_input__1': None, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 15, 13, 106542), 'question_id__2': 3, 'user_id__2': '1', 'custom_input__2': None, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 15, 13, 106552), 'question_id__3': 4, 'user_id__3': '1', 'custom_input__3': None, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 15, 13, 106562), 'question_id__4': 5, 'user_id__4': '1', 'custom_input__4': None, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 15, 13, 106569), 'question_id__5': 1, 'user_id__5': '2', 'custom_input__5': None, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 15, 13, 106576), 'question_id__6': 2, 'user_id__6': '2', 'custom_input__6': None, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 15, 13, 106585), 'question_id__7': 3, 'user_id__7': '2', 'custom_input__7': None, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 15, 13, 106593), 'question_id__8': 4, 'user_id__8': '2', 'custom_input__8': None, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 15, 13, 106603), 'question_id__9': 5, 'user_id__9': '2', 'custom_input__9': None}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__2': '1', 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__4': '1', 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__6': '1', 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__7': '1', 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__9': '1', 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__11': '1', 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1', 'emotion__12': '애정' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__15': '2', 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__17': '2', 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__19': '2', 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__21': '2', 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__23': '2', 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__25': '2', 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s (insertmanyvalues) 1/1 (ordered)] {'deleted_at__0': None, 'image_url__0': None, 'embed_index__0': None, 'is_delivered__0': 1, 'user_id__0': '1', 'has_image__0': 0, 'couple_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__1': None, 'image_url__1': None, 'embed_index__1': None, 'is_delivered__1': 1, 'user_id__1': '2', 'has_image__1': 0, 'couple_id__1': '1', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__2': None, 'image_url__2': None, 'embed_index__2': None, 'is_delivered__2': 1, 'user_id__2': '1', 'has_image__2': 0, 'couple_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__3': None, 'image_url__3': None, 'embed_index__3': None, 'is_delivered__3': 1, 'user_id__3': '2', 'has_image__3': 0, 'couple_id__3': '1', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__4': None, 'image_url__4': None, 'embed_index__4': None, 'is_delivered__4': 1, 'user_id__4': '2', 'has_image__4': 0, 'couple_id__4': '1', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__5': None, 'image_url__5': None, 'embed_index__5': None, 'is_delivered__5': 1, 'user_id__5': '1' ... 170 parameters truncated ... 'user_id__24': '1', 'has_image__24': 0, 'couple_id__24': '1', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'content__24': '너랑 시간 보내는 거 제일 좋아', 'deleted_at__25': None, 'image_url__25': None, 'embed_index__25': None, 'is_delivered__25': 1, 'user_id__25': '2', 'has_image__25': 0, 'couple_id__25': '1', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'content__25': '나도야~ 🥰', 'deleted_at__26': None, 'image_url__26': None, 'embed_index__26': None, 'is_delivered__26': 1, 'user_id__26': '1', 'has_image__26': 0, 'couple_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'content__26': '일주일 진짜 빠르다', 'deleted_at__27': None, 'image_url__27': None, 'embed_index__27': None, 'is_delivered__27': 1, 'user_id__27': '2', 'has_image__27': 0, 'couple_id__27': '1', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__28': None, 'image_url__28': None, 'embed_index__28': None, 'is_delivered__28': 1, 'user_id__28': '1', 'has_image__28': 0, 'couple_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'content__28': '너 있어서 든든했어', 'deleted_at__29': None, 'image_url__29': None, 'embed_index__29': None, 'is_delivered__29': 1, 'user_id__29': '2', 'has_image__29': 0, 'couple_id__29': '1', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'content__29': '다음 주도 잘 지내보자! 사랑해 😘'}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s] {}
[2025-07-14 18:15:14][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {'user_id_1': '1'}
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:17][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:17][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:17][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id': '1', 'summary': '지민 values open and effective communication in their relationships, ensuring that discussions are a key component of their connection. When conflicts  ... (267 characters truncated) ... ular interaction and engagement. Ultimately, they seek a deep connection, prioritizing emotional depth and understanding in their ideal relationship.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 17, 499620), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 17, 499625)}
[2025-07-14 18:15:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:17][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:15:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:17][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:17][INFO][sqlalchemy.engine.Engine] [cached since 2.851s ago] {'user_id_1': '2'}
[2025-07-14 18:15:17][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:17][INFO][sqlalchemy.engine.Engine] [cached since 2.766s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:20][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:20][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:20][INFO][sqlalchemy.engine.Engine] [cached since 3.284s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:20][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:20][INFO][sqlalchemy.engine.Engine] [cached since 3.285s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, indicating a preference for reliability and honesty. When conflicts arise, she tends to take  ... (335 characters truncated) ... ensuring both partners have space to grow individually. Overall, 수아 seeks a harmonious relationship where both trust and personal freedom are upheld.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 20, 784094), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 20, 784101)}
[2025-07-14 18:15:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:20][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:15:20][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:15:20][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:15:21][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:15:21][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:15:21][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:21][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:22][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 23, 339730), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 23, 339741), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 23, 375752)}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00004s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 15, 22, 124682), 'question_id__0': 1, 'custom_input__0': None, 'choice_id__0': 2, 'user_id__1': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 15, 22, 124698), 'question_id__1': 2, 'custom_input__1': None, 'choice_id__1': 8, 'user_id__2': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 15, 22, 124706), 'question_id__2': 3, 'custom_input__2': None, 'choice_id__2': 13, 'user_id__3': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 15, 22, 124715), 'question_id__3': 4, 'custom_input__3': None, 'choice_id__3': 21, 'user_id__4': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 15, 22, 124723), 'question_id__4': 5, 'custom_input__4': None, 'choice_id__4': 26, 'user_id__5': '2', 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 15, 22, 124729), 'question_id__5': 1, 'custom_input__5': None, 'choice_id__5': 1, 'user_id__6': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 15, 22, 124735), 'question_id__6': 2, 'custom_input__6': None, 'choice_id__6': 9, 'user_id__7': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 15, 22, 124742), 'question_id__7': 3, 'custom_input__7': None, 'choice_id__7': 16, 'user_id__8': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 15, 22, 124750), 'question_id__8': 4, 'custom_input__8': None, 'choice_id__8': 20, 'user_id__9': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 15, 22, 124758), 'question_id__9': 5, 'custom_input__9': None, 'choice_id__9': 25}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__1': '기대감', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__2': '미안함', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__3': '죄책감', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__4': '사랑', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__5': '다정함', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__6': '친밀감', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__7': '억울함', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__8': '서운함', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__9': '행복', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__10': '감사', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__11': '신뢰', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__12': '애정', 'user_id__12': '1' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__15': '서운함', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__16': '실망감', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__17': '이해', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__18': '다정함', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__19': '호감', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__20': '편안함', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'emotion__21': '기대감', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__22': '불만', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__23': '기쁨', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__24': '감동', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'emotion__25': '사랑', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__26': '안정감', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'couple_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'image_url__0': None, 'has_image__0': 0, 'is_delivered__0': 1, 'deleted_at__0': None, 'embed_index__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'user_id__1': '2', 'couple_id__1': '1', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'image_url__1': None, 'has_image__1': 0, 'is_delivered__1': 1, 'deleted_at__1': None, 'embed_index__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'user_id__2': '1', 'couple_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'image_url__2': None, 'has_image__2': 0, 'is_delivered__2': 1, 'deleted_at__2': None, 'embed_index__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'user_id__3': '2', 'couple_id__3': '1', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'image_url__3': None, 'has_image__3': 0, 'is_delivered__3': 1, 'deleted_at__3': None, 'embed_index__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'user_id__4': '2', 'couple_id__4': '1', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'image_url__4': None, 'has_image__4': 0, 'is_delivered__4': 1, 'deleted_at__4': None, 'embed_index__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'user_id__5': '1', 'couple_id__5': '1', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'image_url__5': None, 'has_image__5': 0 ... 170 parameters truncated ... 'has_image__24': 0, 'is_delivered__24': 1, 'deleted_at__24': None, 'embed_index__24': None, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'user_id__25': '2', 'couple_id__25': '1', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'image_url__25': None, 'has_image__25': 0, 'is_delivered__25': 1, 'deleted_at__25': None, 'embed_index__25': None, 'content__25': '나도야~ 🥰', 'user_id__26': '1', 'couple_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'image_url__26': None, 'has_image__26': 0, 'is_delivered__26': 1, 'deleted_at__26': None, 'embed_index__26': None, 'content__26': '일주일 진짜 빠르다', 'user_id__27': '2', 'couple_id__27': '1', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'image_url__27': None, 'has_image__27': 0, 'is_delivered__27': 1, 'deleted_at__27': None, 'embed_index__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'user_id__28': '1', 'couple_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'image_url__28': None, 'has_image__28': 0, 'is_delivered__28': 1, 'deleted_at__28': None, 'embed_index__28': None, 'content__28': '너 있어서 든든했어', 'user_id__29': '2', 'couple_id__29': '1', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'image_url__29': None, 'has_image__29': 0, 'is_delivered__29': 1, 'deleted_at__29': None, 'embed_index__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘'}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {}
[2025-07-14 18:15:23][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'user_id_1': '1'}
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:25][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:25][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:25][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:25][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, prioritizing open and honest dialogue to build strong connections. When conflicts arise, 지민 prefers  ... (300 characters truncated) ...  to maintain closeness. Ultimately, 지민 seeks a deep, meaningful connection in relationships, focusing on emotional intimacy and mutual understanding.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 25, 951517), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 25, 951522)}
[2025-07-14 18:15:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:25][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:15:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:25][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:25][INFO][sqlalchemy.engine.Engine] [cached since 2.296s ago] {'user_id_1': '2'}
[2025-07-14 18:15:25][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:25][INFO][sqlalchemy.engine.Engine] [cached since 2.295s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:28][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:28][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:28][INFO][sqlalchemy.engine.Engine] [cached since 2.507s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:28][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:28][INFO][sqlalchemy.engine.Engine] [cached since 2.507s ago] {'user_id': '2', 'summary': '수아 values trust as a fundamental aspect of her relationships, seeking partners who can establish and maintain this crucial element. When conflicts ar ... (295 characters truncated) ... ion without overwhelming her partner. Ultimately, she seeks a balanced relationship where both partners enjoy independence while remaining connected.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 28, 458117), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 28, 458123)}
[2025-07-14 18:15:28][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:28][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:15:28][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:15:28][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:15:32][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:15:32][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:15:32][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:32][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [generated in 0.00080s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:15:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 34, 13699), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 34, 13702), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 34, 48908)}
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 15, 32, 887092), 'custom_input__0': None, 'choice_id__0': 2, 'user_id__1': '1', 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 15, 32, 887107), 'custom_input__1': None, 'choice_id__1': 8, 'user_id__2': '1', 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 15, 32, 887115), 'custom_input__2': None, 'choice_id__2': 13, 'user_id__3': '1', 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 15, 32, 887123), 'custom_input__3': None, 'choice_id__3': 21, 'user_id__4': '1', 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 15, 32, 887131), 'custom_input__4': None, 'choice_id__4': 26, 'user_id__5': '2', 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 15, 32, 887136), 'custom_input__5': None, 'choice_id__5': 1, 'user_id__6': '2', 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 15, 32, 887142), 'custom_input__6': None, 'choice_id__6': 9, 'user_id__7': '2', 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 15, 32, 887149), 'custom_input__7': None, 'choice_id__7': 16, 'user_id__8': '2', 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 15, 32, 887156), 'custom_input__8': None, 'choice_id__8': 20, 'user_id__9': '2', 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 15, 32, 887164), 'custom_input__9': None, 'choice_id__9': 25}
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'user_id__0': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'user_id__1': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'user_id__2': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'user_id__3': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'user_id__4': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'user_id__5': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'user_id__6': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'user_id__7': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'user_id__8': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'user_id__9': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'user_id__10': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'user_id__11': '1', 'memo__12': '너에 대한 애정이 넘쳤어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'emotion__14': '바쁨', 'user_id__14': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'user_id__15': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'user_id__16': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'user_id__17': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'user_id__18': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'user_id__19': '2', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'user_id__20': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'user_id__21': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'user_id__22': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'user_id__23': '2', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'user_id__24': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'user_id__25': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'user_id__26': '2'}
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s (insertmanyvalues) 1/1 (ordered)] {'couple_id__0': '1', 'user_id__0': '1', 'embed_index__0': None, 'is_delivered__0': 1, 'deleted_at__0': None, 'has_image__0': 0, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'couple_id__1': '1', 'user_id__1': '2', 'embed_index__1': None, 'is_delivered__1': 1, 'deleted_at__1': None, 'has_image__1': 0, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'couple_id__2': '1', 'user_id__2': '1', 'embed_index__2': None, 'is_delivered__2': 1, 'deleted_at__2': None, 'has_image__2': 0, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'couple_id__3': '1', 'user_id__3': '2', 'embed_index__3': None, 'is_delivered__3': 1, 'deleted_at__3': None, 'has_image__3': 0, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'couple_id__4': '1', 'user_id__4': '2', 'embed_index__4': None, 'is_delivered__4': 1, 'deleted_at__4': None, 'has_image__4': 0, 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'couple_id__5': '1', 'user_id__5': '1', 'embed_index__5': None, 'is_delivered__5': 1, 'deleted_at__5': None ... 170 parameters truncated ... 'deleted_at__24': None, 'has_image__24': 0, 'content__24': '너랑 시간 보내는 거 제일 좋아', 'image_url__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'couple_id__25': '1', 'user_id__25': '2', 'embed_index__25': None, 'is_delivered__25': 1, 'deleted_at__25': None, 'has_image__25': 0, 'content__25': '나도야~ 🥰', 'image_url__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'couple_id__26': '1', 'user_id__26': '1', 'embed_index__26': None, 'is_delivered__26': 1, 'deleted_at__26': None, 'has_image__26': 0, 'content__26': '일주일 진짜 빠르다', 'image_url__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'couple_id__27': '1', 'user_id__27': '2', 'embed_index__27': None, 'is_delivered__27': 1, 'deleted_at__27': None, 'has_image__27': 0, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'couple_id__28': '1', 'user_id__28': '1', 'embed_index__28': None, 'is_delivered__28': 1, 'deleted_at__28': None, 'has_image__28': 0, 'content__28': '너 있어서 든든했어', 'image_url__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'couple_id__29': '1', 'user_id__29': '2', 'embed_index__29': None, 'is_delivered__29': 1, 'deleted_at__29': None, 'has_image__29': 0, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'image_url__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0)}
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {}
[2025-07-14 18:15:34][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'user_id_1': '1'}
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:34][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:36][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:36][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:36][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:36][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:36][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, prioritizing open and honest dialogue to foster understanding and connection. In times of conflict,  ... (236 characters truncated) ... eeking to maintain a close bond with their partner. Ultimately, 지민 aspires to build a relationship characterized by a deep and meaningful connection.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 36, 817601), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 36, 817606)}
[2025-07-14 18:15:36][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:36][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:15:36][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:36][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:36][INFO][sqlalchemy.engine.Engine] [cached since 2.491s ago] {'user_id_1': '2'}
[2025-07-14 18:15:36][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:36][INFO][sqlalchemy.engine.Engine] [cached since 2.491s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:39][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:39][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:39][INFO][sqlalchemy.engine.Engine] [cached since 2.494s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:39][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:39][INFO][sqlalchemy.engine.Engine] [cached since 2.493s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of her relationships, suggesting she prioritizes honesty and dependability. When conflicts arise, she prefers to w ... (279 characters truncated) ... th personal space. Overall, 수아 seeks a relationship characterized by balanced independence, where both partners can thrive individually and together.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 39, 310046), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 39, 310049)}
[2025-07-14 18:15:39][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:39][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:15:39][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:15:39][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:15:40][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:15:40][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:15:40][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {}
[2025-07-14 18:15:40][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 41, 878814), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 41, 878818), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 41, 912572)}
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:15:41][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00004s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 15, 40, 769078), 'question_id__0': 1, 'custom_input__0': None, 'choice_id__0': 2, 'user_id__0': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 15, 40, 769093), 'question_id__1': 2, 'custom_input__1': None, 'choice_id__1': 8, 'user_id__1': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 15, 40, 769102), 'question_id__2': 3, 'custom_input__2': None, 'choice_id__2': 13, 'user_id__2': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 15, 40, 769110), 'question_id__3': 4, 'custom_input__3': None, 'choice_id__3': 21, 'user_id__3': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 15, 40, 769118), 'question_id__4': 5, 'custom_input__4': None, 'choice_id__4': 26, 'user_id__4': '1', 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 15, 40, 769124), 'question_id__5': 1, 'custom_input__5': None, 'choice_id__5': 1, 'user_id__5': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 15, 40, 769130), 'question_id__6': 2, 'custom_input__6': None, 'choice_id__6': 9, 'user_id__6': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 15, 40, 769137), 'question_id__7': 3, 'custom_input__7': None, 'choice_id__7': 16, 'user_id__7': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 15, 40, 769145), 'question_id__8': 4, 'custom_input__8': None, 'choice_id__8': 20, 'user_id__8': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 15, 40, 769153), 'question_id__9': 5, 'custom_input__9': None, 'choice_id__9': 25, 'user_id__9': '2'}
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__12': '애정', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'user_id__14': '2', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__0': None, 'is_delivered__0': 1, 'embed_index__0': None, 'couple_id__0': '1', 'deleted_at__0': None, 'user_id__0': '1', 'has_image__0': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__1': None, 'is_delivered__1': 1, 'embed_index__1': None, 'couple_id__1': '1', 'deleted_at__1': None, 'user_id__1': '2', 'has_image__1': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__2': None, 'is_delivered__2': 1, 'embed_index__2': None, 'couple_id__2': '1', 'deleted_at__2': None, 'user_id__2': '1', 'has_image__2': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__3': None, 'is_delivered__3': 1, 'embed_index__3': None, 'couple_id__3': '1', 'deleted_at__3': None, 'user_id__3': '2', 'has_image__3': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__4': None, 'is_delivered__4': 1, 'embed_index__4': None, 'couple_id__4': '1', 'deleted_at__4': None, 'user_id__4': '2', 'has_image__4': 0, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'image_url__5': None, 'is_delivered__5': 1, 'embed_index__5': None ... 170 parameters truncated ... 'embed_index__24': None, 'couple_id__24': '1', 'deleted_at__24': None, 'user_id__24': '1', 'has_image__24': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'content__25': '나도야~ 🥰', 'image_url__25': None, 'is_delivered__25': 1, 'embed_index__25': None, 'couple_id__25': '1', 'deleted_at__25': None, 'user_id__25': '2', 'has_image__25': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'content__26': '일주일 진짜 빠르다', 'image_url__26': None, 'is_delivered__26': 1, 'embed_index__26': None, 'couple_id__26': '1', 'deleted_at__26': None, 'user_id__26': '1', 'has_image__26': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__27': None, 'is_delivered__27': 1, 'embed_index__27': None, 'couple_id__27': '1', 'deleted_at__27': None, 'user_id__27': '2', 'has_image__27': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'content__28': '너 있어서 든든했어', 'image_url__28': None, 'is_delivered__28': 1, 'embed_index__28': None, 'couple_id__28': '1', 'deleted_at__28': None, 'user_id__28': '1', 'has_image__28': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'image_url__29': None, 'is_delivered__29': 1, 'embed_index__29': None, 'couple_id__29': '1', 'deleted_at__29': None, 'user_id__29': '2', 'has_image__29': 0}
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {}
[2025-07-14 18:15:42][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {'user_id_1': '1'}
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:42][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:44][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:44][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:44][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'user_id': '1', 'summary': '지민 values open communication and often uses words to express affection, demonstrating a preference for verbal connection in relationships. They handl ... (272 characters truncated) ...  partners feel understood and valued. Overall, 지민 thrives in environments where open dialogue and consistent communication foster trust and intimacy.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 44, 777672), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 44, 777675)}
[2025-07-14 18:15:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:44][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:15:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:44][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:44][INFO][sqlalchemy.engine.Engine] [cached since 2.593s ago] {'user_id_1': '2'}
[2025-07-14 18:15:44][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:44][INFO][sqlalchemy.engine.Engine] [cached since 2.59s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:47][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:47][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:47][INFO][sqlalchemy.engine.Engine] [cached since 2.425s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:47][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:47][INFO][sqlalchemy.engine.Engine] [cached since 2.512s ago] {'user_id': '2', 'summary': '수아 values trust in her relationships, prioritizing it as the foundation for connection. When conflicts arise, she prefers to wait it out, suggesting  ... (297 characters truncated) ... have space to grow individually while staying connected. Overall, her relationship tendencies highlight a harmonious blend of closeness and autonomy.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 47, 288986), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 47, 289004)}
[2025-07-14 18:15:47][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:47][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:15:47][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:15:47][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:15:52][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:15:52][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:15:52][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:15:53][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00024s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [no key 0.00018s] {}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 54, 487084), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 54, 487088), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 15, 54, 522259)}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'choice_id__0': 2, 'user_id__0': '1', 'question_id__0': 1, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 15, 53, 322402), 'custom_input__1': None, 'choice_id__1': 8, 'user_id__1': '1', 'question_id__1': 2, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 15, 53, 322420), 'custom_input__2': None, 'choice_id__2': 13, 'user_id__2': '1', 'question_id__2': 3, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 15, 53, 322431), 'custom_input__3': None, 'choice_id__3': 21, 'user_id__3': '1', 'question_id__3': 4, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 15, 53, 322439), 'custom_input__4': None, 'choice_id__4': 26, 'user_id__4': '1', 'question_id__4': 5, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 15, 53, 322448), 'custom_input__5': None, 'choice_id__5': 1, 'user_id__5': '2', 'question_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 15, 53, 322454), 'custom_input__6': None, 'choice_id__6': 9, 'user_id__6': '2', 'question_id__6': 2, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 15, 53, 322460), 'custom_input__7': None, 'choice_id__7': 16, 'user_id__7': '2', 'question_id__7': 3, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 15, 53, 322467), 'custom_input__8': None, 'choice_id__8': 20, 'user_id__8': '2', 'question_id__8': 4, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 15, 53, 322475), 'custom_input__9': None, 'choice_id__9': 25, 'user_id__9': '2', 'question_id__9': 5, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 15, 53, 322483)}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__12': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'emotion__14': '바쁨', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s (insertmanyvalues) 1/1 (ordered)] {'embed_index__0': None, 'deleted_at__0': None, 'user_id__0': '1', 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__0': None, 'couple_id__0': '1', 'has_image__0': 0, 'is_delivered__0': 1, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'embed_index__1': None, 'deleted_at__1': None, 'user_id__1': '2', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__1': None, 'couple_id__1': '1', 'has_image__1': 0, 'is_delivered__1': 1, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'embed_index__2': None, 'deleted_at__2': None, 'user_id__2': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__2': None, 'couple_id__2': '1', 'has_image__2': 0, 'is_delivered__2': 1, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'embed_index__3': None, 'deleted_at__3': None, 'user_id__3': '2', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__3': None, 'couple_id__3': '1', 'has_image__3': 0, 'is_delivered__3': 1, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'embed_index__4': None, 'deleted_at__4': None, 'user_id__4': '2', 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__4': None, 'couple_id__4': '1', 'has_image__4': 0, 'is_delivered__4': 1, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'embed_index__5': None, 'deleted_at__5': None, 'user_id__5': '1', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'image_url__5': None ... 170 parameters truncated ... 'image_url__24': None, 'couple_id__24': '1', 'has_image__24': 0, 'is_delivered__24': 1, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'embed_index__25': None, 'deleted_at__25': None, 'user_id__25': '2', 'content__25': '나도야~ 🥰', 'image_url__25': None, 'couple_id__25': '1', 'has_image__25': 0, 'is_delivered__25': 1, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'embed_index__26': None, 'deleted_at__26': None, 'user_id__26': '1', 'content__26': '일주일 진짜 빠르다', 'image_url__26': None, 'couple_id__26': '1', 'has_image__26': 0, 'is_delivered__26': 1, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'embed_index__27': None, 'deleted_at__27': None, 'user_id__27': '2', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__27': None, 'couple_id__27': '1', 'has_image__27': 0, 'is_delivered__27': 1, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'embed_index__28': None, 'deleted_at__28': None, 'user_id__28': '1', 'content__28': '너 있어서 든든했어', 'image_url__28': None, 'couple_id__28': '1', 'has_image__28': 0, 'is_delivered__28': 1, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'embed_index__29': None, 'deleted_at__29': None, 'user_id__29': '2', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'image_url__29': None, 'couple_id__29': '1', 'has_image__29': 0, 'is_delivered__29': 1, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0)}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {}
[2025-07-14 18:15:54][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1'}
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:54][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:56][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:56][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00039s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:15:56][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:56][INFO][sqlalchemy.engine.Engine] [generated in 0.00044s] {'user_id': '1', 'summary': '지민 values communication as a crucial aspect of their relationships, favoring open and honest dialogue. In times of conflict, they prefer to cool down ... (212 characters truncated) ... heir partner, valuing a consistent connection. Ultimately, they seek a deep, meaningful relationship, prioritizing emotional depth and understanding.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 56, 787597), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 56, 787606)}
[2025-07-14 18:15:56][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:56][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:15:56][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:56][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:15:56][INFO][sqlalchemy.engine.Engine] [cached since 1.988s ago] {'user_id_1': '2'}
[2025-07-14 18:15:56][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:56][INFO][sqlalchemy.engine.Engine] [cached since 1.99s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:58][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:15:58][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:15:58][INFO][sqlalchemy.engine.Engine] [cached since 2.09s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:15:58][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:15:58][INFO][sqlalchemy.engine.Engine] [cached since 2.089s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of her relationships, ensuring a strong and reliable bond. When conflicts arise, she prefers to wait it out, allowi ... (202 characters truncated) ... tact, balancing personal space with connection. In her ideal relationship, she seeks balanced independence, valuing both closeness and individuality.', 'created_at': datetime.datetime(2025, 7, 14, 9, 15, 58, 876705), 'updated_at': datetime.datetime(2025, 7, 14, 9, 15, 58, 876712)}
[2025-07-14 18:15:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:15:58][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:15:58][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:15:58][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:15:59][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:15:59][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:15:59][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:15:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {}
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:16:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:01][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 16, 2, 138842), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 16, 2, 138847), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 16, 2, 174977)}
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00030s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'question_id__0': 1, 'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 16, 0, 927671), 'user_id__0': '1', 'custom_input__0': None, 'question_id__1': 2, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 16, 0, 927689), 'user_id__1': '1', 'custom_input__1': None, 'question_id__2': 3, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 16, 0, 927700), 'user_id__2': '1', 'custom_input__2': None, 'question_id__3': 4, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 16, 0, 927711), 'user_id__3': '1', 'custom_input__3': None, 'question_id__4': 5, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 16, 0, 927722), 'user_id__4': '1', 'custom_input__4': None, 'question_id__5': 1, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 16, 0, 927731), 'user_id__5': '2', 'custom_input__5': None, 'question_id__6': 2, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 16, 0, 927739), 'user_id__6': '2', 'custom_input__6': None, 'question_id__7': 3, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 16, 0, 927749), 'user_id__7': '2', 'custom_input__7': None, 'question_id__8': 4, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 16, 0, 927758), 'user_id__8': '2', 'custom_input__8': None, 'question_id__9': 5, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 16, 0, 927769), 'user_id__9': '2', 'custom_input__9': None}
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__2': '1', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__4': '1', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__6': '1', 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__7': '1', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__9': '1', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__11': '1', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__12': '1', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'emotion__14': '바쁨', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__15': '2', 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__17': '2', 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__19': '2', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'memo__20': '너와 있으면 참 편안해.', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__21': '2', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__23': '2', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'memo__24': '사소한 행동에도 감동했어.', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__25': '2', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s (insertmanyvalues) 1/1 (ordered)] {'couple_id__0': '1', 'deleted_at__0': None, 'image_url__0': None, 'user_id__0': '1', 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'embed_index__0': None, 'has_image__0': 0, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'is_delivered__0': 1, 'couple_id__1': '1', 'deleted_at__1': None, 'image_url__1': None, 'user_id__1': '2', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'embed_index__1': None, 'has_image__1': 0, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'is_delivered__1': 1, 'couple_id__2': '1', 'deleted_at__2': None, 'image_url__2': None, 'user_id__2': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'embed_index__2': None, 'has_image__2': 0, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'is_delivered__2': 1, 'couple_id__3': '1', 'deleted_at__3': None, 'image_url__3': None, 'user_id__3': '2', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'embed_index__3': None, 'has_image__3': 0, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'is_delivered__3': 1, 'couple_id__4': '1', 'deleted_at__4': None, 'image_url__4': None, 'user_id__4': '2', 'content__4': '어제 약속했는데 통화 못했네 😕', 'embed_index__4': None, 'has_image__4': 0, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'is_delivered__4': 1, 'couple_id__5': '1', 'deleted_at__5': None, 'image_url__5': None, 'user_id__5': '1', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ' ... 170 parameters truncated ... 'content__24': '너랑 시간 보내는 거 제일 좋아', 'embed_index__24': None, 'has_image__24': 0, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'is_delivered__24': 1, 'couple_id__25': '1', 'deleted_at__25': None, 'image_url__25': None, 'user_id__25': '2', 'content__25': '나도야~ 🥰', 'embed_index__25': None, 'has_image__25': 0, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'is_delivered__25': 1, 'couple_id__26': '1', 'deleted_at__26': None, 'image_url__26': None, 'user_id__26': '1', 'content__26': '일주일 진짜 빠르다', 'embed_index__26': None, 'has_image__26': 0, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'is_delivered__26': 1, 'couple_id__27': '1', 'deleted_at__27': None, 'image_url__27': None, 'user_id__27': '2', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'embed_index__27': None, 'has_image__27': 0, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'is_delivered__27': 1, 'couple_id__28': '1', 'deleted_at__28': None, 'image_url__28': None, 'user_id__28': '1', 'content__28': '너 있어서 든든했어', 'embed_index__28': None, 'has_image__28': 0, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'is_delivered__28': 1, 'couple_id__29': '1', 'deleted_at__29': None, 'image_url__29': None, 'user_id__29': '2', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'embed_index__29': None, 'has_image__29': 0, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'is_delivered__29': 1}
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s] {}
[2025-07-14 18:16:02][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id_1': '1'}
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:16:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:16:04][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:16:04][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:16:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:16:04][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:16:04][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {'user_id': '1', 'summary': '지민 values open and effective communication in relationships, preferring to address conflicts by first cooling off and then engaging in a candid discu ... (289 characters truncated) ... ns, seeking relationships that are meaningful and emotionally fulfilling. Overall, 지민 prioritizes understanding and closeness in their relationships.', 'created_at': datetime.datetime(2025, 7, 14, 9, 16, 4, 812939), 'updated_at': datetime.datetime(2025, 7, 14, 9, 16, 4, 812943)}
[2025-07-14 18:16:04][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:04][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:16:04][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:04][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:16:04][INFO][sqlalchemy.engine.Engine] [cached since 2.449s ago] {'user_id_1': '2'}
[2025-07-14 18:16:04][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:16:04][INFO][sqlalchemy.engine.Engine] [cached since 2.357s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:16:07][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:16:07][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:16:07][INFO][sqlalchemy.engine.Engine] [cached since 2.415s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:16:07][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:16:07][INFO][sqlalchemy.engine.Engine] [cached since 2.413s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of her relationships, prioritizing honesty and reliability. When faced with conflict, she prefers to give it time, ... (337 characters truncated) ... ce. Ultimately, 수아 seeks a relationship with balanced independence, where both partners can thrive individually while being supportive of each other.', 'created_at': datetime.datetime(2025, 7, 14, 9, 16, 7, 225790), 'updated_at': datetime.datetime(2025, 7, 14, 9, 16, 7, 225801)}
[2025-07-14 18:16:07][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:07][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:16:07][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:16:07][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:16:13][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:16:13][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:16:13][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:16:13][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00020s] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:16:14][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00020s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 16, 15, 495655), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 16, 15, 495659), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 16, 15, 618637)}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'choice_id__0': 2, 'user_id__0': '1', 'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 16, 14, 302719), 'question_id__0': 1, 'choice_id__1': 8, 'user_id__1': '1', 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 16, 14, 302737), 'question_id__1': 2, 'choice_id__2': 13, 'user_id__2': '1', 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 16, 14, 302745), 'question_id__2': 3, 'choice_id__3': 21, 'user_id__3': '1', 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 16, 14, 302754), 'question_id__3': 4, 'choice_id__4': 26, 'user_id__4': '1', 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 16, 14, 302763), 'question_id__4': 5, 'choice_id__5': 1, 'user_id__5': '2', 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 16, 14, 302770), 'question_id__5': 1, 'choice_id__6': 9, 'user_id__6': '2', 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 16, 14, 302777), 'question_id__6': 2, 'choice_id__7': 16, 'user_id__7': '2', 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 16, 14, 302784), 'question_id__7': 3, 'choice_id__8': 20, 'user_id__8': '2', 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 16, 14, 302792), 'question_id__8': 4, 'choice_id__9': 25, 'user_id__9': '2', 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 16, 14, 302801), 'question_id__9': 5}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__12': '애정', 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'user_id__14': '2', 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0)}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s (insertmanyvalues) 1/1 (ordered)] {'is_delivered__0': 1, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'image_url__0': None, 'user_id__0': '1', 'embed_index__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'has_image__0': 0, 'couple_id__0': '1', 'is_delivered__1': 1, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'image_url__1': None, 'user_id__1': '2', 'embed_index__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'has_image__1': 0, 'couple_id__1': '1', 'is_delivered__2': 1, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'image_url__2': None, 'user_id__2': '1', 'embed_index__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'has_image__2': 0, 'couple_id__2': '1', 'is_delivered__3': 1, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'image_url__3': None, 'user_id__3': '2', 'embed_index__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'has_image__3': 0, 'couple_id__3': '1', 'is_delivered__4': 1, 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'image_url__4': None, 'user_id__4': '2', 'embed_index__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'has_image__4': 0, 'couple_id__4': '1', 'is_delivered__5': 1, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'deleted_at__5': None, 'image_url__5': None, 'user_id__5': '1' ... 170 parameters truncated ... 'user_id__24': '1', 'embed_index__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'has_image__24': 0, 'couple_id__24': '1', 'is_delivered__25': 1, 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'image_url__25': None, 'user_id__25': '2', 'embed_index__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'has_image__25': 0, 'couple_id__25': '1', 'is_delivered__26': 1, 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'image_url__26': None, 'user_id__26': '1', 'embed_index__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'has_image__26': 0, 'couple_id__26': '1', 'is_delivered__27': 1, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'image_url__27': None, 'user_id__27': '2', 'embed_index__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'has_image__27': 0, 'couple_id__27': '1', 'is_delivered__28': 1, 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'image_url__28': None, 'user_id__28': '1', 'embed_index__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'has_image__28': 0, 'couple_id__28': '1', 'is_delivered__29': 1, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None, 'image_url__29': None, 'user_id__29': '2', 'embed_index__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'has_image__29': 0, 'couple_id__29': '1'}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:16:15][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'user_id_1': '1'}
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:16:15][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:16:17][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:16:17][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:16:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:16:17][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:16:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'user_id': '1', 'summary': '지민 values open and honest communication in relationships, ensuring that both partners are on the same page. When conflicts arise, 지민 prefers to remai ... (262 characters truncated) ...  as it helps maintain a sense of closeness and connection. Ultimately, 지민 seeks a deep and meaningful bond that goes beyond superficial interactions.', 'created_at': datetime.datetime(2025, 7, 14, 9, 16, 17, 815090), 'updated_at': datetime.datetime(2025, 7, 14, 9, 16, 17, 815093)}
[2025-07-14 18:16:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:17][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:16:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:16:17][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:16:17][INFO][sqlalchemy.engine.Engine] [cached since 1.987s ago] {'user_id_1': '2'}
[2025-07-14 18:16:17][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:16:17][INFO][sqlalchemy.engine.Engine] [cached since 1.988s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:16:21][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:16:21][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:16:21][INFO][sqlalchemy.engine.Engine] [cached since 3.276s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:16:21][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:16:21][INFO][sqlalchemy.engine.Engine] [cached since 3.276s ago] {'user_id': '2', 'summary': '수아 values trust as a cornerstone of her relationships, ensuring that she can rely on her partner. In times of conflict, she prefers to wait it out, a ... (207 characters truncated) ... ce, ensuring both partners have space to grow individually. Overall, 수아 seeks a harmonious relationship built on mutual respect and personal freedom.', 'created_at': datetime.datetime(2025, 7, 14, 9, 16, 21, 91256), 'updated_at': datetime.datetime(2025, 7, 14, 9, 16, 21, 91259)}
[2025-07-14 18:16:21][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:16:21][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:16:21][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:16:21][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:17:08][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:17:08][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:17:09][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {}
[2025-07-14 18:17:09][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00050s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00062s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00021s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 17, 10, 910539), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 17, 10, 910544), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 17, 10, 947075)}
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:17:10][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00030s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'choice_id__0': 2, 'question_id__0': 1, 'user_id__0': '1', 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 17, 9, 681614), 'custom_input__1': None, 'choice_id__1': 8, 'question_id__1': 2, 'user_id__1': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 17, 9, 681628), 'custom_input__2': None, 'choice_id__2': 13, 'question_id__2': 3, 'user_id__2': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 17, 9, 681636), 'custom_input__3': None, 'choice_id__3': 21, 'question_id__3': 4, 'user_id__3': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 17, 9, 681644), 'custom_input__4': None, 'choice_id__4': 26, 'question_id__4': 5, 'user_id__4': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 17, 9, 681652), 'custom_input__5': None, 'choice_id__5': 1, 'question_id__5': 1, 'user_id__5': '2', 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 17, 9, 681658), 'custom_input__6': None, 'choice_id__6': 9, 'question_id__6': 2, 'user_id__6': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 17, 9, 681664), 'custom_input__7': None, 'choice_id__7': 16, 'question_id__7': 3, 'user_id__7': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 17, 9, 681670), 'custom_input__8': None, 'choice_id__8': 20, 'question_id__8': 4, 'user_id__8': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 17, 9, 681678), 'custom_input__9': None, 'choice_id__9': 25, 'question_id__9': 5, 'user_id__9': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 17, 9, 681685)}
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__12': '애정' ... 8 parameters truncated ... 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__14': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2'}
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'couple_id__0': '1', 'deleted_at__0': None, 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'user_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'embed_index__0': None, 'has_image__0': 0, 'image_url__0': None, 'is_delivered__0': 1, 'couple_id__1': '1', 'deleted_at__1': None, 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'user_id__1': '2', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'embed_index__1': None, 'has_image__1': 0, 'image_url__1': None, 'is_delivered__1': 1, 'couple_id__2': '1', 'deleted_at__2': None, 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'user_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'embed_index__2': None, 'has_image__2': 0, 'image_url__2': None, 'is_delivered__2': 1, 'couple_id__3': '1', 'deleted_at__3': None, 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'user_id__3': '2', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'embed_index__3': None, 'has_image__3': 0, 'image_url__3': None, 'is_delivered__3': 1, 'couple_id__4': '1', 'deleted_at__4': None, 'content__4': '어제 약속했는데 통화 못했네 😕', 'user_id__4': '2', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'embed_index__4': None, 'has_image__4': 0, 'image_url__4': None, 'is_delivered__4': 1, 'couple_id__5': '1', 'deleted_at__5': None, 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'user_id__5': '1', 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40) ... 170 parameters truncated ... 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'embed_index__24': None, 'has_image__24': 0, 'image_url__24': None, 'is_delivered__24': 1, 'couple_id__25': '1', 'deleted_at__25': None, 'content__25': '나도야~ 🥰', 'user_id__25': '2', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'embed_index__25': None, 'has_image__25': 0, 'image_url__25': None, 'is_delivered__25': 1, 'couple_id__26': '1', 'deleted_at__26': None, 'content__26': '일주일 진짜 빠르다', 'user_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'embed_index__26': None, 'has_image__26': 0, 'image_url__26': None, 'is_delivered__26': 1, 'couple_id__27': '1', 'deleted_at__27': None, 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'user_id__27': '2', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'embed_index__27': None, 'has_image__27': 0, 'image_url__27': None, 'is_delivered__27': 1, 'couple_id__28': '1', 'deleted_at__28': None, 'content__28': '너 있어서 든든했어', 'user_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'embed_index__28': None, 'has_image__28': 0, 'image_url__28': None, 'is_delivered__28': 1, 'couple_id__29': '1', 'deleted_at__29': None, 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'user_id__29': '2', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'embed_index__29': None, 'has_image__29': 0, 'image_url__29': None, 'is_delivered__29': 1}
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {}
[2025-07-14 18:17:11][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {'user_id_1': '1'}
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:17:11][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:17:13][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:17:13][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:17:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:17:13][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:17:13][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id': '1', 'summary': '지민 values open communication in relationships and approaches conflicts with a calm demeanor, preferring to talk things through once emotions have set ... (240 characters truncated) ... timacy and understanding in their ideal relationship. Overall, 지민 aims to build strong, supportive bonds through frequent and heartfelt interactions.', 'created_at': datetime.datetime(2025, 7, 14, 9, 17, 13, 968981), 'updated_at': datetime.datetime(2025, 7, 14, 9, 17, 13, 968985)}
[2025-07-14 18:17:13][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:14][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:17:14][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:14][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:17:14][INFO][sqlalchemy.engine.Engine] [cached since 2.735s ago] {'user_id_1': '2'}
[2025-07-14 18:17:14][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:17:14][INFO][sqlalchemy.engine.Engine] [cached since 2.733s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:17:17][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:17:17][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:17:17][INFO][sqlalchemy.engine.Engine] [cached since 3.946s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:17:17][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:17:17][INFO][sqlalchemy.engine.Engine] [cached since 4.029s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of her relationships, emphasizing the importance of reliability and authenticity. When conflicts arise, she prefer ... (317 characters truncated) ... on rhythm. Ultimately, 수아 seeks a balanced independence in her relationships, appreciating closeness while honoring personal space and individuality.', 'created_at': datetime.datetime(2025, 7, 14, 9, 17, 17, 997608), 'updated_at': datetime.datetime(2025, 7, 14, 9, 17, 17, 997629)}
[2025-07-14 18:17:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:18][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:17:18][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:17:18][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:17:18][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:17:18][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:17:18][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:17:18][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:17:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:18][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:17:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:18][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:17:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:18][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:17:18][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:17:19][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00005s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 17, 20, 664200), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 17, 20, 664203), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 17, 20, 700252)}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'choice_id__0': 2, 'question_id__0': 1, 'user_id__0': '1', 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 17, 19, 366430), 'custom_input__0': None, 'choice_id__1': 8, 'question_id__1': 2, 'user_id__1': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 17, 19, 366446), 'custom_input__1': None, 'choice_id__2': 13, 'question_id__2': 3, 'user_id__2': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 17, 19, 366454), 'custom_input__2': None, 'choice_id__3': 21, 'question_id__3': 4, 'user_id__3': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 17, 19, 366462), 'custom_input__3': None, 'choice_id__4': 26, 'question_id__4': 5, 'user_id__4': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 17, 19, 366470), 'custom_input__4': None, 'choice_id__5': 1, 'question_id__5': 1, 'user_id__5': '2', 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 17, 19, 366477), 'custom_input__5': None, 'choice_id__6': 9, 'question_id__6': 2, 'user_id__6': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 17, 19, 366483), 'custom_input__6': None, 'choice_id__7': 16, 'question_id__7': 3, 'user_id__7': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 17, 19, 366490), 'custom_input__7': None, 'choice_id__8': 20, 'question_id__8': 4, 'user_id__8': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 17, 19, 366498), 'custom_input__8': None, 'choice_id__9': 25, 'question_id__9': 5, 'user_id__9': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 17, 19, 366506), 'custom_input__9': None}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__1': '1', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__2': '1', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__3': '1', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__4': '1', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__5': '1', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__6': '1', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__7': '1', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__8': '1', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__9': '1', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__10': '1', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__11': '1', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__12': '1', 'emotion__12': '애정' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__15': '2', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__16': '2', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__17': '2', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__18': '2', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__19': '2', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__20': '2', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'user_id__21': '2', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__22': '2', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__23': '2', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__24': '2', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'user_id__25': '2', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__26': '2', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'is_delivered__0': 1, 'embed_index__0': None, 'user_id__0': '1', 'couple_id__0': '1', 'has_image__0': 0, 'image_url__0': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'is_delivered__1': 1, 'embed_index__1': None, 'user_id__1': '2', 'couple_id__1': '1', 'has_image__1': 0, 'image_url__1': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'is_delivered__2': 1, 'embed_index__2': None, 'user_id__2': '1', 'couple_id__2': '1', 'has_image__2': 0, 'image_url__2': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'is_delivered__3': 1, 'embed_index__3': None, 'user_id__3': '2', 'couple_id__3': '1', 'has_image__3': 0, 'image_url__3': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'is_delivered__4': 1, 'embed_index__4': None, 'user_id__4': '2', 'couple_id__4': '1', 'has_image__4': 0, 'image_url__4': None, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'deleted_at__5': None, 'is_delivered__5': 1, 'embed_index__5': None ... 170 parameters truncated ... 'embed_index__24': None, 'user_id__24': '1', 'couple_id__24': '1', 'has_image__24': 0, 'image_url__24': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'is_delivered__25': 1, 'embed_index__25': None, 'user_id__25': '2', 'couple_id__25': '1', 'has_image__25': 0, 'image_url__25': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'is_delivered__26': 1, 'embed_index__26': None, 'user_id__26': '1', 'couple_id__26': '1', 'has_image__26': 0, 'image_url__26': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'is_delivered__27': 1, 'embed_index__27': None, 'user_id__27': '2', 'couple_id__27': '1', 'has_image__27': 0, 'image_url__27': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'is_delivered__28': 1, 'embed_index__28': None, 'user_id__28': '1', 'couple_id__28': '1', 'has_image__28': 0, 'image_url__28': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None, 'is_delivered__29': 1, 'embed_index__29': None, 'user_id__29': '2', 'couple_id__29': '1', 'has_image__29': 0, 'image_url__29': None}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {}
[2025-07-14 18:17:20][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {'user_id_1': '1'}
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:17:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:17:23][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:17:23][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:17:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:17:23][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:17:23][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, emphasizing the importance of open and honest dialogue. When conflicts arise, they prefer to take a  ... (296 characters truncated) ... tain closeness. Ultimately, they seek a relationship characterized by a deep connection, where both partners truly understand and support each other.', 'created_at': datetime.datetime(2025, 7, 14, 9, 17, 23, 455041), 'updated_at': datetime.datetime(2025, 7, 14, 9, 17, 23, 455043)}
[2025-07-14 18:17:23][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:23][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:17:23][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:17:23][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:17:23][INFO][sqlalchemy.engine.Engine] [cached since 2.559s ago] {'user_id_1': '2'}
[2025-07-14 18:17:23][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:17:23][INFO][sqlalchemy.engine.Engine] [cached since 2.558s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:17:25][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:17:25][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:17:25][INFO][sqlalchemy.engine.Engine] [cached since 2.07s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:17:25][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:17:25][INFO][sqlalchemy.engine.Engine] [cached since 2.071s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of their relationships, preferring to build connections based on reliability and honesty. When conflicts arise, th ... (312 characters truncated) ... l, their ideal relationship allows for balanced independence, where both partners have the freedom to pursue their interests while staying connected.', 'created_at': datetime.datetime(2025, 7, 14, 9, 17, 25, 525662), 'updated_at': datetime.datetime(2025, 7, 14, 9, 17, 25, 525672)}
[2025-07-14 18:17:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:17:25][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:17:25][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:17:25][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:18:42][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:18:42][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:18:42][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:18:42][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00019s] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:18:43][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00017s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 18, 44, 574059), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 18, 44, 574063), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 18, 44, 610290)}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'user_id__0': '1', 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 18, 43, 256350), 'question_id__0': 1, 'choice_id__0': 2, 'custom_input__1': None, 'user_id__1': '1', 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 18, 43, 256377), 'question_id__1': 2, 'choice_id__1': 8, 'custom_input__2': None, 'user_id__2': '1', 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 18, 43, 256391), 'question_id__2': 3, 'choice_id__2': 13, 'custom_input__3': None, 'user_id__3': '1', 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 18, 43, 256405), 'question_id__3': 4, 'choice_id__3': 21, 'custom_input__4': None, 'user_id__4': '1', 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 18, 43, 256419), 'question_id__4': 5, 'choice_id__4': 26, 'custom_input__5': None, 'user_id__5': '2', 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 18, 43, 256430), 'question_id__5': 1, 'choice_id__5': 1, 'custom_input__6': None, 'user_id__6': '2', 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 18, 43, 256440), 'question_id__6': 2, 'choice_id__6': 9, 'custom_input__7': None, 'user_id__7': '2', 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 18, 43, 256452), 'question_id__7': 3, 'choice_id__7': 16, 'custom_input__8': None, 'user_id__8': '2', 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 18, 43, 256465), 'question_id__8': 4, 'choice_id__8': 20, 'custom_input__9': None, 'user_id__9': '2', 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 18, 43, 256479), 'question_id__9': 5, 'choice_id__9': 25}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__0': '1', 'emotion__0': '고마움', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__1': '1', 'emotion__1': '기대감', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__2': '1', 'emotion__2': '미안함', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__3': '1', 'emotion__3': '죄책감', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__4': '1', 'emotion__4': '사랑', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__5': '1', 'emotion__5': '다정함', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__6': '1', 'emotion__6': '친밀감', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__7': '1', 'emotion__7': '억울함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__8': '1', 'emotion__8': '서운함', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__9': '1', 'emotion__9': '행복', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__10': '1', 'emotion__10': '감사', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__11': '1', 'emotion__11': '신뢰', 'date__12': datetime.datetime(2025, 7, 7, 0, 0), 'memo__12': '너에 대한 애정이 넘쳤어.' ... 8 parameters truncated ... 'user_id__14': '2', 'emotion__14': '바쁨', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__15': '2', 'emotion__15': '서운함', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__16': '2', 'emotion__16': '실망감', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__17': '2', 'emotion__17': '이해', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__18': '2', 'emotion__18': '다정함', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__19': '2', 'emotion__19': '호감', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'user_id__20': '2', 'emotion__20': '편안함', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__21': '2', 'emotion__21': '기대감', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__22': '2', 'emotion__22': '불만', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__23': '2', 'emotion__23': '기쁨', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'user_id__24': '2', 'emotion__24': '감동', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__25': '2', 'emotion__25': '사랑', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'user_id__26': '2', 'emotion__26': '안정감'}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s (insertmanyvalues) 1/1 (ordered)] {'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'image_url__0': None, 'user_id__0': '1', 'is_delivered__0': 1, 'embed_index__0': None, 'deleted_at__0': None, 'has_image__0': 0, 'couple_id__0': '1', 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'image_url__1': None, 'user_id__1': '2', 'is_delivered__1': 1, 'embed_index__1': None, 'deleted_at__1': None, 'has_image__1': 0, 'couple_id__1': '1', 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'image_url__2': None, 'user_id__2': '1', 'is_delivered__2': 1, 'embed_index__2': None, 'deleted_at__2': None, 'has_image__2': 0, 'couple_id__2': '1', 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'image_url__3': None, 'user_id__3': '2', 'is_delivered__3': 1, 'embed_index__3': None, 'deleted_at__3': None, 'has_image__3': 0, 'couple_id__3': '1', 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'content__4': '어제 약속했는데 통화 못했네 😕', 'image_url__4': None, 'user_id__4': '2', 'is_delivered__4': 1, 'embed_index__4': None, 'deleted_at__4': None, 'has_image__4': 0, 'couple_id__4': '1', 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'image_url__5': None, 'user_id__5': '1', 'is_delivered__5': 1, 'embed_index__5': None ... 170 parameters truncated ... 'embed_index__24': None, 'deleted_at__24': None, 'has_image__24': 0, 'couple_id__24': '1', 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'content__25': '나도야~ 🥰', 'image_url__25': None, 'user_id__25': '2', 'is_delivered__25': 1, 'embed_index__25': None, 'deleted_at__25': None, 'has_image__25': 0, 'couple_id__25': '1', 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'content__26': '일주일 진짜 빠르다', 'image_url__26': None, 'user_id__26': '1', 'is_delivered__26': 1, 'embed_index__26': None, 'deleted_at__26': None, 'has_image__26': 0, 'couple_id__26': '1', 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'image_url__27': None, 'user_id__27': '2', 'is_delivered__27': 1, 'embed_index__27': None, 'deleted_at__27': None, 'has_image__27': 0, 'couple_id__27': '1', 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'content__28': '너 있어서 든든했어', 'image_url__28': None, 'user_id__28': '1', 'is_delivered__28': 1, 'embed_index__28': None, 'deleted_at__28': None, 'has_image__28': 0, 'couple_id__28': '1', 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'image_url__29': None, 'user_id__29': '2', 'is_delivered__29': 1, 'embed_index__29': None, 'deleted_at__29': None, 'has_image__29': 0, 'couple_id__29': '1', 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0)}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s] {}
[2025-07-14 18:18:44][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {'user_id_1': '1'}
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:18:44][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:18:46][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:18:46][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:18:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:18:46][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:18:46][INFO][sqlalchemy.engine.Engine] [generated in 0.00021s] {'user_id': '1', 'summary': '지민 values open and effective communication in relationships, preferring to discuss issues directly after taking a moment to cool down. They express a ... (146 characters truncated) ... re to stay actively engaged with their partner. Their ideal relationship is one of deep connection, emphasizing emotional intimacy and understanding.', 'created_at': datetime.datetime(2025, 7, 14, 9, 18, 46, 845477), 'updated_at': datetime.datetime(2025, 7, 14, 9, 18, 46, 845483)}
[2025-07-14 18:18:46][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:46][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:18:46][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:46][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:18:46][INFO][sqlalchemy.engine.Engine] [cached since 2.03s ago] {'user_id_1': '2'}
[2025-07-14 18:18:46][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:18:46][INFO][sqlalchemy.engine.Engine] [cached since 2.031s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:18:50][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:18:50][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:18:50][INFO][sqlalchemy.engine.Engine] [cached since 3.797s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:18:50][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:18:50][INFO][sqlalchemy.engine.Engine] [cached since 3.795s ago] {'user_id': '2', 'summary': '수아 values trust as a cornerstone in their relationships, preferring to build strong, reliable bonds. When conflicts arise, they tend to adopt a wait- ... (295 characters truncated) ... . Ultimately, 수아 seeks a relationship characterized by balanced independence, where both partners maintain individuality while supporting each other.', 'created_at': datetime.datetime(2025, 7, 14, 9, 18, 50, 640374), 'updated_at': datetime.datetime(2025, 7, 14, 9, 18, 50, 640378)}
[2025-07-14 18:18:50][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:50][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:18:50][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:18:50][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:18:51][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:18:51][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:18:51][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:51][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:52][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [no key 0.00019s] {}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [no key 0.00007s] {}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 18, 53, 438110), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 18, 53, 438114), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 18, 53, 476946)}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00025s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'custom_input__0': None, 'question_id__0': 1, 'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 18, 52, 46244), 'user_id__1': '1', 'custom_input__1': None, 'question_id__1': 2, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 18, 52, 46259), 'user_id__2': '1', 'custom_input__2': None, 'question_id__2': 3, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 18, 52, 46266), 'user_id__3': '1', 'custom_input__3': None, 'question_id__3': 4, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 18, 52, 46274), 'user_id__4': '1', 'custom_input__4': None, 'question_id__4': 5, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 18, 52, 46282), 'user_id__5': '2', 'custom_input__5': None, 'question_id__5': 1, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 18, 52, 46288), 'user_id__6': '2', 'custom_input__6': None, 'question_id__6': 2, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 18, 52, 46294), 'user_id__7': '2', 'custom_input__7': None, 'question_id__7': 3, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 18, 52, 46301), 'user_id__8': '2', 'custom_input__8': None, 'question_id__8': 4, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 18, 52, 46308), 'user_id__9': '2', 'custom_input__9': None, 'question_id__9': 5, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 18, 52, 46316)}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'emotion__0': '고마움', 'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'emotion__1': '기대감', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__2': '미안함', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'emotion__3': '죄책감', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'emotion__4': '사랑', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__5': '다정함', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__6': '친밀감', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'emotion__7': '억울함', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'emotion__8': '서운함', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'emotion__9': '행복', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'emotion__10': '감사', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'emotion__11': '신뢰', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'emotion__12': '애정', 'user_id__12': '1' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'emotion__15': '서운함', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'emotion__16': '실망감', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'emotion__17': '이해', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'emotion__18': '다정함', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'emotion__19': '호감', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'emotion__20': '편안함', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'emotion__21': '기대감', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'emotion__22': '불만', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'emotion__23': '기쁨', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'emotion__24': '감동', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'emotion__25': '사랑', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'emotion__26': '안정감', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s (insertmanyvalues) 1/1 (ordered)] {'has_image__0': 0, 'image_url__0': None, 'user_id__0': '1', 'couple_id__0': '1', 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'embed_index__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'is_delivered__0': 1, 'has_image__1': 0, 'image_url__1': None, 'user_id__1': '2', 'couple_id__1': '1', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'embed_index__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'is_delivered__1': 1, 'has_image__2': 0, 'image_url__2': None, 'user_id__2': '1', 'couple_id__2': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'embed_index__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'is_delivered__2': 1, 'has_image__3': 0, 'image_url__3': None, 'user_id__3': '2', 'couple_id__3': '1', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'embed_index__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'is_delivered__3': 1, 'has_image__4': 0, 'image_url__4': None, 'user_id__4': '2', 'couple_id__4': '1', 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'embed_index__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'is_delivered__4': 1, 'has_image__5': 0, 'image_url__5': None, 'user_id__5': '1', 'couple_id__5': '1', 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ' ... 170 parameters truncated ... 'content__24': '너랑 시간 보내는 거 제일 좋아', 'deleted_at__24': None, 'embed_index__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'is_delivered__24': 1, 'has_image__25': 0, 'image_url__25': None, 'user_id__25': '2', 'couple_id__25': '1', 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'embed_index__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'is_delivered__25': 1, 'has_image__26': 0, 'image_url__26': None, 'user_id__26': '1', 'couple_id__26': '1', 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'embed_index__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'is_delivered__26': 1, 'has_image__27': 0, 'image_url__27': None, 'user_id__27': '2', 'couple_id__27': '1', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'embed_index__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'is_delivered__27': 1, 'has_image__28': 0, 'image_url__28': None, 'user_id__28': '1', 'couple_id__28': '1', 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'embed_index__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'is_delivered__28': 1, 'has_image__29': 0, 'image_url__29': None, 'user_id__29': '2', 'couple_id__29': '1', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None, 'embed_index__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'is_delivered__29': 1}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s] {}
[2025-07-14 18:18:53][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'user_id_1': '1'}
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:18:53][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:18:55][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:18:55][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:18:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:18:55][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:18:55][INFO][sqlalchemy.engine.Engine] [generated in 0.00014s] {'user_id': '1', 'summary': '지민 places high importance on communication in relationships, valuing open and honest dialogue. When conflicts arise, they prefer to take some time to ... (252 characters truncated) ... bond. Ultimately, they seek a deep connection in their relationships, prioritizing meaningful and intimate interactions over superficial engagements.', 'created_at': datetime.datetime(2025, 7, 14, 9, 18, 55, 593288), 'updated_at': datetime.datetime(2025, 7, 14, 9, 18, 55, 593292)}
[2025-07-14 18:18:55][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:55][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:18:55][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:55][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:18:55][INFO][sqlalchemy.engine.Engine] [cached since 1.884s ago] {'user_id_1': '2'}
[2025-07-14 18:18:55][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:18:55][INFO][sqlalchemy.engine.Engine] [cached since 1.885s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:18:58][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:18:58][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:18:58][INFO][sqlalchemy.engine.Engine] [cached since 2.639s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:18:58][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:18:58][INFO][sqlalchemy.engine.Engine] [cached since 2.63s ago] {'user_id': '2', 'summary': '수아 values trust in her relationships and seeks partners who appreciate this fundamental aspect. She prefers to handle conflicts by giving them time t ... (268 characters truncated) ... luing both togetherness and personal space. Overall, 수아 strives for a harmonious relationship where mutual respect and understanding are prioritized.', 'created_at': datetime.datetime(2025, 7, 14, 9, 18, 58, 223587), 'updated_at': datetime.datetime(2025, 7, 14, 9, 18, 58, 223593)}
[2025-07-14 18:18:58][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:58][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:18:58][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:18:58][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:18:59][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:18:59][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:18:59][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:18:59][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:19:00][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [no key 0.00010s] {}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 19, 1, 708490), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 19, 1, 708495), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 19, 1, 831382)}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 18, 59, 802751), 'custom_input__0': None, 'choice_id__0': 2, 'user_id__0': '1', 'question_id__0': 1, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 18, 59, 802786), 'custom_input__1': None, 'choice_id__1': 8, 'user_id__1': '1', 'question_id__1': 2, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 18, 59, 802797), 'custom_input__2': None, 'choice_id__2': 13, 'user_id__2': '1', 'question_id__2': 3, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 18, 59, 802808), 'custom_input__3': None, 'choice_id__3': 21, 'user_id__3': '1', 'question_id__3': 4, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 18, 59, 802819), 'custom_input__4': None, 'choice_id__4': 26, 'user_id__4': '1', 'question_id__4': 5, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 18, 59, 802828), 'custom_input__5': None, 'choice_id__5': 1, 'user_id__5': '2', 'question_id__5': 1, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 18, 59, 802836), 'custom_input__6': None, 'choice_id__6': 9, 'user_id__6': '2', 'question_id__6': 2, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 18, 59, 802846), 'custom_input__7': None, 'choice_id__7': 16, 'user_id__7': '2', 'question_id__7': 3, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 18, 59, 802855), 'custom_input__8': None, 'choice_id__8': 20, 'user_id__8': '2', 'question_id__8': 4, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 18, 59, 802866), 'custom_input__9': None, 'choice_id__9': 25, 'user_id__9': '2', 'question_id__9': 5}
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:19:01][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__0': '고마움', 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__1': '1', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'emotion__1': '기대감', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__2': '1', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__2': '미안함', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__3': '1', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__3': '죄책감', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__4': '1', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__4': '사랑', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__5': '1', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__5': '다정함', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__6': '1', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__6': '친밀감', 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__7': '1', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__7': '억울함', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__8': '1', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__8': '서운함', 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__9': '1', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__9': '행복', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__10': '1', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__10': '감사', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__11': '1', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__11': '신뢰', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__12': '1', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'emotion__14': '바쁨', 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__15': '2', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__15': '서운함', 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__16': '2', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'emotion__16': '실망감', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__17': '2', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__17': '이해', 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__18': '2', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'emotion__18': '다정함', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__19': '2', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__19': '호감', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__20': '2', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'emotion__20': '편안함', 'memo__20': '너와 있으면 참 편안해.', 'user_id__21': '2', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__21': '기대감', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__22': '2', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'emotion__22': '불만', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__23': '2', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__23': '기쁨', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__24': '2', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'emotion__24': '감동', 'memo__24': '사소한 행동에도 감동했어.', 'user_id__25': '2', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__25': '사랑', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__26': '2', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'emotion__26': '안정감', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s (insertmanyvalues) 1/1 (ordered)] {'has_image__0': 0, 'is_delivered__0': 1, 'image_url__0': None, 'deleted_at__0': None, 'embed_index__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'user_id__0': '1', 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'couple_id__0': '1', 'has_image__1': 0, 'is_delivered__1': 1, 'image_url__1': None, 'deleted_at__1': None, 'embed_index__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'user_id__1': '2', 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'couple_id__1': '1', 'has_image__2': 0, 'is_delivered__2': 1, 'image_url__2': None, 'deleted_at__2': None, 'embed_index__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'user_id__2': '1', 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'couple_id__2': '1', 'has_image__3': 0, 'is_delivered__3': 1, 'image_url__3': None, 'deleted_at__3': None, 'embed_index__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'user_id__3': '2', 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'couple_id__3': '1', 'has_image__4': 0, 'is_delivered__4': 1, 'image_url__4': None, 'deleted_at__4': None, 'embed_index__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'user_id__4': '2', 'content__4': '어제 약속했는데 통화 못했네 😕', 'couple_id__4': '1', 'has_image__5': 0, 'is_delivered__5': 1, 'image_url__5': None, 'deleted_at__5': None, 'embed_index__5': None ... 170 parameters truncated ... 'embed_index__24': None, 'created_at__24': datetime.datetime(2025, 7, 6, 18, 20), 'user_id__24': '1', 'content__24': '너랑 시간 보내는 거 제일 좋아', 'couple_id__24': '1', 'has_image__25': 0, 'is_delivered__25': 1, 'image_url__25': None, 'deleted_at__25': None, 'embed_index__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'user_id__25': '2', 'content__25': '나도야~ 🥰', 'couple_id__25': '1', 'has_image__26': 0, 'is_delivered__26': 1, 'image_url__26': None, 'deleted_at__26': None, 'embed_index__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'user_id__26': '1', 'content__26': '일주일 진짜 빠르다', 'couple_id__26': '1', 'has_image__27': 0, 'is_delivered__27': 1, 'image_url__27': None, 'deleted_at__27': None, 'embed_index__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'user_id__27': '2', 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'couple_id__27': '1', 'has_image__28': 0, 'is_delivered__28': 1, 'image_url__28': None, 'deleted_at__28': None, 'embed_index__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'user_id__28': '1', 'content__28': '너 있어서 든든했어', 'couple_id__28': '1', 'has_image__29': 0, 'is_delivered__29': 1, 'image_url__29': None, 'deleted_at__29': None, 'embed_index__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'user_id__29': '2', 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'couple_id__29': '1'}
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {}
[2025-07-14 18:19:02][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {'user_id_1': '1'}
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:02][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:19:05][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:19:05][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:05][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:19:05][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:19:05][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id': '1', 'summary': '지민 values communication highly in relationships, ensuring clear and open dialogues with partners. During conflicts, they prefer to maintain their com ... (183 characters truncated) ... ey appreciate regular interaction and connection. Ultimately, they seek a deep, meaningful relationship marked by mutual understanding and closeness.', 'created_at': datetime.datetime(2025, 7, 14, 9, 19, 5, 41831), 'updated_at': datetime.datetime(2025, 7, 14, 9, 19, 5, 41834)}
[2025-07-14 18:19:05][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:05][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:19:05][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:05][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:19:05][INFO][sqlalchemy.engine.Engine] [cached since 2.983s ago] {'user_id_1': '2'}
[2025-07-14 18:19:05][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:05][INFO][sqlalchemy.engine.Engine] [cached since 2.98s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:19:08][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:19:08][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:08][INFO][sqlalchemy.engine.Engine] [cached since 2.977s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:19:08][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:19:08][INFO][sqlalchemy.engine.Engine] [cached since 3.055s ago] {'user_id': '2', 'summary': '수아 values trust as the cornerstone of her relationships, emphasizing a strong foundation of reliability and honesty. In times of conflict, she prefer ... (285 characters truncated) ... ly, 수아 strives for a relationship that supports balanced independence, ensuring both partners have room to grow individually while staying connected.', 'created_at': datetime.datetime(2025, 7, 14, 9, 19, 8, 96469), 'updated_at': datetime.datetime(2025, 7, 14, 9, 19, 8, 96474)}
[2025-07-14 18:19:08][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:08][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:19:08][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:19:08][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:19:16][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:19:16][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:19:16][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:16][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00015s] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [generated in 0.00018s] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:19:17][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [no key 0.00053s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [no key 0.00047s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [no key 0.00050s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [no key 0.00036s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [no key 0.00027s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [no key 0.00046s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00035s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 19, 18, 381106), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 19, 18, 381115), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00051s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 19, 18, 420183)}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00038s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00027s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'choice_id__0': 2, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 19, 17, 142739), 'user_id__0': '1', 'question_id__0': 1, 'custom_input__0': None, 'choice_id__1': 8, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 19, 17, 142756), 'user_id__1': '1', 'question_id__1': 2, 'custom_input__1': None, 'choice_id__2': 13, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 19, 17, 142764), 'user_id__2': '1', 'question_id__2': 3, 'custom_input__2': None, 'choice_id__3': 21, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 19, 17, 142772), 'user_id__3': '1', 'question_id__3': 4, 'custom_input__3': None, 'choice_id__4': 26, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 19, 17, 142780), 'user_id__4': '1', 'question_id__4': 5, 'custom_input__4': None, 'choice_id__5': 1, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 19, 17, 142787), 'user_id__5': '2', 'question_id__5': 1, 'custom_input__5': None, 'choice_id__6': 9, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 19, 17, 142793), 'user_id__6': '2', 'question_id__6': 2, 'custom_input__6': None, 'choice_id__7': 16, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 19, 17, 142800), 'user_id__7': '2', 'question_id__7': 3, 'custom_input__7': None, 'choice_id__8': 20, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 19, 17, 142807), 'user_id__8': '2', 'question_id__8': 4, 'custom_input__8': None, 'choice_id__9': 25, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 19, 17, 142815), 'user_id__9': '2', 'question_id__9': 5, 'custom_input__9': None}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s (insertmanyvalues) 1/1 (ordered)] {'user_id__0': '1', 'emotion__0': '고마움', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'user_id__1': '1', 'emotion__1': '기대감', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__2': '1', 'emotion__2': '미안함', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'user_id__3': '1', 'emotion__3': '죄책감', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'user_id__4': '1', 'emotion__4': '사랑', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__5': '1', 'emotion__5': '다정함', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__6': '1', 'emotion__6': '친밀감', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'memo__6': '너와의 대화가 편하고 좋았어.', 'user_id__7': '1', 'emotion__7': '억울함', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'user_id__8': '1', 'emotion__8': '서운함', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'memo__8': '너의 반응이 조금 서운했어.', 'user_id__9': '1', 'emotion__9': '행복', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'user_id__10': '1', 'emotion__10': '감사', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'memo__10': '네가 있어줘서 고마운 하루였어.', 'user_id__11': '1', 'emotion__11': '신뢰', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'user_id__12': '1', 'emotion__12': '애정' ... 8 parameters truncated ... 'date__14': datetime.datetime(2025, 7, 1, 0, 0), 'memo__14': '서로 바빠도 너를 떠올리게 됐어.', 'user_id__15': '2', 'emotion__15': '서운함', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'memo__15': '너의 반응이 조금 서운했어.', 'user_id__16': '2', 'emotion__16': '실망감', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'user_id__17': '2', 'emotion__17': '이해', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'memo__17': '네 입장에서 생각해보게 됐어.', 'user_id__18': '2', 'emotion__18': '다정함', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'user_id__19': '2', 'emotion__19': '호감', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'memo__19': '너의 말투나 행동이 참 좋았어.', 'user_id__20': '2', 'emotion__20': '편안함', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'memo__20': '너와 있으면 참 편안해.', 'user_id__21': '2', 'emotion__21': '기대감', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'user_id__22': '2', 'emotion__22': '불만', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'user_id__23': '2', 'emotion__23': '기쁨', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'user_id__24': '2', 'emotion__24': '감동', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'memo__24': '사소한 행동에도 감동했어.', 'user_id__25': '2', 'emotion__25': '사랑', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'user_id__26': '2', 'emotion__26': '안정감', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.'}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00044s (insertmanyvalues) 1/1 (ordered)] {'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'deleted_at__0': None, 'embed_index__0': None, 'user_id__0': '1', 'has_image__0': 0, 'couple_id__0': '1', 'is_delivered__0': 1, 'image_url__0': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'deleted_at__1': None, 'embed_index__1': None, 'user_id__1': '2', 'has_image__1': 0, 'couple_id__1': '1', 'is_delivered__1': 1, 'image_url__1': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'deleted_at__2': None, 'embed_index__2': None, 'user_id__2': '1', 'has_image__2': 0, 'couple_id__2': '1', 'is_delivered__2': 1, 'image_url__2': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'deleted_at__3': None, 'embed_index__3': None, 'user_id__3': '2', 'has_image__3': 0, 'couple_id__3': '1', 'is_delivered__3': 1, 'image_url__3': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'content__4': '어제 약속했는데 통화 못했네 😕', 'deleted_at__4': None, 'embed_index__4': None, 'user_id__4': '2', 'has_image__4': 0, 'couple_id__4': '1', 'is_delivered__4': 1, 'image_url__4': None, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'deleted_at__5': None, 'embed_index__5': None, 'user_id__5': '1' ... 170 parameters truncated ... 'user_id__24': '1', 'has_image__24': 0, 'couple_id__24': '1', 'is_delivered__24': 1, 'image_url__24': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'content__25': '나도야~ 🥰', 'deleted_at__25': None, 'embed_index__25': None, 'user_id__25': '2', 'has_image__25': 0, 'couple_id__25': '1', 'is_delivered__25': 1, 'image_url__25': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'content__26': '일주일 진짜 빠르다', 'deleted_at__26': None, 'embed_index__26': None, 'user_id__26': '1', 'has_image__26': 0, 'couple_id__26': '1', 'is_delivered__26': 1, 'image_url__26': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'deleted_at__27': None, 'embed_index__27': None, 'user_id__27': '2', 'has_image__27': 0, 'couple_id__27': '1', 'is_delivered__27': 1, 'image_url__27': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'content__28': '너 있어서 든든했어', 'deleted_at__28': None, 'embed_index__28': None, 'user_id__28': '1', 'has_image__28': 0, 'couple_id__28': '1', 'is_delivered__28': 1, 'image_url__28': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'deleted_at__29': None, 'embed_index__29': None, 'user_id__29': '2', 'has_image__29': 0, 'couple_id__29': '1', 'is_delivered__29': 1, 'image_url__29': None}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {}
[2025-07-14 18:19:18][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00009s] {'user_id_1': '1'}
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:18][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:19:20][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:19:20][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00034s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:19:20][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:19:20][INFO][sqlalchemy.engine.Engine] [generated in 0.00029s] {'user_id': '1', 'summary': "지민 values open communication and believes it's essential for a strong relationship. When conflicts arise, they prefer to take a moment to cool off be ... (145 characters truncated) ...  to keep in frequent contact, as regular interaction helps maintain the connection. Overall, they seek a deep and meaningful bond with their partner.", 'created_at': datetime.datetime(2025, 7, 14, 9, 19, 20, 701788), 'updated_at': datetime.datetime(2025, 7, 14, 9, 19, 20, 701796)}
[2025-07-14 18:19:20][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:20][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:19:20][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:20][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:19:20][INFO][sqlalchemy.engine.Engine] [cached since 1.987s ago] {'user_id_1': '2'}
[2025-07-14 18:19:20][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:20][INFO][sqlalchemy.engine.Engine] [cached since 1.994s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:19:24][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:19:24][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:24][INFO][sqlalchemy.engine.Engine] [cached since 3.953s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:19:24][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:19:24][INFO][sqlalchemy.engine.Engine] [cached since 3.95s ago] {'user_id': '2', 'summary': '수아 values trust as a cornerstone in her relationships, indicating her need for a stable and reliable connection with her partner. During conflicts, s ... (323 characters truncated) ... for both independence and togetherness. Overall, 수아 thrives in relationships that offer security, mutual understanding, and room for personal growth.', 'created_at': datetime.datetime(2025, 7, 14, 9, 19, 24, 651058), 'updated_at': datetime.datetime(2025, 7, 14, 9, 19, 24, 651068)}
[2025-07-14 18:19:24][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:24][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:19:24][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:19:24][INFO][root] 유저 성향 분석/요약 완료
[2025-07-14 18:19:25][INFO][faiss.loader] Loading faiss.
[2025-07-14 18:19:25][INFO][faiss.loader] Successfully loaded faiss.
[2025-07-14 18:19:25][INFO][faiss] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:19:25][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [generated in 0.00016s] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DROP DATABASE IF EXISTS test_db
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [generated in 0.00017s] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] SELECT DATABASE()
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] SELECT @@sql_mode
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] SELECT @@lower_case_table_names
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] 
            CREATE DATABASE IF NOT EXISTS test_db
            CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci
        
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [generated in 0.00011s] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`users`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couples`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`messages`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_messages`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`persona_config`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`emotion_logs`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`weekly_solutions`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`aidaily_analysis_results`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_daily_analysis_results`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_trait_summaries`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`ai_chat_summaries`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`couple_chat_summaries`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_questions`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`survey_choices`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] DESCRIBE `test_db`.`user_survey_responses`
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [raw sql] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE users (
	user_id VARCHAR(255) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	birth DATETIME, 
	gender ENUM('male','female','other'), 
	PRIMARY KEY (user_id), 
	UNIQUE (email)
)


[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [no key 0.00098s] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_questions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	code VARCHAR(255), 
	text VARCHAR(255) NOT NULL, 
	`order` INTEGER, 
	PRIMARY KEY (id), 
	UNIQUE (code)
)


[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [no key 0.00023s] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couples (
	couple_id VARCHAR(255) NOT NULL, 
	user_1 VARCHAR(255) NOT NULL, 
	user_2 VARCHAR(255) NOT NULL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(user_1) REFERENCES users (user_id), 
	FOREIGN KEY(user_2) REFERENCES users (user_id)
)


[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE emotion_logs (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	emotion TEXT, 
	date DATETIME, 
	memo TEXT, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE weekly_solutions (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [no key 0.00008s] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_trait_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id)
)


[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [no key 0.00006s] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE survey_choices (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	question_id INTEGER, 
	text VARCHAR(255) NOT NULL, 
	tag VARCHAR(255), 
	PRIMARY KEY (id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id)
)


[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [no key 0.00011s] {}
[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE messages (
	chat_id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	content TEXT, 
	image_url TEXT, 
	has_image BOOL, 
	created_at DATETIME, 
	deleted_at DATETIME, 
	is_delivered BOOL, 
	embed_index INTEGER, 
	PRIMARY KEY (chat_id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:26][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_messages (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	role VARCHAR(20) NOT NULL, 
	content TEXT NOT NULL, 
	created_at DATETIME, 
	embed_index INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [no key 0.00009s] {}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE persona_config (
	couple_id VARCHAR(255) NOT NULL, 
	persona_name VARCHAR(255), 
	updated_at DATETIME, 
	PRIMARY KEY (couple_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [no key 0.00013s] {}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] CREATE INDEX ix_persona_config_couple_id ON persona_config (couple_id)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [no key 0.00022s] {}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE aidaily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255), 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [no key 0.00012s] {}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_daily_analysis_results (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	date DATETIME NOT NULL, 
	result TEXT NOT NULL, 
	created_at DATETIME, 
	modified_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE ai_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255) NOT NULL, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	last_msg_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [no key 0.00015s] {}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE couple_chat_summaries (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	couple_id VARCHAR(255) NOT NULL, 
	summary TEXT NOT NULL, 
	emb_id INTEGER, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(couple_id) REFERENCES couples (couple_id)
)


[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [no key 0.00016s] {}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] 
CREATE TABLE user_survey_responses (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	user_id VARCHAR(255), 
	question_id INTEGER, 
	choice_id INTEGER, 
	custom_input TEXT, 
	submitted_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(question_id) REFERENCES survey_questions (id), 
	FOREIGN KEY(choice_id) REFERENCES survey_choices (id)
)


[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [no key 0.00014s] {}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] INSERT INTO users (user_id, name, email, created_at, deleted_at, modified_at, birth, gender) VALUES (%(user_id)s, %(name)s, %(email)s, %(created_at)s, %(deleted_at)s, %(modified_at)s, %(birth)s, %(gender)s)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00013s] [{'user_id': '1', 'name': '지민', 'email': 'user1@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 19, 27, 307363), 'birth': None, 'gender': 'male'}, {'user_id': '2', 'name': '수아', 'email': 'user2@test.com', 'created_at': datetime.datetime(2025, 7, 10, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 19, 27, 307368), 'birth': None, 'gender': 'female'}]
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] INSERT INTO couples (couple_id, user_1, user_2, created_at, deleted_at, modified_at) VALUES (%(couple_id)s, %(user_1)s, %(user_2)s, %(created_at)s, %(deleted_at)s, %(modified_at)s)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] {'couple_id': '1', 'user_1': '1', 'user_2': '2', 'created_at': datetime.datetime(2023, 11, 3, 0, 0), 'deleted_at': None, 'modified_at': datetime.datetime(2025, 7, 14, 9, 19, 27, 343719)}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_questions (id, code, text, `order`) VALUES (%(id)s, %(code)s, %(text)s, %(order)s)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00008s] [{'id': 1, 'code': 'relationship_value', 'text': '연애에서 내가 가장 중요하게 생각하는 가치는 무엇인가요? (가장 가까운 걸 골라주세요)', 'order': 1}, {'id': 2, 'code': 'conflict_response', 'text': '연인과 다툼이 생겼을 때 나는 어떻게 대처하나요?', 'order': 2}, {'id': 3, 'code': 'affection_style', 'text': '애정 표현은 어떤 방식이 편한가요?', 'order': 3}, {'id': 4, 'code': 'contact_frequency', 'text': '연인과의 연락 빈도는 어느 정도가 좋다고 생각하나요?', 'order': 4}, {'id': 5, 'code': 'ideal_relationship', 'text': '내가 바라는 이상적인 연애는 어떤 모습인가요?', 'order': 5}, {'id': 6, 'code': 'mood_when_down', 'text': '기분이 안 좋을 때 나는 어떻게 행동하나요?', 'order': 6}, {'id': 7, 'code': 'expressing_emotions', 'text': '연인에게 감정을 표현할 때 어떤 방식이 편한가요?', 'order': 7}, {'id': 8, 'code': 'when_resentful', 'text': '서운하거나 불편한 일이 생기면 어떻게 하나요?', 'order': 8}  ... displaying 10 of 17 total bound parameter sets ...  {'id': 16, 'code': 'love_vs_life', 'text': '연애와 개인의 삶 중 우선순위는?', 'order': 16}, {'id': 17, 'code': 'different_values_response', 'text': '연애 중, 상대방이 나와 다른 가치관을 가졌을 때 나는?', 'order': 17}]
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] INSERT INTO survey_choices (id, question_id, text, tag) VALUES (%(id)s, %(question_id)s, %(text)s, %(tag)s)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00022s] [{'id': 1, 'question_id': 1, 'text': '신뢰와 믿음', 'tag': 'trust'}, {'id': 2, 'question_id': 1, 'text': '대화와 소통', 'tag': 'communication'}, {'id': 3, 'question_id': 1, 'text': '각자의 자유와 독립성', 'tag': 'independence'}, {'id': 4, 'question_id': 1, 'text': '애정 표현과 스킨십', 'tag': 'affection'}, {'id': 5, 'question_id': 1, 'text': '유머와 함께하는 즐거움', 'tag': 'humor'}, {'id': 6, 'question_id': 1, 'text': '기타 (직접 입력)', 'tag': 'custom'}, {'id': 7, 'question_id': 2, 'text': '내가 먼저 사과하고 푼다', 'tag': 'apologize_first'}, {'id': 8, 'question_id': 2, 'text': '감정을 정리한 뒤 대화한다', 'tag': 'cool_then_talk'}  ... displaying 10 of 91 total bound parameter sets ...  {'id': 90, 'question_id': 17, 'text': '피곤할 것 같으면 그냥 거리를 둔다', 'tag': 'distances_when_difficult'}, {'id': 91, 'question_id': 17, 'text': '기타 (직접 입력)', 'tag': 'custom'}]
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] INSERT INTO user_survey_responses (user_id, question_id, choice_id, custom_input, submitted_at) VALUES (%(user_id__0)s, %(question_id__0)s, %(choice_id__0)s, %(custom_input__0)s, %(submitted_at__0)s), (%(user_id__1)s, %(question_id__1)s, %(choice_id_ ... 801 characters truncated ... put__9)s, %(submitted_at__9)s) RETURNING user_survey_responses.id, user_survey_responses.id AS id__1
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00005s (insertmanyvalues) 1/1 (ordered)] {'custom_input__0': None, 'submitted_at__0': datetime.datetime(2025, 7, 14, 9, 19, 26, 43676), 'choice_id__0': 2, 'question_id__0': 1, 'user_id__0': '1', 'custom_input__1': None, 'submitted_at__1': datetime.datetime(2025, 7, 14, 9, 19, 26, 43691), 'choice_id__1': 8, 'question_id__1': 2, 'user_id__1': '1', 'custom_input__2': None, 'submitted_at__2': datetime.datetime(2025, 7, 14, 9, 19, 26, 43699), 'choice_id__2': 13, 'question_id__2': 3, 'user_id__2': '1', 'custom_input__3': None, 'submitted_at__3': datetime.datetime(2025, 7, 14, 9, 19, 26, 43706), 'choice_id__3': 21, 'question_id__3': 4, 'user_id__3': '1', 'custom_input__4': None, 'submitted_at__4': datetime.datetime(2025, 7, 14, 9, 19, 26, 43714), 'choice_id__4': 26, 'question_id__4': 5, 'user_id__4': '1', 'custom_input__5': None, 'submitted_at__5': datetime.datetime(2025, 7, 14, 9, 19, 26, 43720), 'choice_id__5': 1, 'question_id__5': 1, 'user_id__5': '2', 'custom_input__6': None, 'submitted_at__6': datetime.datetime(2025, 7, 14, 9, 19, 26, 43726), 'choice_id__6': 9, 'question_id__6': 2, 'user_id__6': '2', 'custom_input__7': None, 'submitted_at__7': datetime.datetime(2025, 7, 14, 9, 19, 26, 43733), 'choice_id__7': 16, 'question_id__7': 3, 'user_id__7': '2', 'custom_input__8': None, 'submitted_at__8': datetime.datetime(2025, 7, 14, 9, 19, 26, 43740), 'choice_id__8': 20, 'question_id__8': 4, 'user_id__8': '2', 'custom_input__9': None, 'submitted_at__9': datetime.datetime(2025, 7, 14, 9, 19, 26, 43748), 'choice_id__9': 25, 'question_id__9': 5, 'user_id__9': '2'}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] INSERT INTO emotion_logs (user_id, emotion, date, memo) VALUES (%(user_id__0)s, %(emotion__0)s, %(date__0)s, %(memo__0)s), (%(user_id__1)s, %(emotion__1)s, %(date__1)s, %(memo__1)s), (%(user_id__2)s, %(emotion__2)s, %(date__2)s, %(memo__2)s), (%(user ... 1451 characters truncated ... )s, %(emotion__26)s, %(date__26)s, %(memo__26)s) RETURNING emotion_logs.id, emotion_logs.id AS id__1
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s (insertmanyvalues) 1/1 (ordered)] {'memo__0': '작은 배려 하나에도 고마운 마음이 들었어.', 'date__0': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__0': '1', 'emotion__0': '고마움', 'memo__1': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__1': datetime.datetime(2025, 7, 1, 0, 0), 'user_id__1': '1', 'emotion__1': '기대감', 'memo__2': '너에게 미안한 마음이 계속 남았어.', 'date__2': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__2': '1', 'emotion__2': '미안함', 'memo__3': '약속 못 지켜서 마음이 무거웠어.', 'date__3': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__3': '1', 'emotion__3': '죄책감', 'memo__4': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__4': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__4': '1', 'emotion__4': '사랑', 'memo__5': '네게 더 따뜻하게 대해주고 싶었어.', 'date__5': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__5': '1', 'emotion__5': '다정함', 'memo__6': '너와의 대화가 편하고 좋았어.', 'date__6': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__6': '1', 'emotion__6': '친밀감', 'memo__7': '내 마음을 네가 몰라준 것 같아 속상했어.', 'date__7': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__7': '1', 'emotion__7': '억울함', 'memo__8': '너의 반응이 조금 서운했어.', 'date__8': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__8': '1', 'emotion__8': '서운함', 'memo__9': '너랑 함께한 시간이 정말 행복했어.', 'date__9': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__9': '1', 'emotion__9': '행복', 'memo__10': '네가 있어줘서 고마운 하루였어.', 'date__10': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__10': '1', 'emotion__10': '감사', 'memo__11': '우리는 서로 믿고 있다는 확신이 생겼어.', 'date__11': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__11': '1', 'emotion__11': '신뢰', 'memo__12': '너에 대한 애정이 넘쳤어.', 'date__12': datetime.datetime(2025, 7, 7, 0, 0) ... 8 parameters truncated ... 'user_id__14': '2', 'emotion__14': '바쁨', 'memo__15': '너의 반응이 조금 서운했어.', 'date__15': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__15': '2', 'emotion__15': '서운함', 'memo__16': '기대했던 만큼 반응이 없어서 실망했어.', 'date__16': datetime.datetime(2025, 7, 2, 0, 0), 'user_id__16': '2', 'emotion__16': '실망감', 'memo__17': '네 입장에서 생각해보게 됐어.', 'date__17': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__17': '2', 'emotion__17': '이해', 'memo__18': '네게 더 따뜻하게 대해주고 싶었어.', 'date__18': datetime.datetime(2025, 7, 3, 0, 0), 'user_id__18': '2', 'emotion__18': '다정함', 'memo__19': '너의 말투나 행동이 참 좋았어.', 'date__19': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__19': '2', 'emotion__19': '호감', 'memo__20': '너와 있으면 참 편안해.', 'date__20': datetime.datetime(2025, 7, 4, 0, 0), 'user_id__20': '2', 'emotion__20': '편안함', 'memo__21': '오늘은 너랑 보내는 시간이 기대됐어.', 'date__21': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__21': '2', 'emotion__21': '기대감', 'memo__22': '조금만 더 신경 써줬으면 좋겠다는 생각이 들었어.', 'date__22': datetime.datetime(2025, 7, 5, 0, 0), 'user_id__22': '2', 'emotion__22': '불만', 'memo__23': '네가 챙겨주는 모습에 기뻤어.', 'date__23': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__23': '2', 'emotion__23': '기쁨', 'memo__24': '사소한 행동에도 감동했어.', 'date__24': datetime.datetime(2025, 7, 6, 0, 0), 'user_id__24': '2', 'emotion__24': '감동', 'memo__25': '너에 대한 사랑이 더 깊어진 하루였어.', 'date__25': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__25': '2', 'emotion__25': '사랑', 'memo__26': '네가 있다는 사실만으로도 마음이 놓였어.', 'date__26': datetime.datetime(2025, 7, 7, 0, 0), 'user_id__26': '2', 'emotion__26': '안정감'}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] INSERT INTO messages (user_id, couple_id, content, image_url, has_image, created_at, deleted_at, is_delivered, embed_index) VALUES (%(user_id__0)s, %(couple_id__0)s, %(content__0)s, %(image_url__0)s, %(has_image__0)s, %(created_at__0)s, %(deleted_at_ ... 5028 characters truncated ... (is_delivered__29)s, %(embed_index__29)s) RETURNING messages.chat_id, messages.chat_id AS chat_id__1
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00012s (insertmanyvalues) 1/1 (ordered)] {'is_delivered__0': 1, 'deleted_at__0': None, 'created_at__0': datetime.datetime(2025, 7, 1, 17, 0), 'content__0': '잘 잤어? 오늘도 힘내자! 😊', 'has_image__0': 0, 'embed_index__0': None, 'couple_id__0': '1', 'user_id__0': '1', 'image_url__0': None, 'is_delivered__1': 1, 'deleted_at__1': None, 'created_at__1': datetime.datetime(2025, 7, 1, 17, 40), 'content__1': '응 고마워~ 오늘 일정 좀 많아서 바쁠 듯해.', 'has_image__1': 0, 'embed_index__1': None, 'couple_id__1': '1', 'user_id__1': '2', 'image_url__1': None, 'is_delivered__2': 1, 'deleted_at__2': None, 'created_at__2': datetime.datetime(2025, 7, 1, 18, 20), 'content__2': '나도 회의 두 개 있어서 정신 없을 듯… 이따 끝나고 연락하자~', 'has_image__2': 0, 'embed_index__2': None, 'couple_id__2': '1', 'user_id__2': '1', 'image_url__2': None, 'is_delivered__3': 1, 'deleted_at__3': None, 'created_at__3': datetime.datetime(2025, 7, 1, 19, 0), 'content__3': '좋아! 우리 저녁엔 통화하자 :)', 'has_image__3': 0, 'embed_index__3': None, 'couple_id__3': '1', 'user_id__3': '2', 'image_url__3': None, 'is_delivered__4': 1, 'deleted_at__4': None, 'created_at__4': datetime.datetime(2025, 7, 2, 17, 0), 'content__4': '어제 약속했는데 통화 못했네 😕', 'has_image__4': 0, 'embed_index__4': None, 'couple_id__4': '1', 'user_id__4': '2', 'image_url__4': None, 'is_delivered__5': 1, 'deleted_at__5': None, 'created_at__5': datetime.datetime(2025, 7, 2, 17, 40), 'content__5': '미안… 회의 끝나고 뻗어버렸어 ㅠ', 'has_image__5': 0 ... 170 parameters truncated ... 'has_image__24': 0, 'embed_index__24': None, 'couple_id__24': '1', 'user_id__24': '1', 'image_url__24': None, 'is_delivered__25': 1, 'deleted_at__25': None, 'created_at__25': datetime.datetime(2025, 7, 6, 19, 0), 'content__25': '나도야~ 🥰', 'has_image__25': 0, 'embed_index__25': None, 'couple_id__25': '1', 'user_id__25': '2', 'image_url__25': None, 'is_delivered__26': 1, 'deleted_at__26': None, 'created_at__26': datetime.datetime(2025, 7, 7, 17, 0), 'content__26': '일주일 진짜 빠르다', 'has_image__26': 0, 'embed_index__26': None, 'couple_id__26': '1', 'user_id__26': '1', 'image_url__26': None, 'is_delivered__27': 1, 'deleted_at__27': None, 'created_at__27': datetime.datetime(2025, 7, 7, 17, 40), 'content__27': '그러게~ 우리 이번 주도 잘 버텼다', 'has_image__27': 0, 'embed_index__27': None, 'couple_id__27': '1', 'user_id__27': '2', 'image_url__27': None, 'is_delivered__28': 1, 'deleted_at__28': None, 'created_at__28': datetime.datetime(2025, 7, 7, 18, 20), 'content__28': '너 있어서 든든했어', 'has_image__28': 0, 'embed_index__28': None, 'couple_id__28': '1', 'user_id__28': '1', 'image_url__28': None, 'is_delivered__29': 1, 'deleted_at__29': None, 'created_at__29': datetime.datetime(2025, 7, 7, 19, 0), 'content__29': '다음 주도 잘 지내보자! 사랑해 😘', 'has_image__29': 0, 'embed_index__29': None, 'couple_id__29': '1', 'user_id__29': '2', 'image_url__29': None}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id 
FROM users
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00006s] {}
[2025-07-14 18:19:27][INFO][jobs.analysis_personality] [성향 요약] 2명 대상 분석 시작
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00007s] {'user_id_1': '1'}
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:27][INFO][sqlalchemy.engine.Engine] [generated in 0.00010s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:19:31][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:19:31][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:31][INFO][sqlalchemy.engine.Engine] [generated in 0.00030s] {'user_id_1': '1', 'param_1': 1}
[2025-07-14 18:19:31][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:19:31][INFO][sqlalchemy.engine.Engine] [generated in 0.00028s] {'user_id': '1', 'summary': '지민 highly values communication in relationships, prioritizing open and honest dialogue. When conflicts arise, they prefer to remain calm initially an ... (249 characters truncated) ... their partner regularly. Ultimately, they seek a deep, meaningful connection that combines these elements to build a strong and lasting relationship.', 'created_at': datetime.datetime(2025, 7, 14, 9, 19, 31, 709315), 'updated_at': datetime.datetime(2025, 7, 14, 9, 19, 31, 709322)}
[2025-07-14 18:19:31][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:31][INFO][jobs.analysis_personality] [성향 요약] 사용자 1 요약 저장 완료
[2025-07-14 18:19:31][INFO][sqlalchemy.engine.Engine] BEGIN (implicit)
[2025-07-14 18:19:31][INFO][sqlalchemy.engine.Engine] SELECT survey_questions.code AS survey_questions_code, survey_questions.text AS question_text, survey_choices.text AS choice_text, survey_choices.tag AS survey_choices_tag, user_survey_responses.custom_input AS user_survey_responses_custom_input 
FROM survey_questions INNER JOIN user_survey_responses ON survey_questions.id = user_survey_responses.question_id LEFT OUTER JOIN survey_choices ON survey_choices.id = user_survey_responses.choice_id 
WHERE user_survey_responses.user_id = %(user_id_1)s
[2025-07-14 18:19:31][INFO][sqlalchemy.engine.Engine] [cached since 4.068s ago] {'user_id_1': '2'}
[2025-07-14 18:19:31][INFO][sqlalchemy.engine.Engine] SELECT users.user_id AS users_user_id, users.name AS users_name, users.email AS users_email, users.created_at AS users_created_at, users.deleted_at AS users_deleted_at, users.modified_at AS users_modified_at, users.birth AS users_birth, users.gender AS users_gender 
FROM users 
WHERE users.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:31][INFO][sqlalchemy.engine.Engine] [cached since 4.067s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:19:33][INFO][httpx] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-07-14 18:19:33][INFO][sqlalchemy.engine.Engine] SELECT user_trait_summaries.id AS user_trait_summaries_id, user_trait_summaries.user_id AS user_trait_summaries_user_id, user_trait_summaries.summary AS user_trait_summaries_summary, user_trait_summaries.created_at AS user_trait_summaries_created_at, user_trait_summaries.updated_at AS user_trait_summaries_updated_at 
FROM user_trait_summaries 
WHERE user_trait_summaries.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
[2025-07-14 18:19:33][INFO][sqlalchemy.engine.Engine] [cached since 2.268s ago] {'user_id_1': '2', 'param_1': 1}
[2025-07-14 18:19:33][INFO][sqlalchemy.engine.Engine] INSERT INTO user_trait_summaries (user_id, summary, created_at, updated_at) VALUES (%(user_id)s, %(summary)s, %(created_at)s, %(updated_at)s)
[2025-07-14 18:19:33][INFO][sqlalchemy.engine.Engine] [cached since 2.268s ago] {'user_id': '2', 'summary': '수아 values trust as the foundation of their relationships, seeking partners who are reliable and honest. In times of conflict, they prefer a strategy  ... (280 characters truncated) ... being overwhelming. Ultimately, they strive for a relationship that balances closeness with independence, ensuring personal space and mutual respect.', 'created_at': datetime.datetime(2025, 7, 14, 9, 19, 33, 976774), 'updated_at': datetime.datetime(2025, 7, 14, 9, 19, 33, 976782)}
[2025-07-14 18:19:33][INFO][sqlalchemy.engine.Engine] COMMIT
[2025-07-14 18:19:34][INFO][jobs.analysis_personality] [성향 요약] 사용자 2 요약 저장 완료
[2025-07-14 18:19:34][INFO][jobs.analysis_personality] [성향 요약] 전체 완료
[2025-07-14 18:19:34][INFO][root] 유저 성향 분석/요약 완료
